"use strict";var V=Object.create;var l=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var b=(t,e)=>{for(var n in e)l(t,n,{get:e[n],enumerable:!0})},w=(t,e,n,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of N(e))!R.call(t,r)&&r!==n&&l(t,r,{get:()=>e[r],enumerable:!(i=P(e,r))||i.enumerable});return t};var C=(t,e,n)=>(n=t!=null?V(x(t)):{},w(e||!t||!t.__esModule?l(n,"default",{value:t,enumerable:!0}):n,t)),A=t=>w(l({},"__esModule",{value:!0}),t);var v={};b(v,{default:()=>U});module.exports=A(v);var o=require("@raycast/api"),u=require("react");var m=require("@raycast/api"),p=require("child_process"),f=C(require("util")),L=f.default.promisify(p.exec),D=(0,m.getPreferenceValues)(),F="/Applications/Cloudflare WARP.app/Contents/Resources/warp-cli",T=D.wrapCliPath??F;function d(t){return L(`"${T}" ${t}`)}async function E(){try{let{stdout:t}=await d("connect");if(t.includes("Success"))return!0;throw new Error("Failed to connect")}catch(t){return console.error(t),!1}}async function I(){try{let{stdout:t}=await d("disconnect");if(t.includes("Success"))return!0;throw new Error("Failed to connect")}catch(t){return console.error(t),!1}}async function h(){let{stdout:t}=await d("get-virtual-networks"),e=t.trim().split(`
`),n=e[1].split(" ")[2]?.trim()??"",i=e.slice(2).filter(a=>a!==""),r=[],s=0;for(;s<i.length&&!(s+4>i.length);){let[a,k,S,y]=i.slice(s,s+4);r.push({id:a.substring(4),name:k.substring(6),comment:S.substring(8),default:y.substring(9)==="true",active:a.substring(4)===n}),s+=4}return r}async function g(t){try{if(!await I())throw new Error("Failed to disconnect");let{stdout:n}=await d(`set-virtual-network ${t}`);if(!n.includes("Success"))throw new Error("Failed to switch network");if(!await E())throw new Error("Failed to connect");return!0}catch(e){return console.error(e),!1}}var c=require("react/jsx-runtime"),W=({virtualNetwork:t,onSwitchVirtualNetwork:e})=>{let n=[];return t.active&&n.push({text:"Active"}),t.default&&n.push({text:"Default"}),(0,c.jsx)(o.List.Item,{id:t.id,title:t.name,subtitle:t.comment,actions:(0,c.jsx)(o.ActionPanel,{title:"Actions",children:(0,c.jsx)(o.Action,{onAction:()=>e(t.id),title:"Switch"})}),accessories:n},t.id)},U=()=>{let[t,e]=(0,u.useState)(!0),[n,i]=(0,u.useState)([]);(0,u.useEffect)(()=>{e(!0),h().then(s=>i(s)).then(()=>e(!1))},[]);let r=async s=>{await g(s)?await(0,o.showHUD)("Switched Virtual Network",{clearRootSearch:!0,popToRootType:o.PopToRootType.Immediate}):await(0,o.showToast)({style:o.Toast.Style.Failure,title:"Failed to switch Virtual Network"})};return!t&&n.length===0?(0,c.jsxs)(o.List,{searchBarPlaceholder:"Search Virtual Networks",isLoading:t,children:[(0,c.jsx)(o.List.EmptyView,{title:"No Virtual Networks found"}),";"]}):(0,c.jsx)(o.List,{searchBarPlaceholder:"Search Virtual Networks",isLoading:t,children:n.map(s=>(0,c.jsx)(W,{virtualNetwork:s,onSwitchVirtualNetwork:r},s.id))})};
