{
  "version": 3,
  "sources": ["../src/google-search.ts", "../src/utils/opener.ts", "../src/utils/readtxt.ts"],
  "sourcesContent": ["import { LaunchProps, showHUD } from \"@raycast/api\";\nimport { GoogleSearchOpner } from \"./utils/opener\";\nimport { isNotEmpty, readtext } from \"./utils/readtxt\";\n\nexport default async (props: LaunchProps) => {\n  const fallbackText = props.fallbackText;\n  try {\n    const text = await readtext(fallbackText);\n    if (isNotEmpty(text)) {\n      await GoogleSearchOpner(text);\n      showHUD(\"\uD83C\uDF89 Open Google search\");\n    } else {\n      showHUD(\"\u274C No text found in clipboard\");\n    }\n  } catch (error) {\n    showHUD(\"\u274C Cannot open Google!\");\n  }\n};\n", "import { open } from \"@raycast/api\";\n\nexport const urlBuilder = (prefix: string, text: string) => {\n  return /^https?:\\/\\//g.test(text) ? text : `${prefix}${encodeURIComponent(text)}`;\n};\n\nexport const GoogleSearchOpner = async (text: string) => {\n  await open(urlBuilder(`https://google.com/search?q=`, text));\n};\n\nexport const GithubSearchOpner = async (text: string) => {\n  await open(urlBuilder(`https://github.com/search?q=`, text));\n};\n\nexport const GithubRepoOpner = async (text: string) => {\n  await open(`https://github.com/${text}`);\n};\n\nexport const DeeplOpner = async (text: string) => {\n  await open(`https://deepl.com/translator#auto/auto/${text}`);\n};\n", "import { getSelectedText, Clipboard } from \"@raycast/api\";\n\nexport const isNotEmpty = (string: string | null | undefined): string is string => {\n  return string != null && String(string).trim().length > 0;\n};\n\nexport const readtext = (fallbackText?: string) =>\n  isNotEmpty(fallbackText)\n    ? fallbackText?.trim()\n    : getSelectedText()\n        .then((text) => (isNotEmpty(text) ? text : Clipboard.readText()))\n        .catch(() => undefined);\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAqC,wBCArC,IAAAC,EAAqB,wBAERC,EAAa,CAACC,EAAgBC,IAClC,gBAAgB,KAAKA,CAAI,EAAIA,EAAO,GAAGD,IAAS,mBAAmBC,CAAI,IAGnEC,EAAoB,MAAOD,GAAiB,CACvD,QAAM,QAAKF,EAAW,+BAAgCE,CAAI,CAAC,CAC7D,ECRA,IAAAE,EAA2C,wBAE9BC,EAAcC,GAClBA,GAAU,MAAQ,OAAOA,CAAM,EAAE,KAAK,EAAE,OAAS,EAG7CC,EAAYC,GACvBH,EAAWG,CAAY,EACnBA,GAAc,KAAK,KACnB,mBAAgB,EACb,KAAMC,GAAUJ,EAAWI,CAAI,EAAIA,EAAO,YAAU,SAAS,CAAE,EAC/D,MAAM,IAAG,EAAY,EFP9B,IAAOC,EAAQ,MAAOC,GAAuB,CAC3C,IAAMC,EAAeD,EAAM,aAC3B,GAAI,CACF,IAAME,EAAO,MAAMC,EAASF,CAAY,EACpCG,EAAWF,CAAI,GACjB,MAAMG,EAAkBH,CAAI,KAC5B,WAAQ,8BAAuB,MAE/B,WAAQ,mCAA8B,CAE1C,MAAE,IACA,WAAQ,4BAAuB,CACjC,CACF",
  "names": ["google_search_exports", "__export", "google_search_default", "__toCommonJS", "import_api", "import_api", "urlBuilder", "prefix", "text", "GoogleSearchOpner", "import_api", "isNotEmpty", "string", "readtext", "fallbackText", "text", "google_search_default", "props", "fallbackText", "text", "readtext", "isNotEmpty", "GoogleSearchOpner"]
}
