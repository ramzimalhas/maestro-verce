{
  "version": 3,
  "sources": ["../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js", "../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../node_modules/use-sync-external-store/shim/index.js", "../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js", "../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js", "../node_modules/use-sync-external-store/shim/with-selector.js", "../src/menubar.tsx", "../src/store/actions.ts", "../extension.json", "../src/utils.ts", "../node_modules/zustand/esm/vanilla.mjs", "../node_modules/zustand/esm/index.mjs", "../node_modules/zustand/esm/middleware.mjs", "../src/store/history.ts"],
  "sourcesContent": ["/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n", "/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n", "/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n", "import { Icon, LaunchType, MenuBarExtra, launchCommand } from \"@raycast/api\";\nimport { useActionsAreReady, useActionsState } from \"./store/actions\";\nimport { useHistoryState } from \"./store/history\";\nimport { truncateText } from \"./utils\";\n\nexport default function MenuBar() {\n  const ready = useActionsAreReady();\n  const actions = useActionsState((state) => state.actions.sort((a, b) => a.name.localeCompare(b.name)));\n  const history = useHistoryState((state) => state.history.sort((a, b) => b.timestamp - a.timestamp));\n\n  const regular = actions.filter((action) => !action.favorite);\n  const favorites = actions.filter((action) => action.favorite);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const openCommand = (name: string, args?: Record<string, any>) => {\n    launchCommand({\n      ownerOrAuthorName: \"quiknull\",\n      extensionName: \"alice-ai\",\n      type: LaunchType.UserInitiated,\n      name,\n      arguments: args,\n    });\n  };\n\n  const renderFavorites = () => {\n    if (favorites.length > 0) {\n      return (\n        <MenuBarExtra.Section title=\"Favorites\">\n          {favorites.map((action) => (\n            <MenuBarExtra.Item\n              key={action.id}\n              title={action.name}\n              icon={{ source: Icon.Checkmark, tintColor: action.color }}\n              onAction={() => {\n                openCommand(\"commands\", { id: action.id });\n              }}\n            />\n          ))}\n        </MenuBarExtra.Section>\n      );\n    }\n\n    return null;\n  };\n\n  const renderRegular = () => {\n    return regular.map((action) => (\n      <MenuBarExtra.Item\n        key={action.id}\n        title={action.name}\n        icon={{ source: Icon.Dot, tintColor: action.color }}\n        onAction={() => {\n          openCommand(\"commands\", { id: action.id });\n        }}\n      />\n    ));\n  };\n\n  return (\n    <MenuBarExtra isLoading={!ready} icon={Icon.Wand} tooltip=\"Alice AI\">\n      {renderFavorites()}\n      <MenuBarExtra.Section title=\"Actions\" />\n      {renderRegular()}\n      <MenuBarExtra.Section>\n        <MenuBarExtra.Submenu title=\"History\" icon={Icon.Clock}>\n          {history.map((item) => (\n            <MenuBarExtra.Item\n              key={item.id}\n              title={truncateText(item.prompt, 64)}\n              subtitle={`\\n${truncateText(item.result, 64)}\\n${item.action.name}`}\n              icon={{ source: Icon.Clock, tintColor: item.action.color }}\n              onAction={() => {\n                openCommand(\"history\", { id: item.id });\n              }}\n            />\n          ))}\n        </MenuBarExtra.Submenu>\n      </MenuBarExtra.Section>\n      <MenuBarExtra.Section>\n        <MenuBarExtra.Item title=\"Create Action\" icon={Icon.Plus} onAction={() => openCommand(\"create\")} />\n      </MenuBarExtra.Section>\n    </MenuBarExtra>\n  );\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { randomUUID } from \"crypto\";\nimport { useState } from \"react\";\nimport extension from \"../../extension.json\";\nimport { Action } from \"../types\";\nimport { Colors, createStore } from \"../utils\";\n\ninterface ActionState {\n  actions: Action[];\n  addAction: (action: Omit<Action, \"id\">) => void;\n  editAction: (action: Action) => void;\n  removeAction: (id: string) => void;\n  addToFavorites: (id: string) => void;\n  removeFromFavorites: (id: string) => void;\n}\n\nconst initialState: Action[] = [\n  {\n    id: \"b0259928-4a63-4e27-9d3b-df76c6a8e290\",\n    name: \"Summarize\",\n    color: Colors.Blue,\n    description: \"Provide a concise summary of the provided text, highlighting the main points and key information.\",\n    systemPrompt: \"Summarize the key points and main information from the following text:\",\n    model: \"gpt-3.5-turbo\",\n    temperature: \"0.7\",\n    maxTokens: \"-1\",\n    favorite: false,\n  },\n  {\n    id: \"34e4b5f1-1b7a-4b8b-8aaf-e8d9a8f8c502\",\n    name: \"Improve Grammar\",\n    color: Colors.Blue,\n    description: \"Correct grammatical errors and enhance the readability of the provided text, ensuring clarity and proper language use.\",\n    systemPrompt: \"Improve the grammar and readability of the following text:\",\n    model: \"gpt-3.5-turbo\",\n    temperature: \"0.7\",\n    maxTokens: \"-1\",\n    favorite: false,\n  },\n  {\n    id: \"9f34b8e2-4d93-4c9b-9e79-4228a3d0f97b\",\n    name: \"Rewrite\",\n    color: Colors.Blue,\n    description:\n      \"Rewrite the provided text to convey the same meaning in a different way, offering a fresh perspective or alternative wording.\",\n    systemPrompt: \"Rewrite the following text to convey the same meaning in a different way:\",\n    model: \"gpt-3.5-turbo\",\n    temperature: \"0.7\",\n    maxTokens: \"-1\",\n    favorite: false,\n  },\n  {\n    id: \"eabc2912-f2ad-4b5a-80d2-993b5f3e5c21\",\n    name: \"Explain This Code\",\n    color: Colors.Orange,\n    description:\n      \"Provide a detailed explanation of the provided code snippet, including its purpose, how it works, and any key concepts involved.\",\n    systemPrompt: \"Explain the purpose and functionality of the following code snippet:\",\n    model: \"gpt-3.5-turbo\",\n    temperature: \"0.7\",\n    maxTokens: \"-1\",\n    favorite: false,\n  },\n] as Action[];\n\nexport const useActionsState = createStore<ActionState>({\n  name: \"actions\",\n  version: extension.version,\n  state: (set, get) => ({\n    actions: initialState,\n\n    addAction: (action: Omit<Action, \"id\">) => {\n      set({\n        actions: [\n          ...get().actions,\n          {\n            ...action,\n            id: randomUUID(),\n            favorite: false,\n          },\n        ],\n      });\n    },\n    removeAction: (id: string) => {\n      set({\n        actions: get().actions.filter((item) => item.id !== id),\n      });\n    },\n    editAction: (action: Action) => {\n      set({\n        actions: get().actions.map((item) => (item.id === action.id ? action : item)),\n      });\n    },\n    addToFavorites: (id: string) => {\n      set({\n        actions: get().actions.map((item) => (item.id === id ? { ...item, favorite: true } : item)),\n      });\n    },\n    removeFromFavorites: (id: string) => {\n      set({\n        actions: get().actions.map((item) => (item.id === id ? { ...item, favorite: false } : item)),\n      });\n    },\n  }),\n  migrate: (persistedState: any, version: number) => {\n    switch (version) {\n      case 1: // Migrate from v1 to v2, update model names from gpt-4-turbo-preview to gpt-4-turbo\n        persistedState.actions = persistedState.actions.map((action: Action) => ({\n          ...action,\n          model: action.model.replace(\"gpt-4-turbo-preview\", \"gpt-4-turbo\"),\n        }));\n    }\n\n    return persistedState;\n  },\n});\n\nexport const useActionsAreReady = () => {\n  const [ready, setReady] = useState(false);\n\n  useActionsState.persist.onFinishHydration(() => {\n    setReady(true);\n  });\n\n  return ready;\n};\n", "{\n  \"version\": 2\n}", "import { Color, LocalStorage, getPreferenceValues } from \"@raycast/api\";\nimport { StateCreator, create } from \"zustand\";\nimport { createJSONStorage, persist } from \"zustand/middleware\";\n\nexport const Infinity32Bit = 2147483647;\n\nexport const Colors = {\n  Blue: Color.Blue,\n  Green: Color.Green,\n  Magenta: Color.Magenta,\n  Orange: Color.Orange,\n  Purple: Color.Purple,\n  Red: Color.Red,\n  Yellow: Color.Yellow,\n};\n\nexport function createActionDeepLink(id: string) {\n  return `raycast://extensions/quiknull/alice-ai/commands?arguments=${encodeURIComponent(`{\"id\":\"${id}\"}`)}`;\n}\n\nexport function getPreference(key: keyof Preferences): string {\n  return getPreferenceValues<Preferences>()[key];\n}\n\ninterface StoreOptions<T> {\n  name: string;\n  state: StateCreator<T>;\n  version?: number;\n  migrate?: (persistedState: unknown, version: number) => T;\n}\n\nexport function createStore<T>({ name, version, state, migrate }: StoreOptions<T>) {\n  return create<T>()(\n    persist(state, {\n      name,\n      version,\n      migrate,\n      storage: createJSONStorage(() => ({\n        getItem: (name: string): Promise<string | null> => LocalStorage.getItem(name).then((value) => value?.toString() ?? null),\n        setItem: (name: string, value: string) => LocalStorage.setItem(name, value),\n        removeItem: (name: string) => LocalStorage.removeItem(name),\n      })),\n    }),\n  );\n}\n\nexport function truncateText(text: string, maxLength: number): string {\n  text = text.trim().replace(/\\s+/g, \" \");\n  if (text.length <= maxLength) {\n    return text;\n  } else {\n    return text.slice(0, maxLength) + \"...\";\n  }\n}\n", "const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n", "import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n", "const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { randomUUID } from \"crypto\";\nimport extension from \"../../extension.json\";\nimport { History } from \"../types\";\nimport { createStore } from \"../utils\";\n\ninterface HistoryState {\n  history: History[];\n  addItem: (history: Omit<History, \"id\">) => void;\n  removeItem: (id: string) => void;\n  removeAll: () => void;\n}\n\nconst initialState = [] as History[];\n\nexport const useHistoryState = createStore<HistoryState>({\n  name: \"history\",\n  version: extension.version,\n  state: (set) => ({\n    history: initialState,\n\n    addItem: (entry: Omit<History, \"id\">) => {\n      set((state) => ({\n        history: [\n          ...state.history,\n          {\n            id: randomUUID(),\n            ...entry,\n          },\n        ],\n      }));\n    },\n    removeItem: (id: string) => {\n      set((state) => ({\n        history: state.history.filter((item) => item.id !== id),\n      }));\n    },\n    removeAll: () => {\n      set({\n        history: [],\n      });\n    },\n  }),\n  migrate: (persistedState: any) => {\n    return persistedState;\n  },\n});\n"],
  "mappings": "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",
  "names": ["require_use_sync_external_store_shim_production_min", "__commonJSMin", "exports", "e", "h", "a", "b", "k", "l", "m", "n", "p", "q", "d", "f", "c", "g", "r", "t", "u", "require_use_sync_external_store_shim_development", "__commonJSMin", "exports", "React", "ReactSharedInternals", "error", "format", "_len2", "args", "_key2", "printWarning", "level", "ReactDebugCurrentFrame", "stack", "argsWithFormat", "item", "is", "x", "y", "objectIs", "useState", "useEffect", "useLayoutEffect", "useDebugValue", "didWarnOld18Alpha", "didWarnUncachedGetSnapshot", "useSyncExternalStore", "subscribe", "getSnapshot", "getServerSnapshot", "value", "cachedValue", "_useState", "inst", "forceUpdate", "checkIfSnapshotChanged", "handleStoreChange", "latestGetSnapshot", "prevValue", "nextValue", "useSyncExternalStore$1", "canUseDOM", "isServerEnvironment", "shim", "useSyncExternalStore$2", "require_shim", "__commonJSMin", "exports", "module", "require_with_selector_production_min", "__commonJSMin", "exports", "h", "n", "p", "a", "b", "q", "r", "t", "u", "v", "w", "e", "l", "g", "c", "f", "d", "k", "m", "require_with_selector_development", "__commonJSMin", "exports", "React", "shim", "is", "x", "objectIs", "useSyncExternalStore", "useRef", "useEffect", "useMemo", "useDebugValue", "useSyncExternalStoreWithSelector", "subscribe", "getSnapshot", "getServerSnapshot", "selector", "isEqual", "instRef", "inst", "_useMemo", "hasMemo", "memoizedSnapshot", "memoizedSelection", "memoizedSelector", "nextSnapshot", "_nextSelection", "currentSelection", "prevSnapshot", "prevSelection", "nextSelection", "maybeGetServerSnapshot", "getSnapshotWithSelector", "getServerSnapshotWithSelector", "getSelection", "getServerSelection", "value", "require_with_selector", "__commonJSMin", "exports", "module", "menubar_exports", "__export", "MenuBar", "__toCommonJS", "import_api", "import_crypto", "import_react", "extension_default", "import_api", "import_meta", "createStoreImpl", "createState", "state", "listeners", "setState", "partial", "replace", "nextState", "previousState", "listener", "getState", "api", "initialState", "createStore", "import_react", "import_with_selector", "import_meta", "useDebugValue", "ReactExports", "useSyncExternalStoreWithSelector", "useSyncExternalStoreExports", "didWarnAboutEqualityFn", "identity", "arg", "useStore", "api", "selector", "equalityFn", "slice", "createImpl", "createState", "createStore", "useBoundStore", "create", "import_meta", "createJSONStorage", "getStorage", "options", "storage", "name", "_a", "parse", "str2", "str", "newValue", "toThenable", "fn", "input", "result", "onFulfilled", "_onRejected", "e", "_onFulfilled", "onRejected", "oldImpl", "config", "baseOptions", "set", "get", "api", "state", "persistedState", "currentState", "hasHydrated", "hydrationListeners", "finishHydrationListeners", "args", "thenableSerialize", "setItem", "errorInSync", "thenable", "serializedValue", "savedSetState", "replace", "configResult", "stateFromStorage", "hydrate", "cb", "postRehydrationCallback", "storageValue", "deserializedStorageValue", "migratedState", "_a2", "newOptions", "newImpl", "_b", "persistImpl", "import_meta", "persist", "Colors", "createStore", "name", "version", "state", "migrate", "create", "persist", "createJSONStorage", "value", "truncateText", "text", "maxLength", "initialState", "Colors", "useActionsState", "createStore", "extension_default", "set", "get", "action", "id", "item", "persistedState", "version", "useActionsAreReady", "ready", "setReady", "import_crypto", "initialState", "useHistoryState", "createStore", "extension_default", "set", "entry", "state", "id", "item", "persistedState", "import_jsx_runtime", "MenuBar", "ready", "useActionsAreReady", "actions", "useActionsState", "state", "a", "b", "history", "useHistoryState", "regular", "action", "favorites", "openCommand", "name", "args", "renderFavorites", "renderRegular", "item", "truncateText"]
}
