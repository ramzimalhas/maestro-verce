{
  "version": 3,
  "sources": ["../src/descript-to-youtube-chapters.tsx"],
  "sourcesContent": ["import { getSelectedFinderItems, LaunchProps, showHUD, showToast, Toast } from \"@raycast/api\";\nimport fs from \"fs\";\n\nexport default async function main(props: LaunchProps) {\n  if (props.launchContext?.path) {\n    await updateFileContents(props.launchContext?.path);\n    await showHUD(\"File updated!\");\n  } else {\n    try {\n      const [transcriptFile] = await getSelectedFinderItems();\n      await updateFileContents(transcriptFile.path);\n      await showHUD(\"File updated!\");\n    } catch (error) {\n      await showToast({\n        style: Toast.Style.Failure,\n        title: \"Cannot find file.\",\n        message: \"Make sure the file is selected in Finder\",\n      });\n    }\n  }\n}\n\nasync function updateFileContents(filePath: string): Promise<void> {\n  if (!filePath.endsWith(\".txt\")) {\n    throw new Error(\"The file must have a .txt extension\");\n  }\n  return new Promise((resolve, reject) => {\n    fs.readFile(filePath, \"utf-8\", (err, data) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      const updatedData = convertInput(data);\n\n      fs.writeFile(filePath, updatedData, \"utf-8\", (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve();\n      });\n    });\n  });\n}\n\nfunction convertInput(input: string) {\n  const lines = input.split(\"\\n\");\n  const output = [];\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/^\\[\\d\\d:\\d\\d:\\d\\d\\].+/)) {\n      const title = lines[i].split(\"]\")[1].trim();\n      if (title !== \"\") {\n        output.push(lines[i].split(\"---\")[0].trim());\n      }\n    }\n  }\n\n  return output.join(\"\\n\");\n}\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA+E,wBAC/EC,EAAe,iBAEf,eAAOH,EAA4BI,EAAoB,CACrD,GAAIA,EAAM,eAAe,KACvB,MAAMC,EAAmBD,EAAM,eAAe,IAAI,EAClD,QAAM,WAAQ,eAAe,MAE7B,IAAI,CACF,GAAM,CAACE,CAAc,EAAI,QAAM,0BAAuB,EACtD,MAAMD,EAAmBC,EAAe,IAAI,EAC5C,QAAM,WAAQ,eAAe,CAC/B,MAAE,CACA,QAAM,aAAU,CACd,MAAO,QAAM,MAAM,QACnB,MAAO,oBACP,QAAS,0CACX,CAAC,CACH,CAEJ,CAEA,eAAeD,EAAmBE,EAAiC,CACjE,GAAI,CAACA,EAAS,SAAS,MAAM,EAC3B,MAAM,IAAI,MAAM,qCAAqC,EAEvD,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,EAAAC,QAAG,SAASH,EAAU,QAAS,CAACI,EAAKC,IAAS,CAC5C,GAAID,EAAK,CACPF,EAAOE,CAAG,EACV,MACF,CAEA,IAAME,EAAcC,EAAaF,CAAI,EAErC,EAAAF,QAAG,UAAUH,EAAUM,EAAa,QAAUF,GAAQ,CACpD,GAAIA,EAAK,CACPF,EAAOE,CAAG,EACV,MACF,CAEAH,EAAQ,CACV,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAEA,SAASM,EAAaC,EAAe,CACnC,IAAMC,EAAQD,EAAM,MAAM;AAAA,CAAI,EACxBE,EAAS,CAAC,EAEhB,QAASC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAC5BF,EAAME,GAAG,MAAM,uBAAuB,GAC1BF,EAAME,GAAG,MAAM,GAAG,EAAE,GAAG,KAAK,IAC5B,IACZD,EAAO,KAAKD,EAAME,GAAG,MAAM,KAAK,EAAE,GAAG,KAAK,CAAC,EAKjD,OAAOD,EAAO,KAAK;AAAA,CAAI,CACzB",
  "names": ["descript_to_youtube_chapters_exports", "__export", "main", "__toCommonJS", "import_api", "import_fs", "props", "updateFileContents", "transcriptFile", "filePath", "resolve", "reject", "fs", "err", "data", "updatedData", "convertInput", "input", "lines", "output", "i"]
}
