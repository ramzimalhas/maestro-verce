"use strict";var h=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var R=(o,n)=>{for(var a in n)h(o,a,{get:n[a],enumerable:!0})},S=(o,n,a,p)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of N(n))!x.call(o,s)&&s!==a&&h(o,s,{get:()=>n[s],enumerable:!(p=B(n,s))||p.enumerable});return o};var C=o=>S(h({},"__esModule",{value:!0}),o);var T={};R(T,{default:()=>w});module.exports=C(T);var e=require("@raycast/api"),y=require("react");var t=require("@raycast/api");var r=require("@raycast/api"),m=require("react/jsx-runtime");function v(){return(0,m.jsx)(r.ActionPanel.Section,{children:(0,m.jsx)(r.Action,{icon:r.Icon.Gear,title:"Open Command Preferences",shortcut:{modifiers:["shift","cmd"],key:","},onAction:r.openCommandPreferences})})}var c=require("react/jsx-runtime");function g(o){let{title:n,extensionPreferences:a}=o;return(0,c.jsx)(t.List.EmptyView,{title:n,icon:{source:"empty-icon.svg"},actions:(0,c.jsxs)(t.ActionPanel,{children:[a&&(0,c.jsx)(t.Action,{icon:t.Icon.Finder,title:"Open Bunch Folder",shortcut:{modifiers:["cmd"],key:"o"},onAction:async()=>{await(0,t.open)(encodeURI("x-bunch://reveal")),await(0,t.showHUD)("Open Bunch Folder")}}),!a&&(0,c.jsx)(t.Action,{icon:t.Icon.Gear,title:"Open Bunch Preferences",shortcut:{modifiers:["shift","cmd"],key:","},onAction:()=>{(0,t.open)("x-bunch://prefs").then()}}),a&&(0,c.jsx)(v,{})]})})}var P=[{title:"App Name",value:"Launch app"},{title:"%App Name",value:"Launch when opening the Bunch, but ignore when closing"},{title:"App Name ~5",value:"Launch app after 5 second delay"},{title:"- XX",value:"close all windows of preceding app"},{title:"- File",value:"open a file in preceding app (can be repeated)"},{title:"- 'spotlight search'",value:"Run a spotlight search and open the results in preceding app"},{title:"- #tag1 #tag2",value:"Search for macOS tags"},{title:"- {@~w}",value:"send a key command to the preceding app"},{title:"- [string]",value:"type a string in the preceding app"},{title:"!AppName",value:"Quit app"},{title:"!!AppName",value:"Launch app when closing bunch (double negative)"},{title:"!!!AppName",value:"Quit app when closing bunch (triple negative)"},{title:"@AppName",value:"Focus app (run at end of bunch to hide all other apps)"},{title:"AppName_",value:"Hide an app"},{title:"AppName^",value:"Force app to activate"}],E=[{title:"< my.snippet",value:"An external file to be included in the bunch"},{title:"- KEY=value",value:"A variable to define for use in the snippet as ${KEY}"},{title:"< my.snippet#id",value:"Reference a section of a snippet file"},{title:'< my.snippet#id ?"Run this Snippet?"',value:"Allow interactive confirmation of a snippet"}],U=[{title:"http://url",value:"Open URL in browser"},{title:"urlhandler://",value:"Open a system url handler"}],O=[{title:"(command)",value:"Run a Bunch command"},{title:"(dark mode [on|off])",value:"dark mode on/off"},{title:"(do not disturb [on|off])",value:"do not disturb on/off"},{title:"([hide|show] dock)",value:"hide/show dock"},{title:"(dock [left|right|bottom])",value:"dock left/right/bottom"},{title:"([hide|show] desktop)",value:"hide/show desktop"},{title:"(wallpaper [path(s)])",value:"change wallpaper"},{title:"(audio [input|output] device_name)",value:"audio input/output"},{title:"(audio [input|output] volume [0-100])",value:"audio input/output"},{title:"(audio [input|output] volume [0-100])",value:"audio volume"},{title:"(audio [input|output] [mute|unmute])",value:"mute/unmute audio"}],L=[{title:"* AppleScript command",value:"Execute Applescript"}],M=[{title:"& Automator Workflow",value:"Run an Automator Workflow"},{title:"- key=value",value:"variable to pass to preceding workflow (can be repeated)"}],H=[{title:"$ script_or_cmd [args]",value:"Shell script to execute"},{title:"- KEY=value",value:"Environment variable to export for preceding shell script (can be repeated)"}],I=[{title:"close after",value:"Automatically close after an interval (e.g. 1h)"},{title:"close at",value:"Set a time to close daily (e.g. 5pm)"},{title:"close on",value:"Set a day and time to close weekly (e.g. Mon 5pm). Multiple day/times can be combined with commas"},{title:"from file",value:"A file path to load additional key/value pairs"},{title:"from script",value:"A shell script path that returns YAML"},{title:"ignore",value:"Boolean determines menu display of a Bunch"},{title:"ignore if",value:"Logic to determine if Bunch displays in menu"},{title:"ignore unless",value:"Negative version of ignore if"},{title:"ignores state",value:"true allows open/close when already open/closed"},{title:"menu divider",value:"Add a menu divider before or after"},{title:"menu order",value:"Menu order, 0\u201399 at beginning, >100 at end"},{title:"only opens",value:"true has the same effect as toggles: false"},{title:"open at",value:"Set a time to open this bunch daily (e.g. 6:30am)"},{title:"open every",value:"Repeat open at intervals (e.g. 30m)"},{title:"open on",value:"Set a day and time to open weekly (e.g. Tue 8am). Multiple day/times can be combined with commas"},{title:"quits apps",value:"always close apps open in other Bunches"},{title:"run after",value:"Comma-separated paths to scripts to run after opening"},{title:"run after close",value:"Comma-separated paths to scripts to run after closing"},{title:"run before",value:"Comma-separated paths to scripts to run before opening"},{title:"run before close",value:"Comma-separated paths to scripts to run before closing"},{title:"schedule if",value:"Only schedule on specific Mac(s) (UUID1 )"},{title:"schedule unless",value:"Negative version of schedule if"},{title:"sequence",value:"parallel or sequential, determines execution order"},{title:"shortcut",value:"Keyboard shortcut for opening the Bunch (e.g. @a)"},{title:"single bunch mode",value:"ignore prevents closing"},{title:"startup",value:"true, false, or ask to open on launch. Can also be a UUID2  run only on a specific Mac"},{title:"tags",value:"Add tags to the Bunch for organization and batching"},{title:"title",value:"Set the menu display title. Emojis OK."},{title:"title prefix",value:"Set a prefix that goes before the menu title. Prefixes set by folder/tag frontmatter are combined"},{title:"toggles",value:"false prevents toggling this Bunch open/closed"}],F=[{title:"x-bunch://open?bunch=[BUNCH NAME]",value:"Open a Bunch"},{title:"x-bunch://[BUNCH NAME]",value:"Open shorthand"},{title:"x-bunch://close?bunch=[BUNCH NAME]",value:"Close a Bunch"},{title:"x-bunch://close/[BUNCH NAME]",value:"Close shorthand"},{title:"x-bunch://toggle?bunch=[BUNCH NAME]",value:"Toggle a Bunch"},{title:"x-bunch://toggle/[BUNCH NAME]",value:"Toggle shorthand"},{title:"x-bunch://raw?txt=[BUNCH TEXT]",value:"Run raw text as a Bunch"},{title:"x-bunch://snippet?file=[SNIPPET PATH]&fragment=[FRAGMENT]&foo=bar",value:"Run a snippet with fragment and variables"}],f=[{section:"Apps",items:P},{section:"Snippets",items:E},{section:"URLs",items:U},{section:"Bunch Command",items:O},{section:"Applescript",items:L},{section:"Automator Workflow",items:M},{section:"Shell Commands",items:H},{section:"Frontmatter",items:I},{section:"URL Handler",items:F}];var d=require("@raycast/api"),A=require("react/jsx-runtime");function b(){return(0,A.jsx)(d.Action.OpenInBrowser,{icon:d.Icon.List,title:"Bunch Syntax Reference",shortcut:{modifiers:["ctrl","shift"],key:"s"},url:"https://bunchapp.co/docs/bunch-files/quick-reference/#quick-reference"})}var i=require("react/jsx-runtime");function w(o){let n=typeof o.isPopup>"u"?!1:o.isPopup,[a,p]=(0,y.useState)("All"),{pop:s}=(0,e.useNavigation)();return(0,i.jsxs)(e.List,{navigationTitle:n?"Quick Reference":"Search Bunch References",searchBarPlaceholder:"Search references",searchBarAccessory:(0,i.jsxs)(e.List.Dropdown,{onChange:p,tooltip:"Filter Tag",children:[(0,i.jsx)(e.List.Dropdown.Item,{title:"All",value:"All"},"All"),f.map(l=>(0,i.jsx)(e.List.Dropdown.Item,{title:l.section,value:l.section},l.section))]}),children:[(0,i.jsx)(g,{title:"No Bunch Reference",extensionPreferences:!0}),f.map(l=>(a===l.section||a==="All")&&(0,i.jsx)(e.List.Section,{title:l.section,children:l.items.map((u,k)=>(0,i.jsx)(e.List.Item,{icon:"list-icon.svg",title:u.title,subtitle:u.value,keywords:[...u.value.split(" "),u.value],actions:(0,i.jsxs)(e.ActionPanel,{children:[(0,i.jsx)(e.Action,{icon:e.Icon.Clipboard,title:"Copy Reference",onAction:async()=>{await e.Clipboard.copy(u.title),n?s():await(0,e.showHUD)("Reference copied to clipboard")}}),(0,i.jsx)(b,{})]})},k))},l.section))]})}
