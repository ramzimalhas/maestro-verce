{
  "version": 3,
  "sources": ["../node_modules/acorn/dist/acorn.js", "../node_modules/object-assign/index.js", "../node_modules/is-expression/index.js", "../node_modules/has-symbols/shams.js", "../node_modules/has-symbols/index.js", "../node_modules/function-bind/implementation.js", "../node_modules/function-bind/index.js", "../node_modules/has/src/index.js", "../node_modules/get-intrinsic/index.js", "../node_modules/call-bind/index.js", "../node_modules/call-bind/callBound.js", "../node_modules/has-tostringtag/shams.js", "../node_modules/is-regex/index.js", "../node_modules/character-parser/index.js", "../node_modules/pug-error/index.js", "../node_modules/pug-lexer/index.js", "../node_modules/pug-strip-comments/index.js", "../node_modules/token-stream/index.js", "../node_modules/pug-parser/lib/inline-tags.js", "../node_modules/pug-parser/index.js", "../node_modules/pug-walk/index.js", "../node_modules/pug-load/index.js", "../node_modules/asap/raw.js", "../node_modules/promise/lib/core.js", "../node_modules/promise/lib/done.js", "../node_modules/promise/lib/finally.js", "../node_modules/promise/lib/es6-extensions.js", "../node_modules/asap/asap.js", "../node_modules/promise/lib/node-extensions.js", "../node_modules/promise/lib/synchronous.js", "../node_modules/promise/lib/index.js", "../node_modules/promise/index.js", "../node_modules/is-promise/index.js", "../node_modules/jstransformer/index.js", "../node_modules/resolve/lib/homedir.js", "../node_modules/resolve/lib/caller.js", "../node_modules/path-parse/index.js", "../node_modules/resolve/lib/node-modules-paths.js", "../node_modules/resolve/lib/normalize-options.js", "../node_modules/is-core-module/core.json", "../node_modules/is-core-module/index.js", "../node_modules/resolve/lib/async.js", "../node_modules/resolve/lib/core.json", "../node_modules/resolve/lib/core.js", "../node_modules/resolve/lib/is-core.js", "../node_modules/resolve/lib/sync.js", "../node_modules/resolve/index.js", "../node_modules/pug-filters/lib/run-filter.js", "../node_modules/@babel/parser/src/util/location.ts", "../node_modules/@babel/parser/src/parse-error/credentials.ts", "../node_modules/@babel/parser/src/parse-error/module-errors.ts", "../node_modules/@babel/parser/src/parse-error/to-node-description.ts", "../node_modules/@babel/parser/src/parse-error/standard-errors.ts", "../node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts", "../node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../node_modules/@babel/parser/src/parse-error.ts", "../node_modules/@babel/parser/src/plugins/estree.ts", "../node_modules/@babel/parser/src/tokenizer/context.ts", "../node_modules/@babel/parser/src/tokenizer/types.ts", "../node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../node_modules/@babel/parser/src/util/identifier.ts", "../node_modules/@babel/parser/src/util/scopeflags.ts", "../node_modules/@babel/parser/src/util/scope.ts", "../node_modules/@babel/parser/src/plugins/flow/scope.ts", "../node_modules/@babel/parser/src/parser/base.ts", "../node_modules/@babel/parser/src/parser/comments.ts", "../node_modules/@babel/parser/src/util/whitespace.ts", "../node_modules/@babel/parser/src/tokenizer/state.ts", "../node_modules/@babel/babel-helper-string-parser/src/index.ts", "../node_modules/@babel/parser/src/tokenizer/index.ts", "../node_modules/@babel/parser/src/util/class-scope.ts", "../node_modules/@babel/parser/src/util/expression-scope.ts", "../node_modules/@babel/parser/src/util/production-parameter.ts", "../node_modules/@babel/parser/src/parser/util.ts", "../node_modules/@babel/parser/src/parser/node.ts", "../node_modules/@babel/parser/src/plugins/flow/index.ts", "../node_modules/@babel/parser/src/plugins/jsx/xhtml.ts", "../node_modules/@babel/parser/src/plugins/jsx/index.ts", "../node_modules/@babel/parser/src/plugins/typescript/scope.ts", "../node_modules/@babel/parser/src/plugins/typescript/index.ts", "../node_modules/@babel/parser/src/plugins/placeholders.ts", "../node_modules/@babel/parser/src/plugins/v8intrinsic.ts", "../node_modules/@babel/parser/src/plugin-utils.ts", "../node_modules/@babel/parser/src/options.ts", "../node_modules/@babel/parser/src/parser/lval.ts", "../node_modules/@babel/parser/src/parser/expression.ts", "../node_modules/@babel/parser/src/parser/statement.ts", "../node_modules/@babel/parser/src/parser/index.ts", "../node_modules/@babel/parser/src/index.ts", "../node_modules/@babel/types/src/utils/shallowEqual.ts", "../node_modules/@babel/types/src/validators/generated/index.ts", "../node_modules/@babel/types/src/validators/matchesPattern.ts", "../node_modules/@babel/types/src/validators/buildMatchMemberExpression.ts", "../node_modules/@babel/types/src/validators/react/isReactComponent.ts", "../node_modules/@babel/types/src/validators/react/isCompatTag.ts", "../node_modules/to-fast-properties/index.js", "../node_modules/@babel/types/src/validators/isType.ts", "../node_modules/@babel/types/src/validators/isPlaceholderType.ts", "../node_modules/@babel/types/src/validators/is.ts", "../node_modules/@babel/helper-validator-identifier/src/identifier.ts", "../node_modules/@babel/helper-validator-identifier/src/keyword.ts", "../node_modules/@babel/helper-validator-identifier/src/index.ts", "../node_modules/@babel/types/src/validators/isValidIdentifier.ts", "../node_modules/@babel/helper-string-parser/lib/index.js", "../node_modules/@babel/types/src/constants/index.ts", "../node_modules/@babel/types/src/definitions/utils.ts", "../node_modules/@babel/types/src/definitions/core.ts", "../node_modules/@babel/types/src/definitions/flow.ts", "../node_modules/@babel/types/src/definitions/jsx.ts", "../node_modules/@babel/types/src/definitions/placeholders.ts", "../node_modules/@babel/types/src/definitions/misc.ts", "../node_modules/@babel/types/src/definitions/experimental.ts", "../node_modules/@babel/types/src/definitions/typescript.ts", "../node_modules/@babel/types/src/definitions/index.ts", "../node_modules/@babel/types/src/validators/validate.ts", "../node_modules/@babel/types/src/builders/validateNode.ts", "../node_modules/@babel/types/src/builders/generated/index.ts", "../node_modules/@babel/types/src/utils/react/cleanJSXElementLiteralChild.ts", "../node_modules/@babel/types/src/builders/react/buildChildren.ts", "../node_modules/@babel/types/src/validators/isNode.ts", "../node_modules/@babel/types/src/asserts/assertNode.ts", "../node_modules/@babel/types/src/asserts/generated/index.ts", "../node_modules/@babel/types/src/builders/flow/createTypeAnnotationBasedOnTypeof.ts", "../node_modules/@babel/types/src/modifications/flow/removeTypeDuplicates.ts", "../node_modules/@babel/types/src/builders/flow/createFlowUnionType.ts", "../node_modules/@babel/types/src/modifications/typescript/removeTypeDuplicates.ts", "../node_modules/@babel/types/src/builders/typescript/createTSUnionType.ts", "../node_modules/@babel/types/src/builders/generated/uppercase.js", "../node_modules/@babel/types/src/clone/cloneNode.ts", "../node_modules/@babel/types/src/clone/clone.ts", "../node_modules/@babel/types/src/clone/cloneDeep.ts", "../node_modules/@babel/types/src/clone/cloneDeepWithoutLoc.ts", "../node_modules/@babel/types/src/clone/cloneWithoutLoc.ts", "../node_modules/@babel/types/src/comments/addComments.ts", "../node_modules/@babel/types/src/comments/addComment.ts", "../node_modules/@babel/types/src/utils/inherit.ts", "../node_modules/@babel/types/src/comments/inheritInnerComments.ts", "../node_modules/@babel/types/src/comments/inheritLeadingComments.ts", "../node_modules/@babel/types/src/comments/inheritTrailingComments.ts", "../node_modules/@babel/types/src/comments/inheritsComments.ts", "../node_modules/@babel/types/src/comments/removeComments.ts", "../node_modules/@babel/types/src/constants/generated/index.ts", "../node_modules/@babel/types/src/converters/toBlock.ts", "../node_modules/@babel/types/src/converters/ensureBlock.ts", "../node_modules/@babel/types/src/converters/toIdentifier.ts", "../node_modules/@babel/types/src/converters/toBindingIdentifierName.ts", "../node_modules/@babel/types/src/converters/toComputedKey.ts", "../node_modules/@babel/types/src/converters/toExpression.ts", "../node_modules/@babel/types/src/traverse/traverseFast.ts", "../node_modules/@babel/types/src/modifications/removeProperties.ts", "../node_modules/@babel/types/src/modifications/removePropertiesDeep.ts", "../node_modules/@babel/types/src/converters/toKeyAlias.ts", "../node_modules/@babel/types/src/retrievers/getBindingIdentifiers.ts", "../node_modules/@babel/types/src/converters/gatherSequenceExpressions.ts", "../node_modules/@babel/types/src/converters/toSequenceExpression.ts", "../node_modules/@babel/types/src/converters/toStatement.ts", "../node_modules/@babel/types/src/converters/valueToNode.ts", "../node_modules/@babel/types/src/modifications/appendToMemberExpression.ts", "../node_modules/@babel/types/src/modifications/inherits.ts", "../node_modules/@babel/types/src/modifications/prependToMemberExpression.ts", "../node_modules/@babel/types/src/retrievers/getOuterBindingIdentifiers.ts", "../node_modules/@babel/types/src/traverse/traverse.ts", "../node_modules/@babel/types/src/validators/isBinding.ts", "../node_modules/@babel/types/src/validators/isLet.ts", "../node_modules/@babel/types/src/validators/isBlockScoped.ts", "../node_modules/@babel/types/src/validators/isImmutable.ts", "../node_modules/@babel/types/src/validators/isNodesEquivalent.ts", "../node_modules/@babel/types/src/validators/isReferenced.ts", "../node_modules/@babel/types/src/validators/isScope.ts", "../node_modules/@babel/types/src/validators/isSpecifierDefault.ts", "../node_modules/@babel/types/src/validators/isValidES3Identifier.ts", "../node_modules/@babel/types/src/validators/isVar.ts", "../node_modules/@babel/types/lib/ast-types/generated/index.js", "../node_modules/@babel/types/src/index.ts", "../node_modules/constantinople/lib/binaryOperation.js", "../node_modules/constantinople/lib/index.js", "../node_modules/pug-filters/lib/handle-filters.js", "../node_modules/pug-filters/index.js", "../node_modules/pug-linker/index.js", "../node_modules/doctypes/index.js", "../node_modules/pug-runtime/lib/dependencies.js", "../node_modules/pug-runtime/lib/internals.js", "../node_modules/pug-runtime/lib/sources.js", "../node_modules/pug-runtime/build.js", "../node_modules/pug-runtime/index.js", "../node_modules/js-stringify/index.js", "../node_modules/pug-attrs/index.js", "../node_modules/void-elements/index.js", "../node_modules/babel-walk/src/explode.ts", "../node_modules/babel-walk/src/index.ts", "../node_modules/assert-never/index.js", "../node_modules/with/src/reference.ts", "../node_modules/with/src/globals.ts", "../node_modules/with/src/index.ts", "../node_modules/pug-code-gen/index.js", "../node_modules/pug-runtime/wrap.js", "../node_modules/pug/lib/index.js", "../node_modules/node-html-markdown/src/translator.ts", "../node_modules/he/he.js", "../node_modules/node-html-parser/dist/nodes/node.js", "../node_modules/node-html-parser/dist/nodes/type.js", "../node_modules/node-html-parser/dist/nodes/comment.js", "../node_modules/domelementtype/lib/index.js", "../node_modules/domhandler/lib/node.js", "../node_modules/domhandler/lib/index.js", "../node_modules/dom-serializer/node_modules/entities/lib/maps/entities.json", "../node_modules/dom-serializer/node_modules/entities/lib/maps/legacy.json", "../node_modules/dom-serializer/node_modules/entities/lib/maps/xml.json", "../node_modules/dom-serializer/node_modules/entities/lib/maps/decode.json", "../node_modules/dom-serializer/node_modules/entities/lib/decode_codepoint.js", "../node_modules/dom-serializer/node_modules/entities/lib/decode.js", "../node_modules/dom-serializer/node_modules/entities/lib/encode.js", "../node_modules/dom-serializer/node_modules/entities/lib/index.js", "../node_modules/dom-serializer/lib/foreignNames.js", "../node_modules/dom-serializer/lib/index.js", "../node_modules/domutils/lib/stringify.js", "../node_modules/domutils/lib/traversal.js", "../node_modules/domutils/lib/manipulation.js", "../node_modules/domutils/lib/querying.js", "../node_modules/domutils/lib/legacy.js", "../node_modules/domutils/lib/helpers.js", "../node_modules/domutils/lib/feeds.js", "../node_modules/domutils/lib/index.js", "../node_modules/boolbase/index.js", "../node_modules/css-what/lib/commonjs/types.js", "../node_modules/css-what/lib/commonjs/parse.js", "../node_modules/css-what/lib/commonjs/stringify.js", "../node_modules/css-what/lib/commonjs/index.js", "../node_modules/css-select/lib/procedure.js", "../node_modules/css-select/lib/sort.js", "../node_modules/css-select/lib/attributes.js", "../node_modules/nth-check/lib/parse.ts", "../node_modules/nth-check/lib/compile.ts", "../node_modules/nth-check/lib/index.ts", "../node_modules/css-select/lib/pseudo-selectors/filters.js", "../node_modules/css-select/lib/pseudo-selectors/pseudos.js", "../node_modules/css-select/lib/pseudo-selectors/aliases.js", "../node_modules/css-select/lib/pseudo-selectors/subselects.js", "../node_modules/css-select/lib/pseudo-selectors/index.js", "../node_modules/css-select/lib/general.js", "../node_modules/css-select/lib/compile.js", "../node_modules/css-select/lib/index.js", "../node_modules/node-html-parser/dist/back.js", "../node_modules/node-html-parser/dist/matcher.js", "../node_modules/node-html-parser/dist/void-tag.js", "../node_modules/node-html-parser/dist/nodes/text.js", "../node_modules/node-html-parser/dist/nodes/html.js", "../node_modules/node-html-parser/dist/parse.js", "../node_modules/node-html-parser/dist/valid.js", "../node_modules/node-html-parser/dist/index.js", "../node_modules/node-html-markdown/src/utilities.ts", "../node_modules/node-html-markdown/src/config.ts", "../node_modules/node-html-markdown/src/nodes.ts", "../node_modules/node-html-markdown/src/visitor.ts", "../node_modules/node-html-markdown/src/main.ts", "../node_modules/node-html-markdown/src/index.ts", "../src/pug-to-markdown.tsx", "../src/lib/use-form.ts", "../src/components/DefaultForm.tsx"],
  "sourcesContent": ["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, (function (exports) { 'use strict';\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  // Big ugly regular expressions that match characters in the\n  // whitespace, identifier, and identifier-start categories. These\n  // are only applied when a character is found to actually have a\n  // code point above 128.\n  // Generated by `bin/generate-identifier-regex.js`.\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n  // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range. They were\n  // generated by bin/generate-identifier-regex.js\n\n  // eslint-disable-next-line comma-spacing\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n\n  // eslint-disable-next-line comma-spacing\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords$1 = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  // Checks if an object has a property.\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n  // A second optional argument can be given to further configure\n  // the parser process. These options are recognized:\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n    // (2019). This influences support for strict mode, the set of\n    // reserved words, and support for new syntax features. The default\n    // is 10.\n    ecmaVersion: 10,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called\n    // when a semicolon is automatically inserted. It will be passed\n    // the position of the comma as an offset, and if `locations` is\n    // enabled, it is given the location as a `{line, column}` object\n    // as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program.\n    allowImportExportEverywhere: false,\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: false,\n    // When enabled, hashbang directive in the beginning of file\n    // is allowed and treated as a line comment.\n    allowHashBang: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback\u2014that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback\u2014that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = {};\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  // Switch to a getter for 7.0.0.\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91) { return true } // '['\n    if (context) { return false }\n\n    if (nextCh === 123) { return true } // '{'\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$1.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (this.type !== types.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n  // Parses module export declaration.\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types.star)) {\n      if (this.options.ecmaVersion >= 11) {\n        if (this.eatContextual(\"as\")) {\n          node.exported = this.parseIdent(true);\n          this.checkExport(exports, node.exported.name, this.lastTokStart);\n        } else {\n          node.exported = null;\n        }\n      }\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    // import '...'\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      // import defaultObj, { x, y as z } from '...'\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        // falls through to AssignmentPattern\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // Verify that a node is an lval \u2014 something that can be assigned\n  // to.\n  // bindingType can be either:\n  // 'var' indicating that the lval creates a 'var' binding\n  // 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n  // 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  // A recursive descent parser operates by defining functions for all\n\n  var pp$3 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash \u2014\n  // either with each other or with an init property \u2014 and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n            // Backwards-compat kludge. Can be removed in version 6.0\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var coalesce = this.type === types.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types.coalesce) || (coalesce && (this.type === types.logicalOR || this.type === types.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types.bracketL);\n    if (computed || (optional && this.type !== types.parenL && this.type !== types.backQuote) || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression \u2014 either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    var meta = this.parseIdent(true);\n\n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    case types.dot:\n      node.meta = meta;\n      return this.parseImportMeta(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    // Verify ending.\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\")\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call \u2014 at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // To disallow parenthesized identifier via `this.toAssignable()`.\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR && this.type !== types.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Token-specific context update code\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // This file contains Unicode properties extracted from the ECMAScript\n  // specification. The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      this.regexp_alternative(state);\n    }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D /* } */)\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      state.eat(0x5E /* ^ */);\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D /* ] */)) {\n        return true\n      }\n      // Unreachable since it threw \"unterminated regular expression\" error before.\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp$9 = Parser.prototype;\n\n  // Move to the next token\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types.assign, 3) }\n        }\n        return this.finishOp(types.coalesce, 2)\n      }\n    }\n    return this.finishOp(types.question, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp$9.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n      // falls through\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      // no default\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString$1(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\n  var version = \"7.4.1\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api].\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "'use strict';\n\nvar acorn = require('acorn');\nvar objectAssign = require('object-assign');\n\nmodule.exports = isExpression;\n\nvar DEFAULT_OPTIONS = {\n  throw: false,\n  strict: false,\n  lineComment: false\n};\n\nfunction isExpression(src, options) {\n  options = objectAssign({}, DEFAULT_OPTIONS, options);\n\n  try {\n    var parser = new acorn.Parser(options, src, 0);\n\n    if (options.strict) {\n      parser.strict = true;\n    }\n\n    if (!options.lineComment) {\n      parser.skipLineComment = function (startSkip) {\n        this.raise(this.pos, 'Line comments not allowed in an expression');\n      };\n    }\n\n    parser.nextToken();\n    parser.parseExpression();\n\n    if (parser.type !== acorn.tokTypes.eof) {\n      parser.unexpected();\n    }\n  } catch (ex) {\n    if (!options.throw) {\n      return false;\n    }\n\n    throw ex;\n  }\n\n  return true;\n}\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n", "'use strict';\n\nvar objIsRegex = require('is-regex');\n\nexports = (module.exports = parse);\n\nvar TOKEN_TYPES = exports.TOKEN_TYPES = {\n  LINE_COMMENT: '//',\n  BLOCK_COMMENT: '/**/',\n  SINGLE_QUOTE: '\\'',\n  DOUBLE_QUOTE: '\"',\n  TEMPLATE_QUOTE: '`',\n  REGEXP: '//g'\n}\n\nvar BRACKETS = exports.BRACKETS = {\n  '(': ')',\n  '{': '}',\n  '[': ']'\n};\nvar BRACKETS_REVERSED = {\n  ')': '(',\n  '}': '{',\n  ']': '['\n};\n\nexports.parse = parse;\nfunction parse(src, state, options) {\n  options = options || {};\n  state = state || exports.defaultState();\n  var start = options.start || 0;\n  var end = options.end || src.length;\n  var index = start;\n  while (index < end) {\n    try {\n      parseChar(src[index], state);\n    } catch (ex) {\n      ex.index = index;\n      throw ex;\n    }\n    index++;\n  }\n  return state;\n}\n\nexports.parseUntil = parseUntil;\nfunction parseUntil(src, delimiter, options) {\n  options = options || {};\n  var start = options.start || 0;\n  var index = start;\n  var state = exports.defaultState();\n  while (index < src.length) {\n    if ((options.ignoreNesting || !state.isNesting(options)) && matches(src, delimiter, index)) {\n      var end = index;\n      return {\n        start: start,\n        end: end,\n        src: src.substring(start, end)\n      };\n    }\n    try {\n      parseChar(src[index], state);\n    } catch (ex) {\n      ex.index = index;\n      throw ex;\n    }\n    index++;\n  }\n  var err = new Error('The end of the string was reached with no closing bracket found.');\n  err.code = 'CHARACTER_PARSER:END_OF_STRING_REACHED';\n  err.index = index;\n  throw err;\n}\n\nexports.parseChar = parseChar;\nfunction parseChar(character, state) {\n  if (character.length !== 1) {\n    var err = new Error('Character must be a string of length 1');\n    err.name = 'InvalidArgumentError';\n    err.code = 'CHARACTER_PARSER:CHAR_LENGTH_NOT_ONE';\n    throw err;\n  }\n  state = state || exports.defaultState();\n  state.src += character;\n  var wasComment = state.isComment();\n  var lastChar = state.history ? state.history[0] : '';\n\n\n  if (state.regexpStart) {\n    if (character === '/' || character == '*') {\n      state.stack.pop();\n    }\n    state.regexpStart = false;\n  }\n  switch (state.current()) {\n    case TOKEN_TYPES.LINE_COMMENT:\n      if (character === '\\n') {\n        state.stack.pop();\n      }\n      break;\n    case TOKEN_TYPES.BLOCK_COMMENT:\n      if (state.lastChar === '*' && character === '/') {\n        state.stack.pop();\n      }\n      break;\n    case TOKEN_TYPES.SINGLE_QUOTE:\n      if (character === '\\'' && !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    case TOKEN_TYPES.DOUBLE_QUOTE:\n      if (character === '\"' && !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    case TOKEN_TYPES.TEMPLATE_QUOTE:\n      if (character === '`' && !state.escaped) {\n        state.stack.pop();\n        state.hasDollar = false;\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n        state.hasDollar = false;\n      } else if (character === '$' && !state.escaped) {\n        state.hasDollar = true;\n      } else if (character === '{' && state.hasDollar) {\n        state.stack.push(BRACKETS[character]);\n      } else {\n        state.escaped = false;\n        state.hasDollar = false;\n      }\n      break;\n    case TOKEN_TYPES.REGEXP:\n      if (character === '/' && !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    default:\n      if (character in BRACKETS) {\n        state.stack.push(BRACKETS[character]);\n      } else if (character in BRACKETS_REVERSED) {\n        if (state.current() !== character) {\n          var err = new SyntaxError('Mismatched Bracket: ' + character);\n          err.code = 'CHARACTER_PARSER:MISMATCHED_BRACKET';\n          throw err;\n        };\n        state.stack.pop();\n      } else if (lastChar === '/' && character === '/') {\n        // Don't include comments in history\n        state.history = state.history.substr(1);\n        state.stack.push(TOKEN_TYPES.LINE_COMMENT);\n      } else if (lastChar === '/' && character === '*') {\n        // Don't include comment in history\n        state.history = state.history.substr(1);\n        state.stack.push(TOKEN_TYPES.BLOCK_COMMENT);\n      } else if (character === '/' && isRegexp(state.history)) {\n        state.stack.push(TOKEN_TYPES.REGEXP);\n        // N.B. if the next character turns out to be a `*` or a `/`\n        //      then this isn't actually a regexp\n        state.regexpStart = true;\n      } else if (character === '\\'') {\n        state.stack.push(TOKEN_TYPES.SINGLE_QUOTE);\n      } else if (character === '\"') {\n        state.stack.push(TOKEN_TYPES.DOUBLE_QUOTE);\n      } else if (character === '`') {\n        state.stack.push(TOKEN_TYPES.TEMPLATE_QUOTE);\n      }\n      break;\n  }\n  if (!state.isComment() && !wasComment) {\n    state.history = character + state.history;\n  }\n  state.lastChar = character; // store last character for ending block comments\n  return state;\n}\n\nexports.defaultState = function () { return new State() };\nfunction State() {\n  this.stack = [];\n\n  this.regexpStart = false;\n  this.escaped = false;\n  this.hasDollar = false;\n\n  this.src = '';\n  this.history = ''\n  this.lastChar = ''\n}\nState.prototype.current = function () {\n  return this.stack[this.stack.length - 1];\n};\nState.prototype.isString = function () {\n  return (\n    this.current() === TOKEN_TYPES.SINGLE_QUOTE ||\n    this.current() === TOKEN_TYPES.DOUBLE_QUOTE ||\n    this.current() === TOKEN_TYPES.TEMPLATE_QUOTE\n  );\n}\nState.prototype.isComment = function () {\n  return this.current() === TOKEN_TYPES.LINE_COMMENT || this.current() === TOKEN_TYPES.BLOCK_COMMENT;\n}\nState.prototype.isNesting = function (opts) {\n  if (\n    opts && opts.ignoreLineComment &&\n    this.stack.length === 1 && this.stack[0] === TOKEN_TYPES.LINE_COMMENT\n  ) {\n    // if we are only inside a line comment, and line comments are ignored\n    // don't count it as nesting\n    return false;\n  }\n  return !!this.stack.length;\n}\n\nfunction matches(str, matcher, i) {\n  if (objIsRegex(matcher)) {\n    return matcher.test(str.substr(i || 0));\n  } else {\n    return str.substr(i || 0, matcher.length) === matcher;\n  }\n}\n\nexports.isPunctuator = isPunctuator\nfunction isPunctuator(c) {\n  if (!c) return true; // the start of a string is a punctuator\n  var code = c.charCodeAt(0)\n\n  switch (code) {\n    case 46:   // . dot\n    case 40:   // ( open bracket\n    case 41:   // ) close bracket\n    case 59:   // ; semicolon\n    case 44:   // , comma\n    case 123:  // { open curly brace\n    case 125:  // } close curly brace\n    case 91:   // [\n    case 93:   // ]\n    case 58:   // :\n    case 63:   // ?\n    case 126:  // ~\n    case 37:   // %\n    case 38:   // &\n    case 42:   // *:\n    case 43:   // +\n    case 45:   // -\n    case 47:   // /\n    case 60:   // <\n    case 62:   // >\n    case 94:   // ^\n    case 124:  // |\n    case 33:   // !\n    case 61:   // =\n      return true;\n    default:\n      return false;\n  }\n}\n\nexports.isKeyword = isKeyword\nfunction isKeyword(id) {\n  return (id === 'if') || (id === 'in') || (id === 'do') || (id === 'var') || (id === 'for') || (id === 'new') ||\n         (id === 'try') || (id === 'let') || (id === 'this') || (id === 'else') || (id === 'case') ||\n         (id === 'void') || (id === 'with') || (id === 'enum') || (id === 'while') || (id === 'break') || (id === 'catch') ||\n         (id === 'throw') || (id === 'const') || (id === 'yield') || (id === 'class') || (id === 'super') ||\n         (id === 'return') || (id === 'typeof') || (id === 'delete') || (id === 'switch') || (id === 'export') ||\n         (id === 'import') || (id === 'default') || (id === 'finally') || (id === 'extends') || (id === 'function') ||\n         (id === 'continue') || (id === 'debugger') || (id === 'package') || (id === 'private') || (id === 'interface') ||\n         (id === 'instanceof') || (id === 'implements') || (id === 'protected') || (id === 'public') || (id === 'static');\n}\n\nfunction isRegexp(history) {\n  //could be start of regexp or divide sign\n\n  history = history.replace(/^\\s*/, '');\n\n  //unless its an `if`, `while`, `for` or `with` it's a divide, so we assume it's a divide\n  if (history[0] === ')') return false;\n  //unless it's a function expression, it's a regexp, so we assume it's a regexp\n  if (history[0] === '}') return true;\n  //any punctuation means it's a regexp\n  if (isPunctuator(history[0])) return true;\n  //if the last thing was a keyword then it must be a regexp (e.g. `typeof /foo/`)\n  if (/^\\w+\\b/.test(history) && isKeyword(/^\\w+\\b/.exec(history)[0].split('').reverse().join(''))) return true;\n\n  return false;\n}\n", "'use strict';\n\nmodule.exports = makeError;\nfunction makeError(code, message, options) {\n  var line = options.line;\n  var column = options.column;\n  var filename = options.filename;\n  var src = options.src;\n  var fullMessage;\n  var location = line + (column ? ':' + column : '');\n  if (src && line >= 1 && line <= src.split('\\n').length) {\n    var lines = src.split('\\n');\n    var start = Math.max(line - 3, 0);\n    var end = Math.min(lines.length, line + 3);\n    // Error context\n    var context = lines\n      .slice(start, end)\n      .map(function(text, i) {\n        var curr = i + start + 1;\n        var preamble = (curr == line ? '  > ' : '    ') + curr + '| ';\n        var out = preamble + text;\n        if (curr === line && column > 0) {\n          out += '\\n';\n          out += Array(preamble.length + column).join('-') + '^';\n        }\n        return out;\n      })\n      .join('\\n');\n    fullMessage =\n      (filename || 'Pug') + ':' + location + '\\n' + context + '\\n\\n' + message;\n  } else {\n    fullMessage = (filename || 'Pug') + ':' + location + '\\n\\n' + message;\n  }\n  var err = new Error(fullMessage);\n  err.code = 'PUG:' + code;\n  err.msg = message;\n  err.line = line;\n  err.column = column;\n  err.filename = filename;\n  err.src = src;\n  err.toJSON = function() {\n    return {\n      code: this.code,\n      msg: this.msg,\n      line: this.line,\n      column: this.column,\n      filename: this.filename,\n    };\n  };\n  return err;\n}\n", "'use strict';\n\nvar assert = require('assert');\nvar isExpression = require('is-expression');\nvar characterParser = require('character-parser');\nvar error = require('pug-error');\n\nmodule.exports = lex;\nmodule.exports.Lexer = Lexer;\nfunction lex(str, options) {\n  var lexer = new Lexer(str, options);\n  return JSON.parse(JSON.stringify(lexer.getTokens()));\n}\n\n/**\n * Initialize `Lexer` with the given `str`.\n *\n * @param {String} str\n * @param {String} filename\n * @api private\n */\n\nfunction Lexer(str, options) {\n  options = options || {};\n  if (typeof str !== 'string') {\n    throw new Error(\n      'Expected source code to be a string but got \"' + typeof str + '\"'\n    );\n  }\n  if (typeof options !== 'object') {\n    throw new Error(\n      'Expected \"options\" to be an object but got \"' + typeof options + '\"'\n    );\n  }\n  //Strip any UTF-8 BOM off of the start of `str`, if it exists.\n  str = str.replace(/^\\uFEFF/, '');\n  this.input = str.replace(/\\r\\n|\\r/g, '\\n');\n  this.originalInput = this.input;\n  this.filename = options.filename;\n  this.interpolated = options.interpolated || false;\n  this.lineno = options.startingLine || 1;\n  this.colno = options.startingColumn || 1;\n  this.plugins = options.plugins || [];\n  this.indentStack = [0];\n  this.indentRe = null;\n  // If #{}, !{} or #[] syntax is allowed when adding text\n  this.interpolationAllowed = true;\n  this.whitespaceRe = /[ \\n\\t]/;\n\n  this.tokens = [];\n  this.ended = false;\n}\n\n/**\n * Lexer prototype.\n */\n\nLexer.prototype = {\n  constructor: Lexer,\n\n  error: function(code, message) {\n    var err = error(code, message, {\n      line: this.lineno,\n      column: this.colno,\n      filename: this.filename,\n      src: this.originalInput,\n    });\n    throw err;\n  },\n\n  assert: function(value, message) {\n    if (!value) this.error('ASSERT_FAILED', message);\n  },\n\n  isExpression: function(exp) {\n    return isExpression(exp, {\n      throw: true,\n    });\n  },\n\n  assertExpression: function(exp, noThrow) {\n    //this verifies that a JavaScript expression is valid\n    try {\n      this.callLexerFunction('isExpression', exp);\n      return true;\n    } catch (ex) {\n      if (noThrow) return false;\n\n      // not coming from acorn\n      if (!ex.loc) throw ex;\n\n      this.incrementLine(ex.loc.line - 1);\n      this.incrementColumn(ex.loc.column);\n      var msg =\n        'Syntax Error: ' + ex.message.replace(/ \\([0-9]+:[0-9]+\\)$/, '');\n      this.error('SYNTAX_ERROR', msg);\n    }\n  },\n\n  assertNestingCorrect: function(exp) {\n    //this verifies that code is properly nested, but allows\n    //invalid JavaScript such as the contents of `attributes`\n    var res = characterParser(exp);\n    if (res.isNesting()) {\n      this.error(\n        'INCORRECT_NESTING',\n        'Nesting must match on expression `' + exp + '`'\n      );\n    }\n  },\n\n  /**\n   * Construct a token with the given `type` and `val`.\n   *\n   * @param {String} type\n   * @param {String} val\n   * @return {Object}\n   * @api private\n   */\n\n  tok: function(type, val) {\n    var res = {\n      type: type,\n      loc: {\n        start: {\n          line: this.lineno,\n          column: this.colno,\n        },\n        filename: this.filename,\n      },\n    };\n\n    if (val !== undefined) res.val = val;\n\n    return res;\n  },\n\n  /**\n   * Set the token's `loc.end` value.\n   *\n   * @param {Object} tok\n   * @returns {Object}\n   * @api private\n   */\n\n  tokEnd: function(tok) {\n    tok.loc.end = {\n      line: this.lineno,\n      column: this.colno,\n    };\n    return tok;\n  },\n\n  /**\n   * Increment `this.lineno` and reset `this.colno`.\n   *\n   * @param {Number} increment\n   * @api private\n   */\n\n  incrementLine: function(increment) {\n    this.lineno += increment;\n    if (increment) this.colno = 1;\n  },\n\n  /**\n   * Increment `this.colno`.\n   *\n   * @param {Number} increment\n   * @api private\n   */\n\n  incrementColumn: function(increment) {\n    this.colno += increment;\n  },\n\n  /**\n   * Consume the given `len` of input.\n   *\n   * @param {Number} len\n   * @api private\n   */\n\n  consume: function(len) {\n    this.input = this.input.substr(len);\n  },\n\n  /**\n   * Scan for `type` with the given `regexp`.\n   *\n   * @param {String} type\n   * @param {RegExp} regexp\n   * @return {Object}\n   * @api private\n   */\n\n  scan: function(regexp, type) {\n    var captures;\n    if ((captures = regexp.exec(this.input))) {\n      var len = captures[0].length;\n      var val = captures[1];\n      var diff = len - (val ? val.length : 0);\n      var tok = this.tok(type, val);\n      this.consume(len);\n      this.incrementColumn(diff);\n      return tok;\n    }\n  },\n  scanEndOfLine: function(regexp, type) {\n    var captures;\n    if ((captures = regexp.exec(this.input))) {\n      var whitespaceLength = 0;\n      var whitespace;\n      var tok;\n      if ((whitespace = /^([ ]+)([^ ]*)/.exec(captures[0]))) {\n        whitespaceLength = whitespace[1].length;\n        this.incrementColumn(whitespaceLength);\n      }\n      var newInput = this.input.substr(captures[0].length);\n      if (newInput[0] === ':') {\n        this.input = newInput;\n        tok = this.tok(type, captures[1]);\n        this.incrementColumn(captures[0].length - whitespaceLength);\n        return tok;\n      }\n      if (/^[ \\t]*(\\n|$)/.test(newInput)) {\n        this.input = newInput.substr(/^[ \\t]*/.exec(newInput)[0].length);\n        tok = this.tok(type, captures[1]);\n        this.incrementColumn(captures[0].length - whitespaceLength);\n        return tok;\n      }\n    }\n  },\n\n  /**\n   * Return the indexOf `(` or `{` or `[` / `)` or `}` or `]` delimiters.\n   *\n   * Make sure that when calling this function, colno is at the character\n   * immediately before the beginning.\n   *\n   * @return {Number}\n   * @api private\n   */\n\n  bracketExpression: function(skip) {\n    skip = skip || 0;\n    var start = this.input[skip];\n    assert(\n      start === '(' || start === '{' || start === '[',\n      'The start character should be \"(\", \"{\" or \"[\"'\n    );\n    var end = characterParser.BRACKETS[start];\n    var range;\n    try {\n      range = characterParser.parseUntil(this.input, end, {start: skip + 1});\n    } catch (ex) {\n      if (ex.index !== undefined) {\n        var idx = ex.index;\n        // starting from this.input[skip]\n        var tmp = this.input.substr(skip).indexOf('\\n');\n        // starting from this.input[0]\n        var nextNewline = tmp + skip;\n        var ptr = 0;\n        while (idx > nextNewline && tmp !== -1) {\n          this.incrementLine(1);\n          idx -= nextNewline + 1;\n          ptr += nextNewline + 1;\n          tmp = nextNewline = this.input.substr(ptr).indexOf('\\n');\n        }\n\n        this.incrementColumn(idx);\n      }\n      if (ex.code === 'CHARACTER_PARSER:END_OF_STRING_REACHED') {\n        this.error(\n          'NO_END_BRACKET',\n          'The end of the string reached with no closing bracket ' +\n            end +\n            ' found.'\n        );\n      } else if (ex.code === 'CHARACTER_PARSER:MISMATCHED_BRACKET') {\n        this.error('BRACKET_MISMATCH', ex.message);\n      }\n      throw ex;\n    }\n    return range;\n  },\n\n  scanIndentation: function() {\n    var captures, re;\n\n    // established regexp\n    if (this.indentRe) {\n      captures = this.indentRe.exec(this.input);\n      // determine regexp\n    } else {\n      // tabs\n      re = /^\\n(\\t*) */;\n      captures = re.exec(this.input);\n\n      // spaces\n      if (captures && !captures[1].length) {\n        re = /^\\n( *)/;\n        captures = re.exec(this.input);\n      }\n\n      // established\n      if (captures && captures[1].length) this.indentRe = re;\n    }\n\n    return captures;\n  },\n\n  /**\n   * end-of-source.\n   */\n\n  eos: function() {\n    if (this.input.length) return;\n    if (this.interpolated) {\n      this.error(\n        'NO_END_BRACKET',\n        'End of line was reached with no closing bracket for interpolation.'\n      );\n    }\n    for (var i = 0; this.indentStack[i]; i++) {\n      this.tokens.push(this.tokEnd(this.tok('outdent')));\n    }\n    this.tokens.push(this.tokEnd(this.tok('eos')));\n    this.ended = true;\n    return true;\n  },\n\n  /**\n   * Blank line.\n   */\n\n  blank: function() {\n    var captures;\n    if ((captures = /^\\n[ \\t]*\\n/.exec(this.input))) {\n      this.consume(captures[0].length - 1);\n      this.incrementLine(1);\n      return true;\n    }\n  },\n\n  /**\n   * Comment.\n   */\n\n  comment: function() {\n    var captures;\n    if ((captures = /^\\/\\/(-)?([^\\n]*)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      var tok = this.tok('comment', captures[2]);\n      tok.buffer = '-' != captures[1];\n      this.interpolationAllowed = tok.buffer;\n      this.tokens.push(tok);\n      this.incrementColumn(captures[0].length);\n      this.tokEnd(tok);\n      this.callLexerFunction('pipelessText');\n      return true;\n    }\n  },\n\n  /**\n   * Interpolated tag.\n   */\n\n  interpolation: function() {\n    if (/^#\\{/.test(this.input)) {\n      var match = this.bracketExpression(1);\n      this.consume(match.end + 1);\n      var tok = this.tok('interpolation', match.src);\n      this.tokens.push(tok);\n      this.incrementColumn(2); // '#{'\n      this.assertExpression(match.src);\n\n      var splitted = match.src.split('\\n');\n      var lines = splitted.length - 1;\n      this.incrementLine(lines);\n      this.incrementColumn(splitted[lines].length + 1); // + 1 \u2192 '}'\n      this.tokEnd(tok);\n      return true;\n    }\n  },\n\n  /**\n   * Tag.\n   */\n\n  tag: function() {\n    var captures;\n\n    if ((captures = /^(\\w(?:[-:\\w]*\\w)?)/.exec(this.input))) {\n      var tok,\n        name = captures[1],\n        len = captures[0].length;\n      this.consume(len);\n      tok = this.tok('tag', name);\n      this.tokens.push(tok);\n      this.incrementColumn(len);\n      this.tokEnd(tok);\n      return true;\n    }\n  },\n\n  /**\n   * Filter.\n   */\n\n  filter: function(opts) {\n    var tok = this.scan(/^:([\\w\\-]+)/, 'filter');\n    var inInclude = opts && opts.inInclude;\n    if (tok) {\n      this.tokens.push(tok);\n      this.incrementColumn(tok.val.length);\n      this.tokEnd(tok);\n      this.callLexerFunction('attrs');\n      if (!inInclude) {\n        this.interpolationAllowed = false;\n        this.callLexerFunction('pipelessText');\n      }\n      return true;\n    }\n  },\n\n  /**\n   * Doctype.\n   */\n\n  doctype: function() {\n    var node = this.scanEndOfLine(/^doctype *([^\\n]*)/, 'doctype');\n    if (node) {\n      this.tokens.push(this.tokEnd(node));\n      return true;\n    }\n  },\n\n  /**\n   * Id.\n   */\n\n  id: function() {\n    var tok = this.scan(/^#([\\w-]+)/, 'id');\n    if (tok) {\n      this.tokens.push(tok);\n      this.incrementColumn(tok.val.length);\n      this.tokEnd(tok);\n      return true;\n    }\n    if (/^#/.test(this.input)) {\n      this.error(\n        'INVALID_ID',\n        '\"' +\n          /.[^ \\t\\(\\#\\.\\:]*/.exec(this.input.substr(1))[0] +\n          '\" is not a valid ID.'\n      );\n    }\n  },\n\n  /**\n   * Class.\n   */\n\n  className: function() {\n    var tok = this.scan(/^\\.([_a-z0-9\\-]*[_a-z][_a-z0-9\\-]*)/i, 'class');\n    if (tok) {\n      this.tokens.push(tok);\n      this.incrementColumn(tok.val.length);\n      this.tokEnd(tok);\n      return true;\n    }\n    if (/^\\.[_a-z0-9\\-]+/i.test(this.input)) {\n      this.error(\n        'INVALID_CLASS_NAME',\n        'Class names must contain at least one letter or underscore.'\n      );\n    }\n    if (/^\\./.test(this.input)) {\n      this.error(\n        'INVALID_CLASS_NAME',\n        '\"' +\n          /.[^ \\t\\(\\#\\.\\:]*/.exec(this.input.substr(1))[0] +\n          '\" is not a valid class name.  Class names can only contain \"_\", \"-\", a-z and 0-9, and must contain at least one of \"_\", or a-z'\n      );\n    }\n  },\n\n  /**\n   * Text.\n   */\n  endInterpolation: function() {\n    if (this.interpolated && this.input[0] === ']') {\n      this.input = this.input.substr(1);\n      this.ended = true;\n      return true;\n    }\n  },\n  addText: function(type, value, prefix, escaped) {\n    var tok;\n    if (value + prefix === '') return;\n    prefix = prefix || '';\n    escaped = escaped || 0;\n    var indexOfEnd = this.interpolated ? value.indexOf(']') : -1;\n    var indexOfStart = this.interpolationAllowed ? value.indexOf('#[') : -1;\n    var indexOfEscaped = this.interpolationAllowed ? value.indexOf('\\\\#[') : -1;\n    var matchOfStringInterp = /(\\\\)?([#!]){((?:.|\\n)*)$/.exec(value);\n    var indexOfStringInterp =\n      this.interpolationAllowed && matchOfStringInterp\n        ? matchOfStringInterp.index\n        : Infinity;\n\n    if (indexOfEnd === -1) indexOfEnd = Infinity;\n    if (indexOfStart === -1) indexOfStart = Infinity;\n    if (indexOfEscaped === -1) indexOfEscaped = Infinity;\n\n    if (\n      indexOfEscaped !== Infinity &&\n      indexOfEscaped < indexOfEnd &&\n      indexOfEscaped < indexOfStart &&\n      indexOfEscaped < indexOfStringInterp\n    ) {\n      prefix = prefix + value.substring(0, indexOfEscaped) + '#[';\n      return this.addText(\n        type,\n        value.substring(indexOfEscaped + 3),\n        prefix,\n        escaped + 1\n      );\n    }\n    if (\n      indexOfStart !== Infinity &&\n      indexOfStart < indexOfEnd &&\n      indexOfStart < indexOfEscaped &&\n      indexOfStart < indexOfStringInterp\n    ) {\n      tok = this.tok(type, prefix + value.substring(0, indexOfStart));\n      this.incrementColumn(prefix.length + indexOfStart + escaped);\n      this.tokens.push(this.tokEnd(tok));\n      tok = this.tok('start-pug-interpolation');\n      this.incrementColumn(2);\n      this.tokens.push(this.tokEnd(tok));\n      var child = new this.constructor(value.substr(indexOfStart + 2), {\n        filename: this.filename,\n        interpolated: true,\n        startingLine: this.lineno,\n        startingColumn: this.colno,\n        plugins: this.plugins,\n      });\n      var interpolated;\n      try {\n        interpolated = child.getTokens();\n      } catch (ex) {\n        if (ex.code && /^PUG:/.test(ex.code)) {\n          this.colno = ex.column;\n          this.error(ex.code.substr(4), ex.msg);\n        }\n        throw ex;\n      }\n      this.colno = child.colno;\n      this.tokens = this.tokens.concat(interpolated);\n      tok = this.tok('end-pug-interpolation');\n      this.incrementColumn(1);\n      this.tokens.push(this.tokEnd(tok));\n      this.addText(type, child.input);\n      return;\n    }\n    if (\n      indexOfEnd !== Infinity &&\n      indexOfEnd < indexOfStart &&\n      indexOfEnd < indexOfEscaped &&\n      indexOfEnd < indexOfStringInterp\n    ) {\n      if (prefix + value.substring(0, indexOfEnd)) {\n        this.addText(type, value.substring(0, indexOfEnd), prefix);\n      }\n      this.ended = true;\n      this.input = value.substr(value.indexOf(']') + 1) + this.input;\n      return;\n    }\n    if (indexOfStringInterp !== Infinity) {\n      if (matchOfStringInterp[1]) {\n        prefix =\n          prefix +\n          value.substring(0, indexOfStringInterp) +\n          matchOfStringInterp[2] +\n          '{';\n        return this.addText(\n          type,\n          value.substring(indexOfStringInterp + 3),\n          prefix,\n          escaped + 1\n        );\n      }\n      var before = value.substr(0, indexOfStringInterp);\n      if (prefix || before) {\n        before = prefix + before;\n        tok = this.tok(type, before);\n        this.incrementColumn(before.length + escaped);\n        this.tokens.push(this.tokEnd(tok));\n      }\n\n      var rest = matchOfStringInterp[3];\n      var range;\n      tok = this.tok('interpolated-code');\n      this.incrementColumn(2);\n      try {\n        range = characterParser.parseUntil(rest, '}');\n      } catch (ex) {\n        if (ex.index !== undefined) {\n          this.incrementColumn(ex.index);\n        }\n        if (ex.code === 'CHARACTER_PARSER:END_OF_STRING_REACHED') {\n          this.error(\n            'NO_END_BRACKET',\n            'End of line was reached with no closing bracket for interpolation.'\n          );\n        } else if (ex.code === 'CHARACTER_PARSER:MISMATCHED_BRACKET') {\n          this.error('BRACKET_MISMATCH', ex.message);\n        } else {\n          throw ex;\n        }\n      }\n      tok.mustEscape = matchOfStringInterp[2] === '#';\n      tok.buffer = true;\n      tok.val = range.src;\n      this.assertExpression(range.src);\n\n      if (range.end + 1 < rest.length) {\n        rest = rest.substr(range.end + 1);\n        this.incrementColumn(range.end + 1);\n        this.tokens.push(this.tokEnd(tok));\n        this.addText(type, rest);\n      } else {\n        this.incrementColumn(rest.length);\n        this.tokens.push(this.tokEnd(tok));\n      }\n      return;\n    }\n\n    value = prefix + value;\n    tok = this.tok(type, value);\n    this.incrementColumn(value.length + escaped);\n    this.tokens.push(this.tokEnd(tok));\n  },\n\n  text: function() {\n    var tok =\n      this.scan(/^(?:\\| ?| )([^\\n]+)/, 'text') ||\n      this.scan(/^( )/, 'text') ||\n      this.scan(/^\\|( ?)/, 'text');\n    if (tok) {\n      this.addText('text', tok.val);\n      return true;\n    }\n  },\n\n  textHtml: function() {\n    var tok = this.scan(/^(<[^\\n]*)/, 'text-html');\n    if (tok) {\n      this.addText('text-html', tok.val);\n      return true;\n    }\n  },\n\n  /**\n   * Dot.\n   */\n\n  dot: function() {\n    var tok;\n    if ((tok = this.scanEndOfLine(/^\\./, 'dot'))) {\n      this.tokens.push(this.tokEnd(tok));\n      this.callLexerFunction('pipelessText');\n      return true;\n    }\n  },\n\n  /**\n   * Extends.\n   */\n\n  extends: function() {\n    var tok = this.scan(/^extends?(?= |$|\\n)/, 'extends');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      if (!this.callLexerFunction('path')) {\n        this.error('NO_EXTENDS_PATH', 'missing path for extends');\n      }\n      return true;\n    }\n    if (this.scan(/^extends?\\b/)) {\n      this.error('MALFORMED_EXTENDS', 'malformed extends');\n    }\n  },\n\n  /**\n   * Block prepend.\n   */\n\n  prepend: function() {\n    var captures;\n    if ((captures = /^(?:block +)?prepend +([^\\n]+)/.exec(this.input))) {\n      var name = captures[1].trim();\n      var comment = '';\n      if (name.indexOf('//') !== -1) {\n        comment =\n          '//' +\n          name\n            .split('//')\n            .slice(1)\n            .join('//');\n        name = name.split('//')[0].trim();\n      }\n      if (!name) return;\n      var tok = this.tok('block', name);\n      var len = captures[0].length - comment.length;\n      while (this.whitespaceRe.test(this.input.charAt(len - 1))) len--;\n      this.incrementColumn(len);\n      tok.mode = 'prepend';\n      this.tokens.push(this.tokEnd(tok));\n      this.consume(captures[0].length - comment.length);\n      this.incrementColumn(captures[0].length - comment.length - len);\n      return true;\n    }\n  },\n\n  /**\n   * Block append.\n   */\n\n  append: function() {\n    var captures;\n    if ((captures = /^(?:block +)?append +([^\\n]+)/.exec(this.input))) {\n      var name = captures[1].trim();\n      var comment = '';\n      if (name.indexOf('//') !== -1) {\n        comment =\n          '//' +\n          name\n            .split('//')\n            .slice(1)\n            .join('//');\n        name = name.split('//')[0].trim();\n      }\n      if (!name) return;\n      var tok = this.tok('block', name);\n      var len = captures[0].length - comment.length;\n      while (this.whitespaceRe.test(this.input.charAt(len - 1))) len--;\n      this.incrementColumn(len);\n      tok.mode = 'append';\n      this.tokens.push(this.tokEnd(tok));\n      this.consume(captures[0].length - comment.length);\n      this.incrementColumn(captures[0].length - comment.length - len);\n      return true;\n    }\n  },\n\n  /**\n   * Block.\n   */\n\n  block: function() {\n    var captures;\n    if ((captures = /^block +([^\\n]+)/.exec(this.input))) {\n      var name = captures[1].trim();\n      var comment = '';\n      if (name.indexOf('//') !== -1) {\n        comment =\n          '//' +\n          name\n            .split('//')\n            .slice(1)\n            .join('//');\n        name = name.split('//')[0].trim();\n      }\n      if (!name) return;\n      var tok = this.tok('block', name);\n      var len = captures[0].length - comment.length;\n      while (this.whitespaceRe.test(this.input.charAt(len - 1))) len--;\n      this.incrementColumn(len);\n      tok.mode = 'replace';\n      this.tokens.push(this.tokEnd(tok));\n      this.consume(captures[0].length - comment.length);\n      this.incrementColumn(captures[0].length - comment.length - len);\n      return true;\n    }\n  },\n\n  /**\n   * Mixin Block.\n   */\n\n  mixinBlock: function() {\n    var tok;\n    if ((tok = this.scanEndOfLine(/^block/, 'mixin-block'))) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Yield.\n   */\n\n  yield: function() {\n    var tok = this.scanEndOfLine(/^yield/, 'yield');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Include.\n   */\n\n  include: function() {\n    var tok = this.scan(/^include(?=:| |$|\\n)/, 'include');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      while (this.callLexerFunction('filter', {inInclude: true}));\n      if (!this.callLexerFunction('path')) {\n        if (/^[^ \\n]+/.test(this.input)) {\n          // if there is more text\n          this.fail();\n        } else {\n          // if not\n          this.error('NO_INCLUDE_PATH', 'missing path for include');\n        }\n      }\n      return true;\n    }\n    if (this.scan(/^include\\b/)) {\n      this.error('MALFORMED_INCLUDE', 'malformed include');\n    }\n  },\n\n  /**\n   * Path\n   */\n\n  path: function() {\n    var tok = this.scanEndOfLine(/^ ([^\\n]+)/, 'path');\n    if (tok && (tok.val = tok.val.trim())) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Case.\n   */\n\n  case: function() {\n    var tok = this.scanEndOfLine(/^case +([^\\n]+)/, 'case');\n    if (tok) {\n      this.incrementColumn(-tok.val.length);\n      this.assertExpression(tok.val);\n      this.incrementColumn(tok.val.length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^case\\b/)) {\n      this.error('NO_CASE_EXPRESSION', 'missing expression for case');\n    }\n  },\n\n  /**\n   * When.\n   */\n\n  when: function() {\n    var tok = this.scanEndOfLine(/^when +([^:\\n]+)/, 'when');\n    if (tok) {\n      var parser = characterParser(tok.val);\n      while (parser.isNesting() || parser.isString()) {\n        var rest = /:([^:\\n]+)/.exec(this.input);\n        if (!rest) break;\n\n        tok.val += rest[0];\n        this.consume(rest[0].length);\n        this.incrementColumn(rest[0].length);\n        parser = characterParser(tok.val);\n      }\n\n      this.incrementColumn(-tok.val.length);\n      this.assertExpression(tok.val);\n      this.incrementColumn(tok.val.length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^when\\b/)) {\n      this.error('NO_WHEN_EXPRESSION', 'missing expression for when');\n    }\n  },\n\n  /**\n   * Default.\n   */\n\n  default: function() {\n    var tok = this.scanEndOfLine(/^default/, 'default');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^default\\b/)) {\n      this.error(\n        'DEFAULT_WITH_EXPRESSION',\n        'default should not have an expression'\n      );\n    }\n  },\n\n  /**\n   * Call mixin.\n   */\n\n  call: function() {\n    var tok, captures, increment;\n    if ((captures = /^\\+(\\s*)(([-\\w]+)|(#\\{))/.exec(this.input))) {\n      // try to consume simple or interpolated call\n      if (captures[3]) {\n        // simple call\n        increment = captures[0].length;\n        this.consume(increment);\n        tok = this.tok('call', captures[3]);\n      } else {\n        // interpolated call\n        var match = this.bracketExpression(2 + captures[1].length);\n        increment = match.end + 1;\n        this.consume(increment);\n        this.assertExpression(match.src);\n        tok = this.tok('call', '#{' + match.src + '}');\n      }\n\n      this.incrementColumn(increment);\n\n      tok.args = null;\n      // Check for args (not attributes)\n      if ((captures = /^ *\\(/.exec(this.input))) {\n        var range = this.bracketExpression(captures[0].length - 1);\n        if (!/^\\s*[-\\w]+ *=/.test(range.src)) {\n          // not attributes\n          this.incrementColumn(1);\n          this.consume(range.end + 1);\n          tok.args = range.src;\n          this.assertExpression('[' + tok.args + ']');\n          for (var i = 0; i <= tok.args.length; i++) {\n            if (tok.args[i] === '\\n') {\n              this.incrementLine(1);\n            } else {\n              this.incrementColumn(1);\n            }\n          }\n        }\n      }\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Mixin.\n   */\n\n  mixin: function() {\n    var captures;\n    if ((captures = /^mixin +([-\\w]+)(?: *\\((.*)\\))? */.exec(this.input))) {\n      this.consume(captures[0].length);\n      var tok = this.tok('mixin', captures[1]);\n      tok.args = captures[2] || null;\n      this.incrementColumn(captures[0].length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Conditional.\n   */\n\n  conditional: function() {\n    var captures;\n    if ((captures = /^(if|unless|else if|else)\\b([^\\n]*)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      var type = captures[1].replace(/ /g, '-');\n      var js = captures[2] && captures[2].trim();\n      // type can be \"if\", \"else-if\" and \"else\"\n      var tok = this.tok(type, js);\n      this.incrementColumn(captures[0].length - js.length);\n\n      switch (type) {\n        case 'if':\n        case 'else-if':\n          this.assertExpression(js);\n          break;\n        case 'unless':\n          this.assertExpression(js);\n          tok.val = '!(' + js + ')';\n          tok.type = 'if';\n          break;\n        case 'else':\n          if (js) {\n            this.error(\n              'ELSE_CONDITION',\n              '`else` cannot have a condition, perhaps you meant `else if`'\n            );\n          }\n          break;\n      }\n      this.incrementColumn(js.length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * While.\n   */\n\n  while: function() {\n    var captures, tok;\n    if ((captures = /^while +([^\\n]+)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      this.assertExpression(captures[1]);\n      tok = this.tok('while', captures[1]);\n      this.incrementColumn(captures[0].length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^while\\b/)) {\n      this.error('NO_WHILE_EXPRESSION', 'missing expression for while');\n    }\n  },\n\n  /**\n   * Each.\n   */\n\n  each: function() {\n    var captures;\n    if (\n      (captures = /^(?:each|for) +([a-zA-Z_$][\\w$]*)(?: *, *([a-zA-Z_$][\\w$]*))? * in *([^\\n]+)/.exec(\n        this.input\n      ))\n    ) {\n      this.consume(captures[0].length);\n      var tok = this.tok('each', captures[1]);\n      tok.key = captures[2] || null;\n      this.incrementColumn(captures[0].length - captures[3].length);\n      this.assertExpression(captures[3]);\n      tok.code = captures[3];\n      this.incrementColumn(captures[3].length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    const name = /^each\\b/.exec(this.input) ? 'each' : 'for';\n    if (this.scan(/^(?:each|for)\\b/)) {\n      this.error(\n        'MALFORMED_EACH',\n        'This `' +\n          name +\n          '` has a syntax error. `' +\n          name +\n          '` statements should be of the form: `' +\n          name +\n          ' VARIABLE_NAME of JS_EXPRESSION`'\n      );\n    }\n    if (\n      (captures = /^- *(?:each|for) +([a-zA-Z_$][\\w$]*)(?: *, *([a-zA-Z_$][\\w$]*))? +in +([^\\n]+)/.exec(\n        this.input\n      ))\n    ) {\n      this.error(\n        'MALFORMED_EACH',\n        'Pug each and for should no longer be prefixed with a dash (\"-\"). They are pug keywords and not part of JavaScript.'\n      );\n    }\n  },\n\n  /**\n   * EachOf.\n   */\n\n  eachOf: function() {\n    var captures;\n    if ((captures = /^(?:each|for) (.*?) of *([^\\n]+)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      var tok = this.tok('eachOf', captures[1]);\n      tok.value = captures[1];\n      this.incrementColumn(captures[0].length - captures[2].length);\n      this.assertExpression(captures[2]);\n      tok.code = captures[2];\n      this.incrementColumn(captures[2].length);\n      this.tokens.push(this.tokEnd(tok));\n\n      if (\n        !(\n          /^[a-zA-Z_$][\\w$]*$/.test(tok.value.trim()) ||\n          /^\\[ *[a-zA-Z_$][\\w$]* *\\, *[a-zA-Z_$][\\w$]* *\\]$/.test(\n            tok.value.trim()\n          )\n        )\n      ) {\n        this.error(\n          'MALFORMED_EACH_OF_LVAL',\n          'The value variable for each must either be a valid identifier (e.g. `item`) or a pair of identifiers in square brackets (e.g. `[key, value]`).'\n        );\n      }\n\n      return true;\n    }\n    if (\n      (captures = /^- *(?:each|for) +([a-zA-Z_$][\\w$]*)(?: *, *([a-zA-Z_$][\\w$]*))? +of +([^\\n]+)/.exec(\n        this.input\n      ))\n    ) {\n      this.error(\n        'MALFORMED_EACH',\n        'Pug each and for should not be prefixed with a dash (\"-\"). They are pug keywords and not part of JavaScript.'\n      );\n    }\n  },\n\n  /**\n   * Code.\n   */\n\n  code: function() {\n    var captures;\n    if ((captures = /^(!?=|-)[ \\t]*([^\\n]+)/.exec(this.input))) {\n      var flags = captures[1];\n      var code = captures[2];\n      var shortened = 0;\n      if (this.interpolated) {\n        var parsed;\n        try {\n          parsed = characterParser.parseUntil(code, ']');\n        } catch (err) {\n          if (err.index !== undefined) {\n            this.incrementColumn(captures[0].length - code.length + err.index);\n          }\n          if (err.code === 'CHARACTER_PARSER:END_OF_STRING_REACHED') {\n            this.error(\n              'NO_END_BRACKET',\n              'End of line was reached with no closing bracket for interpolation.'\n            );\n          } else if (err.code === 'CHARACTER_PARSER:MISMATCHED_BRACKET') {\n            this.error('BRACKET_MISMATCH', err.message);\n          } else {\n            throw err;\n          }\n        }\n        shortened = code.length - parsed.end;\n        code = parsed.src;\n      }\n      var consumed = captures[0].length - shortened;\n      this.consume(consumed);\n      var tok = this.tok('code', code);\n      tok.mustEscape = flags.charAt(0) === '=';\n      tok.buffer = flags.charAt(0) === '=' || flags.charAt(1) === '=';\n\n      // p #[!=    abc] hey\n      //     ^              original colno\n      //     -------------- captures[0]\n      //           -------- captures[2]\n      //     ------         captures[0] - captures[2]\n      //           ^        after colno\n\n      // =   abc\n      // ^                  original colno\n      // -------            captures[0]\n      //     ---            captures[2]\n      // ----               captures[0] - captures[2]\n      //     ^              after colno\n      this.incrementColumn(captures[0].length - captures[2].length);\n      if (tok.buffer) this.assertExpression(code);\n      this.tokens.push(tok);\n\n      // p #[!=    abc] hey\n      //           ^        original colno\n      //              ----- shortened\n      //           ---      code\n      //              ^     after colno\n\n      // =   abc\n      //     ^              original colno\n      //                    shortened\n      //     ---            code\n      //        ^           after colno\n      this.incrementColumn(code.length);\n      this.tokEnd(tok);\n      return true;\n    }\n  },\n\n  /**\n   * Block code.\n   */\n  blockCode: function() {\n    var tok;\n    if ((tok = this.scanEndOfLine(/^-/, 'blockcode'))) {\n      this.tokens.push(this.tokEnd(tok));\n      this.interpolationAllowed = false;\n      this.callLexerFunction('pipelessText');\n      return true;\n    }\n  },\n\n  /**\n   * Attribute Name.\n   */\n  attribute: function(str) {\n    var quote = '';\n    var quoteRe = /['\"]/;\n    var key = '';\n    var i;\n\n    // consume all whitespace before the key\n    for (i = 0; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) break;\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    if (i === str.length) {\n      return '';\n    }\n\n    var tok = this.tok('attribute');\n\n    // quote?\n    if (quoteRe.test(str[i])) {\n      quote = str[i];\n      this.incrementColumn(1);\n      i++;\n    }\n\n    // start looping through the key\n    for (; i < str.length; i++) {\n      if (quote) {\n        if (str[i] === quote) {\n          this.incrementColumn(1);\n          i++;\n          break;\n        }\n      } else {\n        if (\n          this.whitespaceRe.test(str[i]) ||\n          str[i] === '!' ||\n          str[i] === '=' ||\n          str[i] === ','\n        ) {\n          break;\n        }\n      }\n\n      key += str[i];\n\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    tok.name = key;\n\n    var valueResponse = this.attributeValue(str.substr(i));\n\n    if (valueResponse.val) {\n      tok.val = valueResponse.val;\n      tok.mustEscape = valueResponse.mustEscape;\n    } else {\n      // was a boolean attribute (ex: `input(disabled)`)\n      tok.val = true;\n      tok.mustEscape = true;\n    }\n\n    str = valueResponse.remainingSource;\n\n    this.tokens.push(this.tokEnd(tok));\n\n    for (i = 0; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) {\n        break;\n      }\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    if (str[i] === ',') {\n      this.incrementColumn(1);\n      i++;\n    }\n\n    return str.substr(i);\n  },\n\n  /**\n   * Attribute Value.\n   */\n  attributeValue: function(str) {\n    var quoteRe = /['\"]/;\n    var val = '';\n    var done, i, x;\n    var escapeAttr = true;\n    var state = characterParser.defaultState();\n    var col = this.colno;\n    var line = this.lineno;\n\n    // consume all whitespace before the equals sign\n    for (i = 0; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) break;\n      if (str[i] === '\\n') {\n        line++;\n        col = 1;\n      } else {\n        col++;\n      }\n    }\n\n    if (i === str.length) {\n      return {remainingSource: str};\n    }\n\n    if (str[i] === '!') {\n      escapeAttr = false;\n      col++;\n      i++;\n      if (str[i] !== '=')\n        this.error(\n          'INVALID_KEY_CHARACTER',\n          'Unexpected character ' + str[i] + ' expected `=`'\n        );\n    }\n\n    if (str[i] !== '=') {\n      // check for anti-pattern `div(\"foo\"bar)`\n      if (i === 0 && str && !this.whitespaceRe.test(str[0]) && str[0] !== ',') {\n        this.error(\n          'INVALID_KEY_CHARACTER',\n          'Unexpected character ' + str[0] + ' expected `=`'\n        );\n      } else {\n        return {remainingSource: str};\n      }\n    }\n\n    this.lineno = line;\n    this.colno = col + 1;\n    i++;\n\n    // consume all whitespace before the value\n    for (; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) break;\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    line = this.lineno;\n    col = this.colno;\n\n    // start looping through the value\n    for (; i < str.length; i++) {\n      // if the character is in a string or in parentheses/brackets/braces\n      if (!(state.isNesting() || state.isString())) {\n        if (this.whitespaceRe.test(str[i])) {\n          done = false;\n\n          // find the first non-whitespace character\n          for (x = i; x < str.length; x++) {\n            if (!this.whitespaceRe.test(str[x])) {\n              // if it is a JavaScript punctuator, then assume that it is\n              // a part of the value\n              const isNotPunctuator = !characterParser.isPunctuator(str[x]);\n              const isQuote = quoteRe.test(str[x]);\n              const isColon = str[x] === ':';\n              const isSpreadOperator =\n                str[x] + str[x + 1] + str[x + 2] === '...';\n              if (\n                (isNotPunctuator || isQuote || isColon || isSpreadOperator) &&\n                this.assertExpression(val, true)\n              ) {\n                done = true;\n              }\n              break;\n            }\n          }\n\n          // if everything else is whitespace, return now so last attribute\n          // does not include trailing whitespace\n          if (done || x === str.length) {\n            break;\n          }\n        }\n\n        // if there's no whitespace and the character is not ',', the\n        // attribute did not end.\n        if (str[i] === ',' && this.assertExpression(val, true)) {\n          break;\n        }\n      }\n\n      state = characterParser.parseChar(str[i], state);\n      val += str[i];\n\n      if (str[i] === '\\n') {\n        line++;\n        col = 1;\n      } else {\n        col++;\n      }\n    }\n\n    this.assertExpression(val);\n\n    this.lineno = line;\n    this.colno = col;\n\n    return {val: val, mustEscape: escapeAttr, remainingSource: str.substr(i)};\n  },\n\n  /**\n   * Attributes.\n   */\n\n  attrs: function() {\n    var tok;\n\n    if ('(' == this.input.charAt(0)) {\n      tok = this.tok('start-attributes');\n      var index = this.bracketExpression().end;\n      var str = this.input.substr(1, index - 1);\n\n      this.incrementColumn(1);\n      this.tokens.push(this.tokEnd(tok));\n      this.assertNestingCorrect(str);\n      this.consume(index + 1);\n\n      while (str) {\n        str = this.attribute(str);\n      }\n\n      tok = this.tok('end-attributes');\n      this.incrementColumn(1);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * &attributes block\n   */\n  attributesBlock: function() {\n    if (/^&attributes\\b/.test(this.input)) {\n      var consumed = 11;\n      this.consume(consumed);\n      var tok = this.tok('&attributes');\n      this.incrementColumn(consumed);\n      var args = this.bracketExpression();\n      consumed = args.end + 1;\n      this.consume(consumed);\n      tok.val = args.src;\n      this.incrementColumn(consumed);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Indent | Outdent | Newline.\n   */\n\n  indent: function() {\n    var captures = this.scanIndentation();\n    var tok;\n\n    if (captures) {\n      var indents = captures[1].length;\n\n      this.incrementLine(1);\n      this.consume(indents + 1);\n\n      if (' ' == this.input[0] || '\\t' == this.input[0]) {\n        this.error(\n          'INVALID_INDENTATION',\n          'Invalid indentation, you can use tabs or spaces but not both'\n        );\n      }\n\n      // blank line\n      if ('\\n' == this.input[0]) {\n        this.interpolationAllowed = true;\n        return this.tokEnd(this.tok('newline'));\n      }\n\n      // outdent\n      if (indents < this.indentStack[0]) {\n        var outdent_count = 0;\n        while (this.indentStack[0] > indents) {\n          if (this.indentStack[1] < indents) {\n            this.error(\n              'INCONSISTENT_INDENTATION',\n              'Inconsistent indentation. Expecting either ' +\n                this.indentStack[1] +\n                ' or ' +\n                this.indentStack[0] +\n                ' spaces/tabs.'\n            );\n          }\n          outdent_count++;\n          this.indentStack.shift();\n        }\n        while (outdent_count--) {\n          this.colno = 1;\n          tok = this.tok('outdent');\n          this.colno = this.indentStack[0] + 1;\n          this.tokens.push(this.tokEnd(tok));\n        }\n        // indent\n      } else if (indents && indents != this.indentStack[0]) {\n        tok = this.tok('indent', indents);\n        this.colno = 1 + indents;\n        this.tokens.push(this.tokEnd(tok));\n        this.indentStack.unshift(indents);\n        // newline\n      } else {\n        tok = this.tok('newline');\n        this.colno = 1 + Math.min(this.indentStack[0] || 0, indents);\n        this.tokens.push(this.tokEnd(tok));\n      }\n\n      this.interpolationAllowed = true;\n      return true;\n    }\n  },\n\n  pipelessText: function pipelessText(indents) {\n    while (this.callLexerFunction('blank'));\n\n    var captures = this.scanIndentation();\n\n    indents = indents || (captures && captures[1].length);\n    if (indents > this.indentStack[0]) {\n      this.tokens.push(this.tokEnd(this.tok('start-pipeless-text')));\n      var tokens = [];\n      var token_indent = [];\n      var isMatch;\n      // Index in this.input. Can't use this.consume because we might need to\n      // retry lexing the block.\n      var stringPtr = 0;\n      do {\n        // text has `\\n` as a prefix\n        var i = this.input.substr(stringPtr + 1).indexOf('\\n');\n        if (-1 == i) i = this.input.length - stringPtr - 1;\n        var str = this.input.substr(stringPtr + 1, i);\n        var lineCaptures = this.indentRe.exec('\\n' + str);\n        var lineIndents = lineCaptures && lineCaptures[1].length;\n        isMatch = lineIndents >= indents;\n        token_indent.push(isMatch);\n        isMatch = isMatch || !str.trim();\n        if (isMatch) {\n          // consume test along with `\\n` prefix if match\n          stringPtr += str.length + 1;\n          tokens.push(str.substr(indents));\n        } else if (lineIndents > this.indentStack[0]) {\n          // line is indented less than the first line but is still indented\n          // need to retry lexing the text block\n          this.tokens.pop();\n          return pipelessText.call(this, lineCaptures[1].length);\n        }\n      } while (this.input.length - stringPtr && isMatch);\n      this.consume(stringPtr);\n      while (this.input.length === 0 && tokens[tokens.length - 1] === '')\n        tokens.pop();\n      tokens.forEach(\n        function(token, i) {\n          var tok;\n          this.incrementLine(1);\n          if (i !== 0) tok = this.tok('newline');\n          if (token_indent[i]) this.incrementColumn(indents);\n          if (tok) this.tokens.push(this.tokEnd(tok));\n          this.addText('text', token);\n        }.bind(this)\n      );\n      this.tokens.push(this.tokEnd(this.tok('end-pipeless-text')));\n      return true;\n    }\n  },\n\n  /**\n   * Slash.\n   */\n\n  slash: function() {\n    var tok = this.scan(/^\\//, 'slash');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * ':'\n   */\n\n  colon: function() {\n    var tok = this.scan(/^: +/, ':');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  fail: function() {\n    this.error(\n      'UNEXPECTED_TEXT',\n      'unexpected text \"' + this.input.substr(0, 5) + '\"'\n    );\n  },\n\n  callLexerFunction: function(func) {\n    var rest = [];\n    for (var i = 1; i < arguments.length; i++) {\n      rest.push(arguments[i]);\n    }\n    var pluginArgs = [this].concat(rest);\n    for (var i = 0; i < this.plugins.length; i++) {\n      var plugin = this.plugins[i];\n      if (plugin[func] && plugin[func].apply(plugin, pluginArgs)) {\n        return true;\n      }\n    }\n    return this[func].apply(this, rest);\n  },\n\n  /**\n   * Move to the next token\n   *\n   * @api private\n   */\n\n  advance: function() {\n    return (\n      this.callLexerFunction('blank') ||\n      this.callLexerFunction('eos') ||\n      this.callLexerFunction('endInterpolation') ||\n      this.callLexerFunction('yield') ||\n      this.callLexerFunction('doctype') ||\n      this.callLexerFunction('interpolation') ||\n      this.callLexerFunction('case') ||\n      this.callLexerFunction('when') ||\n      this.callLexerFunction('default') ||\n      this.callLexerFunction('extends') ||\n      this.callLexerFunction('append') ||\n      this.callLexerFunction('prepend') ||\n      this.callLexerFunction('block') ||\n      this.callLexerFunction('mixinBlock') ||\n      this.callLexerFunction('include') ||\n      this.callLexerFunction('mixin') ||\n      this.callLexerFunction('call') ||\n      this.callLexerFunction('conditional') ||\n      this.callLexerFunction('eachOf') ||\n      this.callLexerFunction('each') ||\n      this.callLexerFunction('while') ||\n      this.callLexerFunction('tag') ||\n      this.callLexerFunction('filter') ||\n      this.callLexerFunction('blockCode') ||\n      this.callLexerFunction('code') ||\n      this.callLexerFunction('id') ||\n      this.callLexerFunction('dot') ||\n      this.callLexerFunction('className') ||\n      this.callLexerFunction('attrs') ||\n      this.callLexerFunction('attributesBlock') ||\n      this.callLexerFunction('indent') ||\n      this.callLexerFunction('text') ||\n      this.callLexerFunction('textHtml') ||\n      this.callLexerFunction('comment') ||\n      this.callLexerFunction('slash') ||\n      this.callLexerFunction('colon') ||\n      this.fail()\n    );\n  },\n\n  /**\n   * Return an array of tokens for the current file\n   *\n   * @returns {Array.<Token>}\n   * @api public\n   */\n  getTokens: function() {\n    while (!this.ended) {\n      this.callLexerFunction('advance');\n    }\n    return this.tokens;\n  },\n};\n", "'use strict';\n\nvar error = require('pug-error');\n\nmodule.exports = stripComments;\n\nfunction unexpectedToken(type, occasion, filename, line) {\n  var msg = '`' + type + '` encountered when ' + occasion;\n  throw error('UNEXPECTED_TOKEN', msg, {filename: filename, line: line});\n}\n\nfunction stripComments(input, options) {\n  options = options || {};\n\n  // Default: strip unbuffered comments and leave buffered ones alone\n  var stripUnbuffered = options.stripUnbuffered !== false;\n  var stripBuffered = options.stripBuffered === true;\n  var filename = options.filename;\n\n  var out = [];\n  // If we have encountered a comment token and are not sure if we have gotten\n  // out of the comment or not\n  var inComment = false;\n  // If we are sure that we are in a block comment and all tokens except\n  // `end-pipeless-text` should be ignored\n  var inPipelessText = false;\n\n  return input.filter(function(tok) {\n    switch (tok.type) {\n      case 'comment':\n        if (inComment) {\n          unexpectedToken(\n            'comment',\n            'already in a comment',\n            filename,\n            tok.line\n          );\n        } else {\n          inComment = tok.buffer ? stripBuffered : stripUnbuffered;\n          return !inComment;\n        }\n      case 'start-pipeless-text':\n        if (!inComment) return true;\n        if (inPipelessText) {\n          unexpectedToken(\n            'start-pipeless-text',\n            'already in pipeless text mode',\n            filename,\n            tok.line\n          );\n        }\n        inPipelessText = true;\n        return false;\n      case 'end-pipeless-text':\n        if (!inComment) return true;\n        if (!inPipelessText) {\n          unexpectedToken(\n            'end-pipeless-text',\n            'not in pipeless text mode',\n            filename,\n            tok.line\n          );\n        }\n        inPipelessText = false;\n        inComment = false;\n        return false;\n      // There might be a `text` right after `comment` but before\n      // `start-pipeless-text`. Treat it accordingly.\n      case 'text':\n        return !inComment;\n      default:\n        if (inPipelessText) return false;\n        inComment = false;\n        return true;\n    }\n  });\n}\n", "'use strict';\n\nmodule.exports = TokenStream;\nfunction TokenStream(tokens) {\n  if (!Array.isArray(tokens)) {\n    throw new TypeError('tokens must be passed to TokenStream as an array.');\n  }\n  this._tokens = tokens;\n}\nTokenStream.prototype.lookahead = function (index) {\n  if (this._tokens.length <= index) {\n    throw new Error('Cannot read past the end of a stream');\n  }\n  return this._tokens[index];\n};\nTokenStream.prototype.peek = function () {\n  if (this._tokens.length === 0) {\n    throw new Error('Cannot read past the end of a stream');\n  }\n  return this._tokens[0];\n};\nTokenStream.prototype.advance = function () {\n  if (this._tokens.length === 0) {\n    throw new Error('Cannot read past the end of a stream');\n  }\n  return this._tokens.shift();\n};\nTokenStream.prototype.defer = function (token) {\n  this._tokens.unshift(token);\n};\n", "'use strict';\n\nmodule.exports = [\n  'a',\n  'abbr',\n  'acronym',\n  'b',\n  'br',\n  'code',\n  'em',\n  'font',\n  'i',\n  'img',\n  'ins',\n  'kbd',\n  'map',\n  'samp',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n];\n", "'use strict';\n\nvar assert = require('assert');\nvar TokenStream = require('token-stream');\nvar error = require('pug-error');\nvar inlineTags = require('./lib/inline-tags');\n\nmodule.exports = parse;\nmodule.exports.Parser = Parser;\nfunction parse(tokens, options) {\n  var parser = new Parser(tokens, options);\n  var ast = parser.parse();\n  return JSON.parse(JSON.stringify(ast));\n}\n\n/**\n * Initialize `Parser` with the given input `str` and `filename`.\n *\n * @param {String} str\n * @param {String} filename\n * @param {Object} options\n * @api public\n */\n\nfunction Parser(tokens, options) {\n  options = options || {};\n  if (!Array.isArray(tokens)) {\n    throw new Error(\n      'Expected tokens to be an Array but got \"' + typeof tokens + '\"'\n    );\n  }\n  if (typeof options !== 'object') {\n    throw new Error(\n      'Expected \"options\" to be an object but got \"' + typeof options + '\"'\n    );\n  }\n  this.tokens = new TokenStream(tokens);\n  this.filename = options.filename;\n  this.src = options.src;\n  this.inMixin = 0;\n  this.plugins = options.plugins || [];\n}\n\n/**\n * Parser prototype.\n */\n\nParser.prototype = {\n  /**\n   * Save original constructor\n   */\n\n  constructor: Parser,\n\n  error: function(code, message, token) {\n    var err = error(code, message, {\n      line: token.loc.start.line,\n      column: token.loc.start.column,\n      filename: this.filename,\n      src: this.src,\n    });\n    throw err;\n  },\n\n  /**\n   * Return the next token object.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  advance: function() {\n    return this.tokens.advance();\n  },\n\n  /**\n   * Single token lookahead.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  peek: function() {\n    return this.tokens.peek();\n  },\n\n  /**\n   * `n` token lookahead.\n   *\n   * @param {Number} n\n   * @return {Object}\n   * @api private\n   */\n\n  lookahead: function(n) {\n    return this.tokens.lookahead(n);\n  },\n\n  /**\n   * Parse input returning a string of js for evaluation.\n   *\n   * @return {String}\n   * @api public\n   */\n\n  parse: function() {\n    var block = this.emptyBlock(0);\n\n    while ('eos' != this.peek().type) {\n      if ('newline' == this.peek().type) {\n        this.advance();\n      } else if ('text-html' == this.peek().type) {\n        block.nodes = block.nodes.concat(this.parseTextHtml());\n      } else {\n        var expr = this.parseExpr();\n        if (expr) {\n          if (expr.type === 'Block') {\n            block.nodes = block.nodes.concat(expr.nodes);\n          } else {\n            block.nodes.push(expr);\n          }\n        }\n      }\n    }\n\n    return block;\n  },\n\n  /**\n   * Expect the given type, or throw an exception.\n   *\n   * @param {String} type\n   * @api private\n   */\n\n  expect: function(type) {\n    if (this.peek().type === type) {\n      return this.advance();\n    } else {\n      this.error(\n        'INVALID_TOKEN',\n        'expected \"' + type + '\", but got \"' + this.peek().type + '\"',\n        this.peek()\n      );\n    }\n  },\n\n  /**\n   * Accept the given `type`.\n   *\n   * @param {String} type\n   * @api private\n   */\n\n  accept: function(type) {\n    if (this.peek().type === type) {\n      return this.advance();\n    }\n  },\n\n  initBlock: function(line, nodes) {\n    /* istanbul ignore if */\n    if ((line | 0) !== line) throw new Error('`line` is not an integer');\n    /* istanbul ignore if */\n    if (!Array.isArray(nodes)) throw new Error('`nodes` is not an array');\n    return {\n      type: 'Block',\n      nodes: nodes,\n      line: line,\n      filename: this.filename,\n    };\n  },\n\n  emptyBlock: function(line) {\n    return this.initBlock(line, []);\n  },\n\n  runPlugin: function(context, tok) {\n    var rest = [this];\n    for (var i = 2; i < arguments.length; i++) {\n      rest.push(arguments[i]);\n    }\n    var pluginContext;\n    for (var i = 0; i < this.plugins.length; i++) {\n      var plugin = this.plugins[i];\n      if (plugin[context] && plugin[context][tok.type]) {\n        if (pluginContext)\n          throw new Error(\n            'Multiple plugin handlers found for context ' +\n              JSON.stringify(context) +\n              ', token type ' +\n              JSON.stringify(tok.type)\n          );\n        pluginContext = plugin[context];\n      }\n    }\n    if (pluginContext)\n      return pluginContext[tok.type].apply(pluginContext, rest);\n  },\n\n  /**\n   *   tag\n   * | doctype\n   * | mixin\n   * | include\n   * | filter\n   * | comment\n   * | text\n   * | text-html\n   * | dot\n   * | each\n   * | code\n   * | yield\n   * | id\n   * | class\n   * | interpolation\n   */\n\n  parseExpr: function() {\n    switch (this.peek().type) {\n      case 'tag':\n        return this.parseTag();\n      case 'mixin':\n        return this.parseMixin();\n      case 'block':\n        return this.parseBlock();\n      case 'mixin-block':\n        return this.parseMixinBlock();\n      case 'case':\n        return this.parseCase();\n      case 'extends':\n        return this.parseExtends();\n      case 'include':\n        return this.parseInclude();\n      case 'doctype':\n        return this.parseDoctype();\n      case 'filter':\n        return this.parseFilter();\n      case 'comment':\n        return this.parseComment();\n      case 'text':\n      case 'interpolated-code':\n      case 'start-pug-interpolation':\n        return this.parseText({block: true});\n      case 'text-html':\n        return this.initBlock(this.peek().loc.start.line, this.parseTextHtml());\n      case 'dot':\n        return this.parseDot();\n      case 'each':\n        return this.parseEach();\n      case 'eachOf':\n        return this.parseEachOf();\n      case 'code':\n        return this.parseCode();\n      case 'blockcode':\n        return this.parseBlockCode();\n      case 'if':\n        return this.parseConditional();\n      case 'while':\n        return this.parseWhile();\n      case 'call':\n        return this.parseCall();\n      case 'interpolation':\n        return this.parseInterpolation();\n      case 'yield':\n        return this.parseYield();\n      case 'id':\n      case 'class':\n        if (!this.peek().loc.start) debugger;\n        this.tokens.defer({\n          type: 'tag',\n          val: 'div',\n          loc: this.peek().loc,\n          filename: this.filename,\n        });\n        return this.parseExpr();\n      default:\n        var pluginResult = this.runPlugin('expressionTokens', this.peek());\n        if (pluginResult) return pluginResult;\n        this.error(\n          'INVALID_TOKEN',\n          'unexpected token \"' + this.peek().type + '\"',\n          this.peek()\n        );\n    }\n  },\n\n  parseDot: function() {\n    this.advance();\n    return this.parseTextBlock();\n  },\n\n  /**\n   * Text\n   */\n\n  parseText: function(options) {\n    var tags = [];\n    var lineno = this.peek().loc.start.line;\n    var nextTok = this.peek();\n    loop: while (true) {\n      switch (nextTok.type) {\n        case 'text':\n          var tok = this.advance();\n          tags.push({\n            type: 'Text',\n            val: tok.val,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'interpolated-code':\n          var tok = this.advance();\n          tags.push({\n            type: 'Code',\n            val: tok.val,\n            buffer: tok.buffer,\n            mustEscape: tok.mustEscape !== false,\n            isInline: true,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'newline':\n          if (!options || !options.block) break loop;\n          var tok = this.advance();\n          var nextType = this.peek().type;\n          if (nextType === 'text' || nextType === 'interpolated-code') {\n            tags.push({\n              type: 'Text',\n              val: '\\n',\n              line: tok.loc.start.line,\n              column: tok.loc.start.column,\n              filename: this.filename,\n            });\n          }\n          break;\n        case 'start-pug-interpolation':\n          this.advance();\n          tags.push(this.parseExpr());\n          this.expect('end-pug-interpolation');\n          break;\n        default:\n          var pluginResult = this.runPlugin('textTokens', nextTok, tags);\n          if (pluginResult) break;\n          break loop;\n      }\n      nextTok = this.peek();\n    }\n    if (tags.length === 1) return tags[0];\n    else return this.initBlock(lineno, tags);\n  },\n\n  parseTextHtml: function() {\n    var nodes = [];\n    var currentNode = null;\n    loop: while (true) {\n      switch (this.peek().type) {\n        case 'text-html':\n          var text = this.advance();\n          if (!currentNode) {\n            currentNode = {\n              type: 'Text',\n              val: text.val,\n              filename: this.filename,\n              line: text.loc.start.line,\n              column: text.loc.start.column,\n              isHtml: true,\n            };\n            nodes.push(currentNode);\n          } else {\n            currentNode.val += '\\n' + text.val;\n          }\n          break;\n        case 'indent':\n          var block = this.block();\n          block.nodes.forEach(function(node) {\n            if (node.isHtml) {\n              if (!currentNode) {\n                currentNode = node;\n                nodes.push(currentNode);\n              } else {\n                currentNode.val += '\\n' + node.val;\n              }\n            } else {\n              currentNode = null;\n              nodes.push(node);\n            }\n          });\n          break;\n        case 'code':\n          currentNode = null;\n          nodes.push(this.parseCode(true));\n          break;\n        case 'newline':\n          this.advance();\n          break;\n        default:\n          break loop;\n      }\n    }\n    return nodes;\n  },\n\n  /**\n   *   ':' expr\n   * | block\n   */\n\n  parseBlockExpansion: function() {\n    var tok = this.accept(':');\n    if (tok) {\n      var expr = this.parseExpr();\n      return expr.type === 'Block'\n        ? expr\n        : this.initBlock(tok.loc.start.line, [expr]);\n    } else {\n      return this.block();\n    }\n  },\n\n  /**\n   * case\n   */\n\n  parseCase: function() {\n    var tok = this.expect('case');\n    var node = {\n      type: 'Case',\n      expr: tok.val,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    var block = this.emptyBlock(tok.loc.start.line + 1);\n    this.expect('indent');\n    while ('outdent' != this.peek().type) {\n      switch (this.peek().type) {\n        case 'comment':\n        case 'newline':\n          this.advance();\n          break;\n        case 'when':\n          block.nodes.push(this.parseWhen());\n          break;\n        case 'default':\n          block.nodes.push(this.parseDefault());\n          break;\n        default:\n          var pluginResult = this.runPlugin('caseTokens', this.peek(), block);\n          if (pluginResult) break;\n          this.error(\n            'INVALID_TOKEN',\n            'Unexpected token \"' +\n              this.peek().type +\n              '\", expected \"when\", \"default\" or \"newline\"',\n            this.peek()\n          );\n      }\n    }\n    this.expect('outdent');\n\n    node.block = block;\n\n    return node;\n  },\n\n  /**\n   * when\n   */\n\n  parseWhen: function() {\n    var tok = this.expect('when');\n    if (this.peek().type !== 'newline') {\n      return {\n        type: 'When',\n        expr: tok.val,\n        block: this.parseBlockExpansion(),\n        debug: false,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    } else {\n      return {\n        type: 'When',\n        expr: tok.val,\n        debug: false,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    }\n  },\n\n  /**\n   * default\n   */\n\n  parseDefault: function() {\n    var tok = this.expect('default');\n    return {\n      type: 'When',\n      expr: 'default',\n      block: this.parseBlockExpansion(),\n      debug: false,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * code\n   */\n\n  parseCode: function(noBlock) {\n    var tok = this.expect('code');\n    assert(\n      typeof tok.mustEscape === 'boolean',\n      'Please update to the newest version of pug-lexer.'\n    );\n    var node = {\n      type: 'Code',\n      val: tok.val,\n      buffer: tok.buffer,\n      mustEscape: tok.mustEscape !== false,\n      isInline: !!noBlock,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    // todo: why is this here?  It seems like a hacky workaround\n    if (node.val.match(/^ *else/)) node.debug = false;\n\n    if (noBlock) return node;\n\n    var block;\n\n    // handle block\n    block = 'indent' == this.peek().type;\n    if (block) {\n      if (tok.buffer) {\n        this.error(\n          'BLOCK_IN_BUFFERED_CODE',\n          'Buffered code cannot have a block attached to it',\n          this.peek()\n        );\n      }\n      node.block = this.block();\n    }\n\n    return node;\n  },\n  parseConditional: function() {\n    var tok = this.expect('if');\n    var node = {\n      type: 'Conditional',\n      test: tok.val,\n      consequent: this.emptyBlock(tok.loc.start.line),\n      alternate: null,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    // handle block\n    if ('indent' == this.peek().type) {\n      node.consequent = this.block();\n    }\n\n    var currentNode = node;\n    while (true) {\n      if (this.peek().type === 'newline') {\n        this.expect('newline');\n      } else if (this.peek().type === 'else-if') {\n        tok = this.expect('else-if');\n        currentNode = currentNode.alternate = {\n          type: 'Conditional',\n          test: tok.val,\n          consequent: this.emptyBlock(tok.loc.start.line),\n          alternate: null,\n          line: tok.loc.start.line,\n          column: tok.loc.start.column,\n          filename: this.filename,\n        };\n        if ('indent' == this.peek().type) {\n          currentNode.consequent = this.block();\n        }\n      } else if (this.peek().type === 'else') {\n        this.expect('else');\n        if (this.peek().type === 'indent') {\n          currentNode.alternate = this.block();\n        }\n        break;\n      } else {\n        break;\n      }\n    }\n\n    return node;\n  },\n  parseWhile: function() {\n    var tok = this.expect('while');\n    var node = {\n      type: 'While',\n      test: tok.val,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    // handle block\n    if ('indent' == this.peek().type) {\n      node.block = this.block();\n    } else {\n      node.block = this.emptyBlock(tok.loc.start.line);\n    }\n\n    return node;\n  },\n\n  /**\n   * block code\n   */\n\n  parseBlockCode: function() {\n    var tok = this.expect('blockcode');\n    var line = tok.loc.start.line;\n    var column = tok.loc.start.column;\n    var body = this.peek();\n    var text = '';\n    if (body.type === 'start-pipeless-text') {\n      this.advance();\n      while (this.peek().type !== 'end-pipeless-text') {\n        tok = this.advance();\n        switch (tok.type) {\n          case 'text':\n            text += tok.val;\n            break;\n          case 'newline':\n            text += '\\n';\n            break;\n          default:\n            var pluginResult = this.runPlugin('blockCodeTokens', tok, tok);\n            if (pluginResult) {\n              text += pluginResult;\n              break;\n            }\n            this.error(\n              'INVALID_TOKEN',\n              'Unexpected token type: ' + tok.type,\n              tok\n            );\n        }\n      }\n      this.advance();\n    }\n    return {\n      type: 'Code',\n      val: text,\n      buffer: false,\n      mustEscape: false,\n      isInline: false,\n      line: line,\n      column: column,\n      filename: this.filename,\n    };\n  },\n  /**\n   * comment\n   */\n\n  parseComment: function() {\n    var tok = this.expect('comment');\n    var block;\n    if ((block = this.parseTextBlock())) {\n      return {\n        type: 'BlockComment',\n        val: tok.val,\n        block: block,\n        buffer: tok.buffer,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    } else {\n      return {\n        type: 'Comment',\n        val: tok.val,\n        buffer: tok.buffer,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    }\n  },\n\n  /**\n   * doctype\n   */\n\n  parseDoctype: function() {\n    var tok = this.expect('doctype');\n    return {\n      type: 'Doctype',\n      val: tok.val,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  parseIncludeFilter: function() {\n    var tok = this.expect('filter');\n    var attrs = [];\n\n    if (this.peek().type === 'start-attributes') {\n      attrs = this.attrs();\n    }\n\n    return {\n      type: 'IncludeFilter',\n      name: tok.val,\n      attrs: attrs,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * filter attrs? text-block\n   */\n\n  parseFilter: function() {\n    var tok = this.expect('filter');\n    var block,\n      attrs = [];\n\n    if (this.peek().type === 'start-attributes') {\n      attrs = this.attrs();\n    }\n\n    if (this.peek().type === 'text') {\n      var textToken = this.advance();\n      block = this.initBlock(textToken.loc.start.line, [\n        {\n          type: 'Text',\n          val: textToken.val,\n          line: textToken.loc.start.line,\n          column: textToken.loc.start.column,\n          filename: this.filename,\n        },\n      ]);\n    } else if (this.peek().type === 'filter') {\n      block = this.initBlock(tok.loc.start.line, [this.parseFilter()]);\n    } else {\n      block = this.parseTextBlock() || this.emptyBlock(tok.loc.start.line);\n    }\n\n    return {\n      type: 'Filter',\n      name: tok.val,\n      block: block,\n      attrs: attrs,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * each block\n   */\n\n  parseEach: function() {\n    var tok = this.expect('each');\n    var node = {\n      type: 'Each',\n      obj: tok.code,\n      val: tok.val,\n      key: tok.key,\n      block: this.block(),\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    if (this.peek().type == 'else') {\n      this.advance();\n      node.alternate = this.block();\n    }\n    return node;\n  },\n\n  parseEachOf: function() {\n    var tok = this.expect('eachOf');\n    var node = {\n      type: 'EachOf',\n      obj: tok.code,\n      val: tok.val,\n      block: this.block(),\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    return node;\n  },\n  /**\n   * 'extends' name\n   */\n\n  parseExtends: function() {\n    var tok = this.expect('extends');\n    var path = this.expect('path');\n    return {\n      type: 'Extends',\n      file: {\n        type: 'FileReference',\n        path: path.val.trim(),\n        line: path.loc.start.line,\n        column: path.loc.start.column,\n        filename: this.filename,\n      },\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * 'block' name block\n   */\n\n  parseBlock: function() {\n    var tok = this.expect('block');\n\n    var node =\n      'indent' == this.peek().type\n        ? this.block()\n        : this.emptyBlock(tok.loc.start.line);\n    node.type = 'NamedBlock';\n    node.name = tok.val.trim();\n    node.mode = tok.mode;\n    node.line = tok.loc.start.line;\n    node.column = tok.loc.start.column;\n\n    return node;\n  },\n\n  parseMixinBlock: function() {\n    var tok = this.expect('mixin-block');\n    if (!this.inMixin) {\n      this.error(\n        'BLOCK_OUTISDE_MIXIN',\n        'Anonymous blocks are not allowed unless they are part of a mixin.',\n        tok\n      );\n    }\n    return {\n      type: 'MixinBlock',\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  parseYield: function() {\n    var tok = this.expect('yield');\n    return {\n      type: 'YieldBlock',\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * include block?\n   */\n\n  parseInclude: function() {\n    var tok = this.expect('include');\n    var node = {\n      type: 'Include',\n      file: {\n        type: 'FileReference',\n        filename: this.filename,\n      },\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    var filters = [];\n    while (this.peek().type === 'filter') {\n      filters.push(this.parseIncludeFilter());\n    }\n    var path = this.expect('path');\n\n    node.file.path = path.val.trim();\n    node.file.line = path.loc.start.line;\n    node.file.column = path.loc.start.column;\n\n    if (\n      (/\\.jade$/.test(node.file.path) || /\\.pug$/.test(node.file.path)) &&\n      !filters.length\n    ) {\n      node.block =\n        'indent' == this.peek().type\n          ? this.block()\n          : this.emptyBlock(tok.loc.start.line);\n      if (/\\.jade$/.test(node.file.path)) {\n        console.warn(\n          this.filename +\n            ', line ' +\n            tok.loc.start.line +\n            ':\\nThe .jade extension is deprecated, use .pug for \"' +\n            node.file.path +\n            '\".'\n        );\n      }\n    } else {\n      node.type = 'RawInclude';\n      node.filters = filters;\n      if (this.peek().type === 'indent') {\n        this.error(\n          'RAW_INCLUDE_BLOCK',\n          'Raw inclusion cannot contain a block',\n          this.peek()\n        );\n      }\n    }\n    return node;\n  },\n\n  /**\n   * call ident block\n   */\n\n  parseCall: function() {\n    var tok = this.expect('call');\n    var name = tok.val;\n    var args = tok.args;\n    var mixin = {\n      type: 'Mixin',\n      name: name,\n      args: args,\n      block: this.emptyBlock(tok.loc.start.line),\n      call: true,\n      attrs: [],\n      attributeBlocks: [],\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    this.tag(mixin);\n    if (mixin.code) {\n      mixin.block.nodes.push(mixin.code);\n      delete mixin.code;\n    }\n    if (mixin.block.nodes.length === 0) mixin.block = null;\n    return mixin;\n  },\n\n  /**\n   * mixin block\n   */\n\n  parseMixin: function() {\n    var tok = this.expect('mixin');\n    var name = tok.val;\n    var args = tok.args;\n\n    if ('indent' == this.peek().type) {\n      this.inMixin++;\n      var mixin = {\n        type: 'Mixin',\n        name: name,\n        args: args,\n        block: this.block(),\n        call: false,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n      this.inMixin--;\n      return mixin;\n    } else {\n      this.error(\n        'MIXIN_WITHOUT_BODY',\n        'Mixin ' + name + ' declared without body',\n        tok\n      );\n    }\n  },\n\n  /**\n   * indent (text | newline)* outdent\n   */\n\n  parseTextBlock: function() {\n    var tok = this.accept('start-pipeless-text');\n    if (!tok) return;\n    var block = this.emptyBlock(tok.loc.start.line);\n    while (this.peek().type !== 'end-pipeless-text') {\n      var tok = this.advance();\n      switch (tok.type) {\n        case 'text':\n          block.nodes.push({\n            type: 'Text',\n            val: tok.val,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'newline':\n          block.nodes.push({\n            type: 'Text',\n            val: '\\n',\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'start-pug-interpolation':\n          block.nodes.push(this.parseExpr());\n          this.expect('end-pug-interpolation');\n          break;\n        case 'interpolated-code':\n          block.nodes.push({\n            type: 'Code',\n            val: tok.val,\n            buffer: tok.buffer,\n            mustEscape: tok.mustEscape !== false,\n            isInline: true,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        default:\n          var pluginResult = this.runPlugin('textBlockTokens', tok, block, tok);\n          if (pluginResult) break;\n          this.error(\n            'INVALID_TOKEN',\n            'Unexpected token type: ' + tok.type,\n            tok\n          );\n      }\n    }\n    this.advance();\n    return block;\n  },\n\n  /**\n   * indent expr* outdent\n   */\n\n  block: function() {\n    var tok = this.expect('indent');\n    var block = this.emptyBlock(tok.loc.start.line);\n    while ('outdent' != this.peek().type) {\n      if ('newline' == this.peek().type) {\n        this.advance();\n      } else if ('text-html' == this.peek().type) {\n        block.nodes = block.nodes.concat(this.parseTextHtml());\n      } else {\n        var expr = this.parseExpr();\n        if (expr.type === 'Block') {\n          block.nodes = block.nodes.concat(expr.nodes);\n        } else {\n          block.nodes.push(expr);\n        }\n      }\n    }\n    this.expect('outdent');\n    return block;\n  },\n\n  /**\n   * interpolation (attrs | class | id)* (text | code | ':')? newline* block?\n   */\n\n  parseInterpolation: function() {\n    var tok = this.advance();\n    var tag = {\n      type: 'InterpolatedTag',\n      expr: tok.val,\n      selfClosing: false,\n      block: this.emptyBlock(tok.loc.start.line),\n      attrs: [],\n      attributeBlocks: [],\n      isInline: false,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    return this.tag(tag, {selfClosingAllowed: true});\n  },\n\n  /**\n   * tag (attrs | class | id)* (text | code | ':')? newline* block?\n   */\n\n  parseTag: function() {\n    var tok = this.advance();\n    var tag = {\n      type: 'Tag',\n      name: tok.val,\n      selfClosing: false,\n      block: this.emptyBlock(tok.loc.start.line),\n      attrs: [],\n      attributeBlocks: [],\n      isInline: inlineTags.indexOf(tok.val) !== -1,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    return this.tag(tag, {selfClosingAllowed: true});\n  },\n\n  /**\n   * Parse tag.\n   */\n\n  tag: function(tag, options) {\n    var seenAttrs = false;\n    var attributeNames = [];\n    var selfClosingAllowed = options && options.selfClosingAllowed;\n    // (attrs | class | id)*\n    out: while (true) {\n      switch (this.peek().type) {\n        case 'id':\n        case 'class':\n          var tok = this.advance();\n          if (tok.type === 'id') {\n            if (attributeNames.indexOf('id') !== -1) {\n              this.error(\n                'DUPLICATE_ID',\n                'Duplicate attribute \"id\" is not allowed.',\n                tok\n              );\n            }\n            attributeNames.push('id');\n          }\n          tag.attrs.push({\n            name: tok.type,\n            val: \"'\" + tok.val + \"'\",\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n            mustEscape: false,\n          });\n          continue;\n        case 'start-attributes':\n          if (seenAttrs) {\n            console.warn(\n              this.filename +\n                ', line ' +\n                this.peek().loc.start.line +\n                ':\\nYou should not have pug tags with multiple attributes.'\n            );\n          }\n          seenAttrs = true;\n          tag.attrs = tag.attrs.concat(this.attrs(attributeNames));\n          continue;\n        case '&attributes':\n          var tok = this.advance();\n          tag.attributeBlocks.push({\n            type: 'AttributeBlock',\n            val: tok.val,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        default:\n          var pluginResult = this.runPlugin(\n            'tagAttributeTokens',\n            this.peek(),\n            tag,\n            attributeNames\n          );\n          if (pluginResult) break;\n          break out;\n      }\n    }\n\n    // check immediate '.'\n    if ('dot' == this.peek().type) {\n      tag.textOnly = true;\n      this.advance();\n    }\n\n    // (text | code | ':')?\n    switch (this.peek().type) {\n      case 'text':\n      case 'interpolated-code':\n        var text = this.parseText();\n        if (text.type === 'Block') {\n          tag.block.nodes.push.apply(tag.block.nodes, text.nodes);\n        } else {\n          tag.block.nodes.push(text);\n        }\n        break;\n      case 'code':\n        tag.block.nodes.push(this.parseCode(true));\n        break;\n      case ':':\n        this.advance();\n        var expr = this.parseExpr();\n        tag.block =\n          expr.type === 'Block' ? expr : this.initBlock(tag.line, [expr]);\n        break;\n      case 'newline':\n      case 'indent':\n      case 'outdent':\n      case 'eos':\n      case 'start-pipeless-text':\n      case 'end-pug-interpolation':\n        break;\n      case 'slash':\n        if (selfClosingAllowed) {\n          this.advance();\n          tag.selfClosing = true;\n          break;\n        }\n      default:\n        var pluginResult = this.runPlugin(\n          'tagTokens',\n          this.peek(),\n          tag,\n          options\n        );\n        if (pluginResult) break;\n        this.error(\n          'INVALID_TOKEN',\n          'Unexpected token `' +\n            this.peek().type +\n            '` expected `text`, `interpolated-code`, `code`, `:`' +\n            (selfClosingAllowed ? ', `slash`' : '') +\n            ', `newline` or `eos`',\n          this.peek()\n        );\n    }\n\n    // newline*\n    while ('newline' == this.peek().type) this.advance();\n\n    // block?\n    if (tag.textOnly) {\n      tag.block = this.parseTextBlock() || this.emptyBlock(tag.line);\n    } else if ('indent' == this.peek().type) {\n      var block = this.block();\n      for (var i = 0, len = block.nodes.length; i < len; ++i) {\n        tag.block.nodes.push(block.nodes[i]);\n      }\n    }\n\n    return tag;\n  },\n\n  attrs: function(attributeNames) {\n    this.expect('start-attributes');\n\n    var attrs = [];\n    var tok = this.advance();\n    while (tok.type === 'attribute') {\n      if (tok.name !== 'class' && attributeNames) {\n        if (attributeNames.indexOf(tok.name) !== -1) {\n          this.error(\n            'DUPLICATE_ATTRIBUTE',\n            'Duplicate attribute \"' + tok.name + '\" is not allowed.',\n            tok\n          );\n        }\n        attributeNames.push(tok.name);\n      }\n      attrs.push({\n        name: tok.name,\n        val: tok.val,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n        mustEscape: tok.mustEscape !== false,\n      });\n      tok = this.advance();\n    }\n    this.tokens.defer(tok);\n    this.expect('end-attributes');\n    return attrs;\n  },\n};\n", "'use strict';\n\nmodule.exports = walkAST;\nfunction walkAST(ast, before, after, options) {\n  if (after && typeof after === 'object' && typeof options === 'undefined') {\n    options = after;\n    after = null;\n  }\n  options = options || {includeDependencies: false};\n  var parents = (options.parents = options.parents || []);\n\n  var replace = function replace(replacement) {\n    if (Array.isArray(replacement) && !replace.arrayAllowed) {\n      throw new Error(\n        'replace() can only be called with an array if the last parent is a Block or NamedBlock'\n      );\n    }\n    ast = replacement;\n  };\n  replace.arrayAllowed =\n    parents[0] &&\n    (/^(Named)?Block$/.test(parents[0].type) ||\n      (parents[0].type === 'RawInclude' && ast.type === 'IncludeFilter'));\n\n  if (before) {\n    var result = before(ast, replace);\n    if (result === false) {\n      return ast;\n    } else if (Array.isArray(ast)) {\n      // return right here to skip after() call on array\n      return walkAndMergeNodes(ast);\n    }\n  }\n\n  parents.unshift(ast);\n\n  switch (ast.type) {\n    case 'NamedBlock':\n    case 'Block':\n      ast.nodes = walkAndMergeNodes(ast.nodes);\n      break;\n    case 'Case':\n    case 'Filter':\n    case 'Mixin':\n    case 'Tag':\n    case 'InterpolatedTag':\n    case 'When':\n    case 'Code':\n    case 'While':\n      if (ast.block) {\n        ast.block = walkAST(ast.block, before, after, options);\n      }\n      break;\n    case 'Each':\n      if (ast.block) {\n        ast.block = walkAST(ast.block, before, after, options);\n      }\n      if (ast.alternate) {\n        ast.alternate = walkAST(ast.alternate, before, after, options);\n      }\n      break;\n    case 'EachOf':\n      if (ast.block) {\n        ast.block = walkAST(ast.block, before, after, options);\n      }\n      break;\n    case 'Conditional':\n      if (ast.consequent) {\n        ast.consequent = walkAST(ast.consequent, before, after, options);\n      }\n      if (ast.alternate) {\n        ast.alternate = walkAST(ast.alternate, before, after, options);\n      }\n      break;\n    case 'Include':\n      walkAST(ast.block, before, after, options);\n      walkAST(ast.file, before, after, options);\n      break;\n    case 'Extends':\n      walkAST(ast.file, before, after, options);\n      break;\n    case 'RawInclude':\n      ast.filters = walkAndMergeNodes(ast.filters);\n      walkAST(ast.file, before, after, options);\n      break;\n    case 'Attrs':\n    case 'BlockComment':\n    case 'Comment':\n    case 'Doctype':\n    case 'IncludeFilter':\n    case 'MixinBlock':\n    case 'YieldBlock':\n    case 'Text':\n      break;\n    case 'FileReference':\n      if (options.includeDependencies && ast.ast) {\n        walkAST(ast.ast, before, after, options);\n      }\n      break;\n    default:\n      throw new Error('Unexpected node type ' + ast.type);\n      break;\n  }\n\n  parents.shift();\n\n  after && after(ast, replace);\n  return ast;\n\n  function walkAndMergeNodes(nodes) {\n    return nodes.reduce(function(nodes, node) {\n      var result = walkAST(node, before, after, options);\n      if (Array.isArray(result)) {\n        return nodes.concat(result);\n      } else {\n        return nodes.concat([result]);\n      }\n    }, []);\n  }\n}\n", "'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar walk = require('pug-walk');\nvar assign = require('object-assign');\n\nmodule.exports = load;\nfunction load(ast, options) {\n  options = getOptions(options);\n  // clone the ast\n  ast = JSON.parse(JSON.stringify(ast));\n  return walk(ast, function(node) {\n    if (node.str === undefined) {\n      if (\n        node.type === 'Include' ||\n        node.type === 'RawInclude' ||\n        node.type === 'Extends'\n      ) {\n        var file = node.file;\n        if (file.type !== 'FileReference') {\n          throw new Error('Expected file.type to be \"FileReference\"');\n        }\n        var path, str, raw;\n        try {\n          path = options.resolve(file.path, file.filename, options);\n          file.fullPath = path;\n          raw = options.read(path, options);\n          str = raw.toString('utf8');\n        } catch (ex) {\n          ex.message += '\\n    at ' + node.filename + ' line ' + node.line;\n          throw ex;\n        }\n        file.str = str;\n        file.raw = raw;\n        if (node.type === 'Extends' || node.type === 'Include') {\n          file.ast = load.string(\n            str,\n            assign({}, options, {\n              filename: path,\n            })\n          );\n        }\n      }\n    }\n  });\n}\n\nload.string = function loadString(src, options) {\n  options = assign(getOptions(options), {\n    src: src,\n  });\n  var tokens = options.lex(src, options);\n  var ast = options.parse(tokens, options);\n  return load(ast, options);\n};\nload.file = function loadFile(filename, options) {\n  options = assign(getOptions(options), {\n    filename: filename,\n  });\n  var str = options.read(filename).toString('utf8');\n  return load.string(str, options);\n};\n\nload.resolve = function resolve(filename, source, options) {\n  filename = filename.trim();\n  if (filename[0] !== '/' && !source)\n    throw new Error(\n      'the \"filename\" option is required to use includes and extends with \"relative\" paths'\n    );\n\n  if (filename[0] === '/' && !options.basedir)\n    throw new Error(\n      'the \"basedir\" option is required to use includes and extends with \"absolute\" paths'\n    );\n\n  filename = path.join(\n    filename[0] === '/' ? options.basedir : path.dirname(source.trim()),\n    filename\n  );\n\n  return filename;\n};\nload.read = function read(filename, options) {\n  return fs.readFileSync(filename);\n};\n\nload.validateOptions = function validateOptions(options) {\n  /* istanbul ignore if */\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  /* istanbul ignore if */\n  if (typeof options.lex !== 'function') {\n    throw new TypeError('options.lex must be a function');\n  }\n  /* istanbul ignore if */\n  if (typeof options.parse !== 'function') {\n    throw new TypeError('options.parse must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.resolve && typeof options.resolve !== 'function') {\n    throw new TypeError('options.resolve must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.read && typeof options.read !== 'function') {\n    throw new TypeError('options.read must be a function');\n  }\n};\n\nfunction getOptions(options) {\n  load.validateOptions(options);\n  return assign(\n    {\n      resolve: load.resolve,\n      read: load.read,\n    },\n    options\n  );\n}\n", "\"use strict\";\n\nvar domain; // The domain module is executed on demand\nvar hasSetImmediate = typeof setImmediate === \"function\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including network IO events in Node.js.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Avoids a function call\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory excaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\nrawAsap.requestFlush = requestFlush;\nfunction requestFlush() {\n    // Ensure flushing is not bound to any domain.\n    // It is not sufficient to exit the domain, because domains exist on a stack.\n    // To execute code outside of any domain, the following dance is necessary.\n    var parentDomain = process.domain;\n    if (parentDomain) {\n        if (!domain) {\n            // Lazy execute the domain module.\n            // Only employed if the user elects to use domains.\n            domain = require(\"domain\");\n        }\n        domain.active = process.domain = null;\n    }\n\n    // `setImmediate` is slower that `process.nextTick`, but `process.nextTick`\n    // cannot handle recursion.\n    // `requestFlush` will only be called recursively from `asap.js`, to resume\n    // flushing after an error is thrown into a domain.\n    // Conveniently, `setImmediate` was introduced in the same version\n    // `process.nextTick` started throwing recursion errors.\n    if (flushing && hasSetImmediate) {\n        setImmediate(flush);\n    } else {\n        process.nextTick(flush);\n    }\n\n    if (parentDomain) {\n        domain.active = process.domain = parentDomain;\n    }\n}\n", "'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n", "'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};\n", "'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype['finally'] = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};\n", "'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n", "\"use strict\";\n\nvar rawAsap = require(\"./raw\");\nvar freeTasks = [];\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with\n * priority over IO events. An exception thrown in a task can be handled by\n * `process.on(\"uncaughtException\") or `domain.on(\"error\")`, but will otherwise\n * crash the process. If the error is handled, all subsequent tasks will\n * resume.\n *\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawTask.domain = process.domain;\n    rawAsap(rawTask);\n}\n\nfunction RawTask() {\n    this.task = null;\n    this.domain = null;\n}\n\nRawTask.prototype.call = function () {\n    if (this.domain) {\n        this.domain.enter();\n    }\n    var threw = true;\n    try {\n        this.task.call();\n        threw = false;\n        // If the task throws an exception (presumably) Node.js restores the\n        // domain stack for the next event.\n        if (this.domain) {\n            this.domain.exit();\n        }\n    } finally {\n        // We use try/finally and a threw flag to avoid messing up stack traces\n        // when we catch and release errors.\n        if (threw) {\n            // In Node.js, uncaught exceptions are considered fatal errors.\n            // Re-throw them to interrupt flushing!\n            // Ensure that flushing continues if an uncaught exception is\n            // suppressed listening process.on(\"uncaughtException\") or\n            // domain.on(\"error\").\n            rawAsap.requestFlush();\n        }\n        // If the task threw an error, we do not want to exit the domain here.\n        // Exiting the domain would prevent the domain from catching the error.\n        this.task = null;\n        this.domain = null;\n        freeTasks.push(this);\n    }\n};\n\n", "'use strict';\n\n// This file contains then/promise specific extensions that are only useful\n// for node.js interop\n\nvar Promise = require('./core.js');\nvar asap = require('asap');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n};\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        asap(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n};\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value);\n    });\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err);\n    });\n  });\n};\n", "'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._65 === 3) {\n      return this._55.getValue();\n    }\n\n    if (!this.isFulfilled()) {\n      throw new Error('Cannot get a value of an unfulfilled promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getReason = function () {\n    if (this._65 === 3) {\n      return this._55.getReason();\n    }\n\n    if (!this.isRejected()) {\n      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getState = function () {\n    if (this._65 === 3) {\n      return this._55.getState();\n    }\n    if (this._65 === -1 || this._65 === -2) {\n      return 0;\n    }\n\n    return this._65;\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};\n", "'use strict';\n\nmodule.exports = require('./core.js');\nrequire('./done.js');\nrequire('./finally.js');\nrequire('./es6-extensions.js');\nrequire('./node-extensions.js');\nrequire('./synchronous.js');\n", "'use strict';\n\nmodule.exports = require('./lib')\n", "module.exports = isPromise;\nmodule.exports.default = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n", "'use strict';\n\nvar fs = require('fs');\nvar assert = require('assert');\nvar Promise = require('promise');\nvar isPromise = require('is-promise');\n\nvar tr = (module.exports = function (transformer) {\n  return new Transformer(transformer);\n});\ntr.Transformer = Transformer;\ntr.normalizeFn = normalizeFn;\ntr.normalizeFnAsync = normalizeFnAsync;\ntr.normalize = normalize;\ntr.normalizeAsync = normalizeAsync;\nif (fs.readFile) {\n  tr.readFile = Promise.denodeify(fs.readFile);\n  tr.readFileSync = fs.readFileSync;\n} else {\n  tr.readFile = function () { throw new Error('fs.readFile unsupported'); };\n  tr.readFileSync = function () { throw new Error('fs.readFileSync unsupported'); };\n}\n\nfunction normalizeFn(result) {\n  if (typeof result === 'function') {\n    return {fn: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.fn === 'function') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeFnAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.fn)) {\n      return result.fn.then(function (fn) {\n        result.fn = fn;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalizeFn).nodeify(cb);\n}\nfunction normalize(result) {\n  if (typeof result === 'string') {\n    return {body: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.body === 'string') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.body)) {\n      return result.body.then(function (body) {\n        result.body = body;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalize).nodeify(cb);\n}\n\nfunction Transformer(tr) {\n  assert(tr, 'Transformer must be an object');\n  assert(typeof tr.name === 'string', 'Transformer must have a name');\n  assert(typeof tr.outputFormat === 'string', 'Transformer must have an output format');\n  assert([\n    'compile',\n    'compileAsync',\n    'compileFile',\n    'compileFileAsync',\n    'compileClient',\n    'compileClientAsync',\n    'compileFileClient',\n    'compileFileClientAsync',\n    'render',\n    'renderAsync',\n    'renderFile',\n    'renderFileAsync'\n  ].some(function (method) {\n    return typeof tr[method] === 'function';\n  }), 'Transformer must implement at least one of the potential methods.');\n  this._tr = tr;\n  this.name = this._tr.name;\n  this.outputFormat = this._tr.outputFormat;\n  this.inputFormats = this._tr.inputFormats || [this.name];\n}\n\nvar fallbacks = {\n  compile: ['compile', 'render'],\n  compileAsync: ['compileAsync', 'compile', 'render'],\n  compileFile: ['compileFile', 'compile', 'renderFile', 'render'],\n  compileFileAsync: [\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile',\n    'renderFile', 'render'\n  ],\n  compileClient: ['compileClient'],\n  compileClientAsync: ['compileClientAsync', 'compileClient'],\n  compileFileClient: ['compileFileClient', 'compileClient'],\n  compileFileClientAsync: [\n    'compileFileClientAsync', 'compileFileClient', 'compileClientAsync', 'compileClient'\n  ],\n  render: ['render', 'compile'],\n  renderAsync: ['renderAsync', 'render', 'compileAsync', 'compile'],\n  renderFile: ['renderFile', 'render', 'compileFile', 'compile'],\n  renderFileAsync: [\n    'renderFileAsync', 'renderFile', 'renderAsync', 'render',\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile'\n  ]\n};\n\nTransformer.prototype._hasMethod = function (method) {\n  return typeof this._tr[method] === 'function';\n};\nTransformer.prototype.can = function (method) {\n  return fallbacks[method].some(function (method) {\n    return this._hasMethod(method);\n  }.bind(this));\n};\n\n/* COMPILE */\n\nTransformer.prototype.compile = function (str, options) {\n  if (!this._hasMethod('compile')) {\n    if (this.can('render')) {\n      var _this = this;\n      return {\n        fn: function (locals) {\n          return tr.normalize(_this._tr.render(str, options, locals)).body;\n        },\n        dependencies: []\n      };\n    }\n    if (this.can('compileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n    } else if (this.can('compileFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling plain strings');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compilation');\n    }\n  }\n  return tr.normalizeFn(this._tr.compile(str, options));\n};\nTransformer.prototype.compileAsync = function (str, options, cb) {\n  if (!this.can('compileAsync')) { // compileFile* || renderFile* || renderAsync || compile*Client*\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling plain strings')).nodeify(cb);\n  }\n  if (this._hasMethod('compileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileAsync(str, options), cb);\n  } else { // render || compile\n    return tr.normalizeFnAsync(this.compile(str, options), cb);\n  }\n};\nTransformer.prototype.compileFile = function (filename, options) {\n  if (!this.can('compileFile')) { // compile*Client* || compile*Async || render*Async\n    throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n  }\n  if (this._hasMethod('compileFile')) {\n    return tr.normalizeFn(this._tr.compileFile(filename, options));\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeFn(function (locals) {\n      return tr.normalize(this._tr.renderFile(filename, options, locals)).body;\n    }.bind(this));\n  } else { // render || compile\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return this.compile(tr.readFileSync(filename, 'utf8'), options);\n  }\n};\nTransformer.prototype.compileFileAsync = function (filename, options, cb) {\n  if (!this.can('compileFileAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compilation'));\n  }\n  if (this._hasMethod('compileFileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileFileAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFile') || this._hasMethod('renderFile')) {\n    return tr.normalizeFnAsync(this.compileFile(filename, options), cb);\n  } else { // compileAsync || compile || render\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeFnAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileAsync')) {\n        return this._tr.compileAsync(str, options);\n      } else { // compile || render\n        return this.compile(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* COMPILE CLIENT */\n\n\nTransformer.prototype.compileClient = function (str, options) {\n  if (!this.can('compileClient')) {\n    if (this.can('compileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  return tr.normalize(this._tr.compileClient(str, options));\n};\nTransformer.prototype.compileClientAsync = function (str, options, cb) {\n  if (!this.can('compileClientAsync')) {\n    if (this.can('compileFileClientAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('compileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileClientAsync(str, options), cb);\n  } else {\n    return tr.normalizeAsync(this._tr.compileClient(str, options), cb);\n  }\n};\nTransformer.prototype.compileFileClient = function (filename, options) {\n  if (!this.can('compileFileClient')) {\n    if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  if (this._hasMethod('compileFileClient')) {\n    return tr.normalize(this._tr.compileFileClient(filename, options));\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.compileClient(tr.readFileSync(filename, 'utf8'), options));\n  }\n};\nTransformer.prototype.compileFileClientAsync = function (filename, options, cb) {\n  if (!this.can('compileFileClientAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb)\n  }\n  if (this._hasMethod('compileFileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileFileClientAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFileClient')) {\n    return tr.normalizeAsync(this._tr.compileFileClient(filename, options), cb);\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileClientAsync')) {\n        return this._tr.compileClientAsync(str, options);\n      } else {\n        return this._tr.compileClient(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* RENDER */\n\nTransformer.prototype.render = function (str, options, locals) {\n  if (!this.can('render')) {\n    if (this.can('renderAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    } else if (this.can('renderFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering');\n    }\n  }\n  if (this._hasMethod('render')) {\n    return tr.normalize(this._tr.render(str, options, locals));\n  } else {\n    var compiled = tr.normalizeFn(this._tr.compile(str, options));\n    var body = compiled.fn(locals || options);\n    if (typeof body !== 'string') {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    }\n    return tr.normalize({body: body, dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderAsync = function (str, options, locals, cb) {\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (!this.can('renderAsync')) {\n    if (this.can('renderFileAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('renderAsync')) {\n    return tr.normalizeAsync(this._tr.renderAsync(str, options, locals), cb);\n  } else if (this._hasMethod('render')) {\n    return tr.normalizeAsync(this._tr.render(str, options, locals), cb);\n  } else {\n    return tr.normalizeAsync(this.compileAsync(str, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  }\n};\nTransformer.prototype.renderFile = function (filename, options, locals) {\n  if (!this.can('renderFile')) { // *Async, *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n  }\n\n  if (this._hasMethod('renderFile')) {\n    return tr.normalize(this._tr.renderFile(filename, options, locals));\n  } else if (this._hasMethod('render')) {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.render(tr.readFileSync(filename, 'utf8'), options, locals));\n  } else { // compile || compileFile\n    var compiled = this.compileFile(filename, options);\n    return tr.normalize({body: compiled.fn(locals || options), dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderFileAsync = function (filename, options, locals, cb) {\n  if (!this.can('renderFileAsync')) { // *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering.');\n  }\n\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (this._hasMethod('renderFileAsync')) {\n    return tr.normalizeAsync(this._tr.renderFileAsync(filename, options, locals), cb);\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeAsync(this._tr.renderFile(filename, options, locals), cb);\n  } else if (this._hasMethod('compile') || this._hasMethod('compileAsync')\n             || this._hasMethod('compileFile') || this._hasMethod('compileFileAsync')) {\n    return tr.normalizeAsync(this.compileFileAsync(filename, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  } else { // render || renderAsync\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      return this.renderAsync(str, options, locals);\n    }.bind(this)), cb);\n  }\n};\n", "'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n", "module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n", "'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n", "var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n", "module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n", "{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": \">= 13.4 && < 13.5\",\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n", "'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n", "var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n", "{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node:test\": \">= 18\",\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": \">= 13.4 && < 13.5\",\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n", "var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        }\n        return false;\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n", "var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n", "var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n", "var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n", "'use strict';\n\nvar jstransformer = require('jstransformer');\nvar resolve = require('resolve');\n\nmodule.exports = filter;\n\nfunction getMinifyTransformerName(outputFormat) {\n  switch (outputFormat) {\n    case 'js':\n      return 'uglify-js';\n    case 'css':\n      return 'clean-css';\n  }\n}\n\nfunction filter(name, str, options, currentDirectory, funcName) {\n  funcName = funcName || 'render';\n  var trPath;\n  try {\n    try {\n      trPath = resolve.sync('jstransformer-' + name, {\n        basedir: currentDirectory || process.cwd(),\n      });\n    } catch (ex) {\n      trPath = require.resolve('jstransformer-' + name);\n    }\n  } catch (ex) {\n    var err = new Error('unknown filter \":' + name + '\"');\n    err.code = 'UNKNOWN_FILTER';\n    throw err;\n  }\n  var tr = jstransformer(require(trPath));\n  // TODO: we may want to add a way for people to separately specify \"locals\"\n  var result = tr[funcName](str, options, options).body;\n  if (options && options.minify) {\n    var minifyTranformer = getMinifyTransformerName(tr.outputFormat);\n    if (minifyTranformer) {\n      try {\n        result = filter(minifyTranformer, result, null, currentDirectory);\n      } catch (ex) {\n        // better to fail to minify than output nothing\n      }\n    }\n  }\n  return result;\n}\n", "export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "export const enum ParseErrorCode {\n  SyntaxError = \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n}\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get(this: unknown): unknown {\n    return keys.reduce(\n      (object, key) =>\n        // @ts-expect-error key should index object\n        object[key],\n      this,\n    );\n  },\n  set(this: unknown, value: unknown) {\n    keys.reduce(\n      // @ts-expect-error key should index item\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: new () => T,\n  properties: any,\n  descriptors: any,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign(new constructor(), properties),\n    );\n\nexport { instantiate };\n", "import { ParseErrorCode } from \"../parse-error\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n};\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "import toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n};\n", "export default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n};\n", "import toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparanthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparanthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n};\n", "import { Position } from \"./util/location\";\nimport {\n  instantiate,\n  ParseErrorCode,\n  type ParseErrorCredentials,\n  type ToMessage,\n  type SyntaxPlugin,\n} from \"./parse-error/credentials\";\nimport type { Undone } from \"./parser/node\";\nimport type { Node } from \"./types\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(\n          overrides: {\n            loc?: Position;\n            details?: ErrorDetails;\n          } = {},\n        ) {\n          const loc = (overrides.loc || {}) as Partial<Position>;\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get(this: ConstructorArgument): string {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    ) as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any> };\n\ntype ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: ParseErrorCode.SourceTypeModuleError,\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n", "import { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { BindingTypes } from \"../util/scopeflags\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync?: boolean | null,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(unfinished: Undone<N.AnyExport>) {\n      const node = super.parseExport(unfinished);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node as N.AnyExport;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = {\n  [name: string]: TokenType;\n};\n\nexport const tt: InternalTokenTypes = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "/* eslint max-len: 0 */\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b0000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b0000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b0000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b0001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b0010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b0100000_0000_00,\n             BIND_FLAGS_TS_IMPORT       = 0b1000000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM    | BIND_FLAGS_TS_CONST_ENUM                                 ,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0                   | BIND_FLAGS_TS_EXPORT_ONLY,\n             BIND_TS_TYPE_IMPORT= 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_TS_IMPORT,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n", "import {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport type * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlags) {\n    /*:: +createScope: (flags: ScopeFlags) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlags {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "import type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number;\n  end: number;\n  comments: Array<Comment>;\n  leadingNode: Node | null;\n  trailingNode: Node | null;\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Undone<Node>} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport type { Errors } from \"../parse-error\";\nimport { type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error val must conform to S[key]\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n};\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let containsInvalid = false;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      let escaped;\n      ({\n        ch: escaped,\n        pos,\n        lineStart,\n        curLine,\n      } = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      ));\n      if (escaped === null) {\n        containsInvalid = true;\n      } else {\n        out += escaped;\n      }\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return { pos, str: out, containsInvalid, lineStart, curLine };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments\";\nimport type * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, containsInvalid, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        containsInvalid ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        containsInvalid ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n", "import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport type { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport type Tokenizer from \"../tokenizer\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = number;\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return ((isAsync ? PARAM_AWAIT : 0) |\n    (isGenerator ? PARAM_YIELD : 0)) as ParamKind;\n}\n", "import { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport type State from \"../tokenizer/state\";\nimport type { EstreePropertyDefinition, Node, ObjectProperty } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\nimport type Parser from \".\";\n\nimport type ScopeHandler from \"../util/scope\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): { new (...args: any): ScopeHandler };\n\n  // TODO\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length] as ParseError<any>,\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(pos: number, loc: Position): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: Undone<N.FlowDeclare>,\n      isClass: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(\n          startPos,\n          startLoc,\n        );\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context?: string | null, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\" as const;\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\" as const;\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      allowModifiers?: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(\n        startPos,\n        startLoc,\n      );\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport type { TokContext } from \"../../tokenizer/context\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { type Undone } from \"../../parser/node\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startPos,\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(\n                  this.jsxParseSpreadChild(node as Undone<N.JSXSpreadChild>),\n                );\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(\n                    node as Undone<N.JSXExpressionContainer>,\n                    tc.j_expr,\n                  ),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n  BIND_FLAGS_TS_IMPORT,\n  SCOPE_TS_MODULE,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\nimport { Errors } from \"../../parse-error\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: number): void {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name) &&\n      !this.hasImport(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_TS_TYPE_IMPORT,\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_NONE,\n  BIND_FLAGS_TS_IMPORT,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\nimport type { Pattern } from \"../../types\";\nimport type { Expression } from \"../../types\";\nimport type { IJSXParserMixin } from \"../jsx\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  CannotFindName: ({ name }: { name: string }) => `Cannot find name '${name}'.`,\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: ModifierBase;\n      allowedModifiers: readonly TsModifier[];\n      disallowedModifiers?: TsModifier[];\n      stopOnStartOfClassStaticBlock?: boolean;\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any;\n    }): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: Undone<N.TsTypeParameter>,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): N.TsTypeReference | undefined | null {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      return super\n        .parseBindingList(tt.parenR, charCodes.rightParenthesis)\n        .map(pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return pattern as any;\n        });\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined | null {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements: boolean | null = null;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        let checkType = type;\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          checkType = elementNode.type;\n        }\n\n        const isLabeled = checkType === \"TSNamedTupleMember\";\n        labeledElements ??= isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type: N.TsType | N.TsNamedTupleMember = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = type.typeName as N.Identifier;\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      // @ts-expect-error refine typings\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return super.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate as N.TsThisType;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate as N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation():\n      | N.TsTypeAnnotation\n      | undefined\n      | null {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined | null {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): N.TsType | undefined | null {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined | null {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | undefined | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined | null {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\" as const;\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return super.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined | null {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n    ): N.Declaration | undefined | null {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node as Undone<N.TsModuleDeclaration>;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined | null =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(\n            startPos,\n            startLoc,\n          );\n          node.typeParameters = this.tsParseTypeParameters();\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: boolean | undefined | null,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: N.Accessibility | undefined | null;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified: ModifierBase = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression = this.startNodeAt<N.TsNonNullExpression>(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node = this.startNodeAt<N.TsAsExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n          );\n        }\n      }\n\n      const importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: Undone<N.Node>): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      context?: string | null,\n      topLevel?: boolean | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(\n            classBody,\n            member as any as N.StaticBlock,\n          );\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingTypes,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ) {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n      }\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: typeof charCodes[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          node as N.ClassDeclaration,\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type { BindingTypes } from \"../util/scopeflags\";\nimport type { Position } from \"../util/location\";\n\ntype PossiblePlaceholedrs = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholedrs;\n\ntype NodeOf<T extends keyof PossiblePlaceholedrs> = PossiblePlaceholedrs[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      // @ts-expect-error todo(flow->ts)\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context?: string | null): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(node);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport type { ExpressionErrors } from \"../parser/util\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n", "import type Parser from \"./parser\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n\n    const allowCallParenthesized = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"allowCallParenthesized\",\n    );\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "import type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    // @ts-expect-error key may not exist in opts\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n", "import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayExpression,\n  ArrayPattern,\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils, type Undone } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\nimport type Parser from \"./index\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startPos: number | null,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): Expression | Identifier;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: typeof charCodes[keyof typeof charCodes],\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): Array<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    allowModifiers: boolean | undefined | null,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startPos?: number | null,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      allowingSloppyLetBinding?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          // @ts-expect-error: refine types\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: typeof charCodes[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport type { ParamKind } from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \".\";\n\nimport type { SourceType } from \"../options\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(\n    node: N.Function,\n    allowModifiers?: boolean,\n  ): void;\n  abstract takeDecorators(node: N.HasDecorators): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error prop must be an ObjectProperty\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(\n          finishedNode,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startPos,\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startPos, startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode<N.Class>();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: Undone<N.MetaProperty>): N.MetaProperty {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(\n      startPos,\n      startLoc,\n    );\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(\n        innerStartPos,\n        innerStartLoc,\n      );\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startPos,\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt<N.ParenthesizedExpression>(\n      startPos,\n      startLoc,\n    );\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startPos: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error shorthand may not index prop\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(\n    node: N.BodilessFunctionOrMethodBase,\n    isAsync?: boolean | null,\n  ): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(\n        (this.prodParam.currentFlags() | PARAM_RETURN) as ParamKind,\n      );\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error kind may not index node\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                  ? // @ts-expect-error node.key has been gaurded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(\n    this: Parser,\n    startPos: number,\n    startLoc: Position,\n  ): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(\n        startPos,\n        startLoc,\n      );\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(\n        startPos,\n        startLoc,\n      );\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import type * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport type { Position } from \"../util/location\";\nimport { createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \"./index\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context?: string | null): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context?: string | null): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean,\n  ): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean | null,\n  ): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !context,\n        );\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node as Undone<N.ClassDeclaration>, true);\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !context,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        context,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc,\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const initNode = this.startNode<N.VariableDeclaration>();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    context?: string | null,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\",\n  ): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    statement: number = FUNC_NO_FLAGS,\n    isAsync: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowModifiers?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n  ): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(\n        node as Undone<N.ExportNamedDeclaration>,\n        true,\n        false,\n        !!(node as Undone<N.ExportNamedDeclaration>).source,\n      );\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      (node as Undone<N.ExportDefaultDeclaration>).declaration =\n        this.parseExportDefaultExpression();\n      this.checkExport(node as Undone<N.ExportDefaultDeclaration>, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr as Undone<N.FunctionExpression>,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    return this.parseStatement(null) as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        // @ts-expect-error attributes have been deprecated\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldParseDefaultImport(node: Undone<N.ImportDeclaration>): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(specifier: Undone<T>, type: T[\"type\"], bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      // @ts-expect-error refine types\n      in: specifier,\n      binding: bindingType,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingTypes | undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "import { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings\";\nimport Parser from \"./parser\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n", "export default function shallowEqual<T extends object>(\n  actual: object,\n  expected: T,\n): actual is T {\n  const keys = Object.keys(expected) as (keyof T)[];\n\n  for (const key of keys) {\n    if (\n      // @ts-expect-error maybe we should check whether key exists first\n      actual[key] !== expected[key]\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport shallowEqual from \"../../utils/shallowEqual\";\nimport type * as t from \"../..\";\n\nexport function isArrayExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ArrayExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ArrayExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isAssignmentExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.AssignmentExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"AssignmentExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBinaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BinaryExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BinaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isInterpreterDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.InterpreterDirective {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"InterpreterDirective\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Directive {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Directive\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDirectiveLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DirectiveLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DirectiveLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBlockStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BlockStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BlockStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBreakStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BreakStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BreakStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.CallExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"CallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isCatchClause(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.CatchClause {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"CatchClause\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isConditionalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ConditionalExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ConditionalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isContinueStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ContinueStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ContinueStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDebuggerStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DebuggerStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DebuggerStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDoWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DoWhileStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DoWhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEmptyStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EmptyStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EmptyStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExpressionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExpressionStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExpressionStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFile(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.File {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"File\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isForInStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ForInStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ForInStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isForStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ForStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ForStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFunctionDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FunctionDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"FunctionDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FunctionExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"FunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Identifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Identifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isIfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.IfStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"IfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isLabeledStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.LabeledStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"LabeledStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isStringLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.StringLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"StringLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNumericLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.NumericLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NumericLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNullLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.NullLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NullLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBooleanLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BooleanLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BooleanLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isRegExpLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.RegExpLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"RegExpLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isLogicalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.LogicalExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"LogicalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.MemberExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"MemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNewExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.NewExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NewExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isProgram(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Program {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Program\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectMethod {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isRestElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.RestElement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"RestElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isReturnStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ReturnStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ReturnStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isSequenceExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.SequenceExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"SequenceExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isParenthesizedExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ParenthesizedExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ParenthesizedExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isSwitchCase(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.SwitchCase {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"SwitchCase\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isSwitchStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.SwitchStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"SwitchStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isThisExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ThisExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ThisExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isThrowStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ThrowStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ThrowStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTryStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TryStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TryStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isUnaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.UnaryExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"UnaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isUpdateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.UpdateExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"UpdateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isVariableDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.VariableDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"VariableDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isVariableDeclarator(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.VariableDeclarator {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"VariableDeclarator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.WhileStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"WhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isWithStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.WithStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"WithStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isAssignmentPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.AssignmentPattern {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"AssignmentPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isArrayPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ArrayPattern {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ArrayPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isArrowFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ArrowFunctionExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ArrowFunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassBody {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExportAllDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExportDefaultDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExportDefaultDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExportDefaultDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExportNamedDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExportNamedDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExportNamedDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExportSpecifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isForOfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ForOfStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ForOfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isImportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ImportDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ImportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isImportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ImportDefaultSpecifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ImportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isImportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ImportNamespaceSpecifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ImportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isImportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ImportSpecifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ImportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isMetaProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.MetaProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"MetaProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassMethod {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectPattern {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isSpreadElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.SpreadElement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"SpreadElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isSuper(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Super {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Super\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTaggedTemplateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TaggedTemplateExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TaggedTemplateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTemplateElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TemplateElement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TemplateElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTemplateLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TemplateLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TemplateLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isYieldExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.YieldExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"YieldExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isAwaitExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.AwaitExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"AwaitExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isImport(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Import {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Import\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBigIntLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BigIntLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BigIntLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExportNamespaceSpecifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isOptionalMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.OptionalMemberExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"OptionalMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isOptionalCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.OptionalCallExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"OptionalCallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassAccessorProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassAccessorProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassAccessorProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassPrivateProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassPrivateProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassPrivateProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassPrivateMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassPrivateMethod {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassPrivateMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPrivateName(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.PrivateName {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"PrivateName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isStaticBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.StaticBlock {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"StaticBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isAnyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.AnyTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"AnyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isArrayTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ArrayTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ArrayTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBooleanTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BooleanTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BooleanTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBooleanLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BooleanLiteralTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BooleanLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNullLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.NullLiteralTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NullLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClassImplements(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ClassImplements {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ClassImplements\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareClass {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareClass\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareFunction {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareInterface(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareInterface {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareInterface\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareModule(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareModule {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareModule\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareModuleExports(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareModuleExports {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareModuleExports\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareTypeAlias {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareTypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareOpaqueType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareOpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareVariable(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareVariable {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareVariable\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareExportDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclareExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclareExportAllDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclareExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclaredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DeclaredPredicate {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DeclaredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExistsTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExistsTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExistsTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFunctionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FunctionTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"FunctionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFunctionTypeParam(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FunctionTypeParam {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"FunctionTypeParam\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isGenericTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.GenericTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"GenericTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isInferredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.InferredPredicate {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"InferredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isInterfaceExtends(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.InterfaceExtends {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"InterfaceExtends\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.InterfaceDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"InterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isInterfaceTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.InterfaceTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"InterfaceTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isIntersectionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.IntersectionTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"IntersectionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isMixedTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.MixedTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"MixedTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEmptyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EmptyTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EmptyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNullableTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.NullableTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NullableTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNumberLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.NumberLiteralTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NumberLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNumberTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.NumberTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NumberTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectTypeInternalSlot(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectTypeInternalSlot {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectTypeInternalSlot\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectTypeCallProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectTypeCallProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectTypeCallProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectTypeIndexer(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectTypeIndexer {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectTypeIndexer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectTypeProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectTypeProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectTypeProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectTypeSpreadProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectTypeSpreadProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ObjectTypeSpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.OpaqueType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"OpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isQualifiedTypeIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.QualifiedTypeIdentifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"QualifiedTypeIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isStringLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.StringLiteralTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"StringLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isStringTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.StringTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"StringTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isSymbolTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.SymbolTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"SymbolTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isThisTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ThisTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ThisTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTupleTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TupleTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TupleTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeofTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeofTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TypeofTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeAlias {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeCastExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeCastExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TypeCastExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeParameter {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeParameterDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeParameterInstantiation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isUnionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.UnionTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"UnionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isVariance(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Variance {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Variance\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isVoidTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.VoidTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"VoidTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumBooleanBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumBooleanBody {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumBooleanBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumNumberBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumNumberBody {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumNumberBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumStringBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumStringBody {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumStringBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumSymbolBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumSymbolBody {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumSymbolBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumBooleanMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumBooleanMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumBooleanMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumNumberMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumNumberMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumNumberMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumStringMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumStringMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumStringMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumDefaultedMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumDefaultedMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"EnumDefaultedMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.IndexedAccessType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"IndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isOptionalIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.OptionalIndexedAccessType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"OptionalIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXAttribute {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXClosingElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXClosingElement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXClosingElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXElement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXEmptyExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXEmptyExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXEmptyExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXExpressionContainer(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXExpressionContainer {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXExpressionContainer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXSpreadChild(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXSpreadChild {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXSpreadChild\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXIdentifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXMemberExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXNamespacedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXNamespacedName {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXNamespacedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXOpeningElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXOpeningElement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXOpeningElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXSpreadAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXSpreadAttribute {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXSpreadAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXText(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXText {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXText\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXFragment {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXOpeningFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXOpeningFragment {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXOpeningFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSXClosingFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSXClosingFragment {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"JSXClosingFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Noop {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Noop\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Placeholder {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Placeholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isV8IntrinsicIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.V8IntrinsicIdentifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"V8IntrinsicIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isArgumentPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ArgumentPlaceholder {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ArgumentPlaceholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBindExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BindExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"BindExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isImportAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ImportAttribute {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ImportAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDecorator(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Decorator {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"Decorator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDoExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DoExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DoExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExportDefaultSpecifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ExportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isRecordExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.RecordExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"RecordExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTupleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TupleExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TupleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDecimalLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.DecimalLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"DecimalLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isModuleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ModuleExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"ModuleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TopicReference {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPipelineTopicExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.PipelineTopicExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"PipelineTopicExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPipelineBareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.PipelineBareFunction {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"PipelineBareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPipelinePrimaryTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.PipelinePrimaryTopicReference {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"PipelinePrimaryTopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSParameterProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSParameterProperty {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSParameterProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSDeclareFunction {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSDeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSDeclareMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSDeclareMethod {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSDeclareMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSQualifiedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSQualifiedName {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSQualifiedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSCallSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSCallSignatureDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSCallSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSConstructSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSConstructSignatureDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSConstructSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSPropertySignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSPropertySignature {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSPropertySignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSMethodSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSMethodSignature {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSMethodSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSIndexSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSIndexSignature {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSIndexSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSAnyKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSAnyKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSAnyKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSBooleanKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSBooleanKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSBooleanKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSBigIntKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSBigIntKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSBigIntKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSIntrinsicKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSIntrinsicKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSIntrinsicKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSNeverKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSNeverKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSNeverKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSNullKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSNullKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSNullKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSNumberKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSNumberKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSNumberKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSObjectKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSObjectKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSObjectKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSStringKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSStringKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSStringKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSSymbolKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSSymbolKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSSymbolKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSUndefinedKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSUndefinedKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSUndefinedKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSUnknownKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSUnknownKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSUnknownKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSVoidKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSVoidKeyword {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSVoidKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSThisType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSThisType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSThisType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSFunctionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSFunctionType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSFunctionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSConstructorType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSConstructorType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSConstructorType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeReference {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypePredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypePredicate {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypePredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeQuery(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeQuery {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeQuery\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeLiteral {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSArrayType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSArrayType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSArrayType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTupleType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTupleType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTupleType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSOptionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSOptionalType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSOptionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSRestType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSRestType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSRestType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSNamedTupleMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSNamedTupleMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSNamedTupleMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSUnionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSUnionType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSUnionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSIntersectionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSIntersectionType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSIntersectionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSConditionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSConditionalType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSConditionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSInferType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSInferType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSInferType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSParenthesizedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSParenthesizedType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSParenthesizedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeOperator(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeOperator {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeOperator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSIndexedAccessType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSMappedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSMappedType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSMappedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSLiteralType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSLiteralType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSExpressionWithTypeArguments(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSExpressionWithTypeArguments {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSExpressionWithTypeArguments\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSInterfaceDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSInterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSInterfaceBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSInterfaceBody {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSInterfaceBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeAliasDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeAliasDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeAliasDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSInstantiationExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSInstantiationExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSInstantiationExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSAsExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSAsExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSAsExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeAssertion(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeAssertion {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeAssertion\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSEnumDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSEnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSEnumMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSEnumMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSModuleDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSModuleDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSModuleBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSModuleBlock {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSModuleBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSImportType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSImportType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSImportType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSImportEqualsDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSImportEqualsDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSImportEqualsDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSExternalModuleReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSExternalModuleReference {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSExternalModuleReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSNonNullExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSNonNullExpression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSNonNullExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSExportAssignment(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSExportAssignment {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSExportAssignment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSNamespaceExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSNamespaceExportDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSNamespaceExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeParameterInstantiation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeParameterDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeParameter {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"TSTypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isStandardized(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Standardized {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ArrayExpression\" === nodeType ||\n    \"AssignmentExpression\" === nodeType ||\n    \"BinaryExpression\" === nodeType ||\n    \"InterpreterDirective\" === nodeType ||\n    \"Directive\" === nodeType ||\n    \"DirectiveLiteral\" === nodeType ||\n    \"BlockStatement\" === nodeType ||\n    \"BreakStatement\" === nodeType ||\n    \"CallExpression\" === nodeType ||\n    \"CatchClause\" === nodeType ||\n    \"ConditionalExpression\" === nodeType ||\n    \"ContinueStatement\" === nodeType ||\n    \"DebuggerStatement\" === nodeType ||\n    \"DoWhileStatement\" === nodeType ||\n    \"EmptyStatement\" === nodeType ||\n    \"ExpressionStatement\" === nodeType ||\n    \"File\" === nodeType ||\n    \"ForInStatement\" === nodeType ||\n    \"ForStatement\" === nodeType ||\n    \"FunctionDeclaration\" === nodeType ||\n    \"FunctionExpression\" === nodeType ||\n    \"Identifier\" === nodeType ||\n    \"IfStatement\" === nodeType ||\n    \"LabeledStatement\" === nodeType ||\n    \"StringLiteral\" === nodeType ||\n    \"NumericLiteral\" === nodeType ||\n    \"NullLiteral\" === nodeType ||\n    \"BooleanLiteral\" === nodeType ||\n    \"RegExpLiteral\" === nodeType ||\n    \"LogicalExpression\" === nodeType ||\n    \"MemberExpression\" === nodeType ||\n    \"NewExpression\" === nodeType ||\n    \"Program\" === nodeType ||\n    \"ObjectExpression\" === nodeType ||\n    \"ObjectMethod\" === nodeType ||\n    \"ObjectProperty\" === nodeType ||\n    \"RestElement\" === nodeType ||\n    \"ReturnStatement\" === nodeType ||\n    \"SequenceExpression\" === nodeType ||\n    \"ParenthesizedExpression\" === nodeType ||\n    \"SwitchCase\" === nodeType ||\n    \"SwitchStatement\" === nodeType ||\n    \"ThisExpression\" === nodeType ||\n    \"ThrowStatement\" === nodeType ||\n    \"TryStatement\" === nodeType ||\n    \"UnaryExpression\" === nodeType ||\n    \"UpdateExpression\" === nodeType ||\n    \"VariableDeclaration\" === nodeType ||\n    \"VariableDeclarator\" === nodeType ||\n    \"WhileStatement\" === nodeType ||\n    \"WithStatement\" === nodeType ||\n    \"AssignmentPattern\" === nodeType ||\n    \"ArrayPattern\" === nodeType ||\n    \"ArrowFunctionExpression\" === nodeType ||\n    \"ClassBody\" === nodeType ||\n    \"ClassExpression\" === nodeType ||\n    \"ClassDeclaration\" === nodeType ||\n    \"ExportAllDeclaration\" === nodeType ||\n    \"ExportDefaultDeclaration\" === nodeType ||\n    \"ExportNamedDeclaration\" === nodeType ||\n    \"ExportSpecifier\" === nodeType ||\n    \"ForOfStatement\" === nodeType ||\n    \"ImportDeclaration\" === nodeType ||\n    \"ImportDefaultSpecifier\" === nodeType ||\n    \"ImportNamespaceSpecifier\" === nodeType ||\n    \"ImportSpecifier\" === nodeType ||\n    \"MetaProperty\" === nodeType ||\n    \"ClassMethod\" === nodeType ||\n    \"ObjectPattern\" === nodeType ||\n    \"SpreadElement\" === nodeType ||\n    \"Super\" === nodeType ||\n    \"TaggedTemplateExpression\" === nodeType ||\n    \"TemplateElement\" === nodeType ||\n    \"TemplateLiteral\" === nodeType ||\n    \"YieldExpression\" === nodeType ||\n    \"AwaitExpression\" === nodeType ||\n    \"Import\" === nodeType ||\n    \"BigIntLiteral\" === nodeType ||\n    \"ExportNamespaceSpecifier\" === nodeType ||\n    \"OptionalMemberExpression\" === nodeType ||\n    \"OptionalCallExpression\" === nodeType ||\n    \"ClassProperty\" === nodeType ||\n    \"ClassAccessorProperty\" === nodeType ||\n    \"ClassPrivateProperty\" === nodeType ||\n    \"ClassPrivateMethod\" === nodeType ||\n    \"PrivateName\" === nodeType ||\n    \"StaticBlock\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      (\"Identifier\" === (node as t.Placeholder).expectedNode ||\n        \"StringLiteral\" === (node as t.Placeholder).expectedNode ||\n        \"BlockStatement\" === (node as t.Placeholder).expectedNode ||\n        \"ClassBody\" === (node as t.Placeholder).expectedNode))\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Expression {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ArrayExpression\" === nodeType ||\n    \"AssignmentExpression\" === nodeType ||\n    \"BinaryExpression\" === nodeType ||\n    \"CallExpression\" === nodeType ||\n    \"ConditionalExpression\" === nodeType ||\n    \"FunctionExpression\" === nodeType ||\n    \"Identifier\" === nodeType ||\n    \"StringLiteral\" === nodeType ||\n    \"NumericLiteral\" === nodeType ||\n    \"NullLiteral\" === nodeType ||\n    \"BooleanLiteral\" === nodeType ||\n    \"RegExpLiteral\" === nodeType ||\n    \"LogicalExpression\" === nodeType ||\n    \"MemberExpression\" === nodeType ||\n    \"NewExpression\" === nodeType ||\n    \"ObjectExpression\" === nodeType ||\n    \"SequenceExpression\" === nodeType ||\n    \"ParenthesizedExpression\" === nodeType ||\n    \"ThisExpression\" === nodeType ||\n    \"UnaryExpression\" === nodeType ||\n    \"UpdateExpression\" === nodeType ||\n    \"ArrowFunctionExpression\" === nodeType ||\n    \"ClassExpression\" === nodeType ||\n    \"MetaProperty\" === nodeType ||\n    \"Super\" === nodeType ||\n    \"TaggedTemplateExpression\" === nodeType ||\n    \"TemplateLiteral\" === nodeType ||\n    \"YieldExpression\" === nodeType ||\n    \"AwaitExpression\" === nodeType ||\n    \"Import\" === nodeType ||\n    \"BigIntLiteral\" === nodeType ||\n    \"OptionalMemberExpression\" === nodeType ||\n    \"OptionalCallExpression\" === nodeType ||\n    \"TypeCastExpression\" === nodeType ||\n    \"JSXElement\" === nodeType ||\n    \"JSXFragment\" === nodeType ||\n    \"BindExpression\" === nodeType ||\n    \"DoExpression\" === nodeType ||\n    \"RecordExpression\" === nodeType ||\n    \"TupleExpression\" === nodeType ||\n    \"DecimalLiteral\" === nodeType ||\n    \"ModuleExpression\" === nodeType ||\n    \"TopicReference\" === nodeType ||\n    \"PipelineTopicExpression\" === nodeType ||\n    \"PipelineBareFunction\" === nodeType ||\n    \"PipelinePrimaryTopicReference\" === nodeType ||\n    \"TSInstantiationExpression\" === nodeType ||\n    \"TSAsExpression\" === nodeType ||\n    \"TSTypeAssertion\" === nodeType ||\n    \"TSNonNullExpression\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      (\"Expression\" === (node as t.Placeholder).expectedNode ||\n        \"Identifier\" === (node as t.Placeholder).expectedNode ||\n        \"StringLiteral\" === (node as t.Placeholder).expectedNode))\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBinary(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Binary {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"BinaryExpression\" === nodeType || \"LogicalExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isScopable(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Scopable {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"BlockStatement\" === nodeType ||\n    \"CatchClause\" === nodeType ||\n    \"DoWhileStatement\" === nodeType ||\n    \"ForInStatement\" === nodeType ||\n    \"ForStatement\" === nodeType ||\n    \"FunctionDeclaration\" === nodeType ||\n    \"FunctionExpression\" === nodeType ||\n    \"Program\" === nodeType ||\n    \"ObjectMethod\" === nodeType ||\n    \"SwitchStatement\" === nodeType ||\n    \"WhileStatement\" === nodeType ||\n    \"ArrowFunctionExpression\" === nodeType ||\n    \"ClassExpression\" === nodeType ||\n    \"ClassDeclaration\" === nodeType ||\n    \"ForOfStatement\" === nodeType ||\n    \"ClassMethod\" === nodeType ||\n    \"ClassPrivateMethod\" === nodeType ||\n    \"StaticBlock\" === nodeType ||\n    \"TSModuleBlock\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"BlockStatement\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBlockParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.BlockParent {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"BlockStatement\" === nodeType ||\n    \"CatchClause\" === nodeType ||\n    \"DoWhileStatement\" === nodeType ||\n    \"ForInStatement\" === nodeType ||\n    \"ForStatement\" === nodeType ||\n    \"FunctionDeclaration\" === nodeType ||\n    \"FunctionExpression\" === nodeType ||\n    \"Program\" === nodeType ||\n    \"ObjectMethod\" === nodeType ||\n    \"SwitchStatement\" === nodeType ||\n    \"WhileStatement\" === nodeType ||\n    \"ArrowFunctionExpression\" === nodeType ||\n    \"ForOfStatement\" === nodeType ||\n    \"ClassMethod\" === nodeType ||\n    \"ClassPrivateMethod\" === nodeType ||\n    \"StaticBlock\" === nodeType ||\n    \"TSModuleBlock\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"BlockStatement\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Block {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"BlockStatement\" === nodeType ||\n    \"Program\" === nodeType ||\n    \"TSModuleBlock\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"BlockStatement\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Statement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"BlockStatement\" === nodeType ||\n    \"BreakStatement\" === nodeType ||\n    \"ContinueStatement\" === nodeType ||\n    \"DebuggerStatement\" === nodeType ||\n    \"DoWhileStatement\" === nodeType ||\n    \"EmptyStatement\" === nodeType ||\n    \"ExpressionStatement\" === nodeType ||\n    \"ForInStatement\" === nodeType ||\n    \"ForStatement\" === nodeType ||\n    \"FunctionDeclaration\" === nodeType ||\n    \"IfStatement\" === nodeType ||\n    \"LabeledStatement\" === nodeType ||\n    \"ReturnStatement\" === nodeType ||\n    \"SwitchStatement\" === nodeType ||\n    \"ThrowStatement\" === nodeType ||\n    \"TryStatement\" === nodeType ||\n    \"VariableDeclaration\" === nodeType ||\n    \"WhileStatement\" === nodeType ||\n    \"WithStatement\" === nodeType ||\n    \"ClassDeclaration\" === nodeType ||\n    \"ExportAllDeclaration\" === nodeType ||\n    \"ExportDefaultDeclaration\" === nodeType ||\n    \"ExportNamedDeclaration\" === nodeType ||\n    \"ForOfStatement\" === nodeType ||\n    \"ImportDeclaration\" === nodeType ||\n    \"DeclareClass\" === nodeType ||\n    \"DeclareFunction\" === nodeType ||\n    \"DeclareInterface\" === nodeType ||\n    \"DeclareModule\" === nodeType ||\n    \"DeclareModuleExports\" === nodeType ||\n    \"DeclareTypeAlias\" === nodeType ||\n    \"DeclareOpaqueType\" === nodeType ||\n    \"DeclareVariable\" === nodeType ||\n    \"DeclareExportDeclaration\" === nodeType ||\n    \"DeclareExportAllDeclaration\" === nodeType ||\n    \"InterfaceDeclaration\" === nodeType ||\n    \"OpaqueType\" === nodeType ||\n    \"TypeAlias\" === nodeType ||\n    \"EnumDeclaration\" === nodeType ||\n    \"TSDeclareFunction\" === nodeType ||\n    \"TSInterfaceDeclaration\" === nodeType ||\n    \"TSTypeAliasDeclaration\" === nodeType ||\n    \"TSEnumDeclaration\" === nodeType ||\n    \"TSModuleDeclaration\" === nodeType ||\n    \"TSImportEqualsDeclaration\" === nodeType ||\n    \"TSExportAssignment\" === nodeType ||\n    \"TSNamespaceExportDeclaration\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      (\"Statement\" === (node as t.Placeholder).expectedNode ||\n        \"Declaration\" === (node as t.Placeholder).expectedNode ||\n        \"BlockStatement\" === (node as t.Placeholder).expectedNode))\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTerminatorless(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Terminatorless {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"BreakStatement\" === nodeType ||\n    \"ContinueStatement\" === nodeType ||\n    \"ReturnStatement\" === nodeType ||\n    \"ThrowStatement\" === nodeType ||\n    \"YieldExpression\" === nodeType ||\n    \"AwaitExpression\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isCompletionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.CompletionStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"BreakStatement\" === nodeType ||\n    \"ContinueStatement\" === nodeType ||\n    \"ReturnStatement\" === nodeType ||\n    \"ThrowStatement\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isConditional(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Conditional {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"ConditionalExpression\" === nodeType || \"IfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isLoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Loop {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"DoWhileStatement\" === nodeType ||\n    \"ForInStatement\" === nodeType ||\n    \"ForStatement\" === nodeType ||\n    \"WhileStatement\" === nodeType ||\n    \"ForOfStatement\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isWhile(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.While {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"DoWhileStatement\" === nodeType || \"WhileStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExpressionWrapper(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExpressionWrapper {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ExpressionStatement\" === nodeType ||\n    \"ParenthesizedExpression\" === nodeType ||\n    \"TypeCastExpression\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFor(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.For {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ForInStatement\" === nodeType ||\n    \"ForStatement\" === nodeType ||\n    \"ForOfStatement\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isForXStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ForXStatement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"ForInStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Function {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"FunctionDeclaration\" === nodeType ||\n    \"FunctionExpression\" === nodeType ||\n    \"ObjectMethod\" === nodeType ||\n    \"ArrowFunctionExpression\" === nodeType ||\n    \"ClassMethod\" === nodeType ||\n    \"ClassPrivateMethod\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFunctionParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FunctionParent {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"FunctionDeclaration\" === nodeType ||\n    \"FunctionExpression\" === nodeType ||\n    \"ObjectMethod\" === nodeType ||\n    \"ArrowFunctionExpression\" === nodeType ||\n    \"ClassMethod\" === nodeType ||\n    \"ClassPrivateMethod\" === nodeType ||\n    \"StaticBlock\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPureish(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Pureish {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"FunctionDeclaration\" === nodeType ||\n    \"FunctionExpression\" === nodeType ||\n    \"StringLiteral\" === nodeType ||\n    \"NumericLiteral\" === nodeType ||\n    \"NullLiteral\" === nodeType ||\n    \"BooleanLiteral\" === nodeType ||\n    \"RegExpLiteral\" === nodeType ||\n    \"ArrowFunctionExpression\" === nodeType ||\n    \"BigIntLiteral\" === nodeType ||\n    \"DecimalLiteral\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"StringLiteral\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Declaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"FunctionDeclaration\" === nodeType ||\n    \"VariableDeclaration\" === nodeType ||\n    \"ClassDeclaration\" === nodeType ||\n    \"ExportAllDeclaration\" === nodeType ||\n    \"ExportDefaultDeclaration\" === nodeType ||\n    \"ExportNamedDeclaration\" === nodeType ||\n    \"ImportDeclaration\" === nodeType ||\n    \"DeclareClass\" === nodeType ||\n    \"DeclareFunction\" === nodeType ||\n    \"DeclareInterface\" === nodeType ||\n    \"DeclareModule\" === nodeType ||\n    \"DeclareModuleExports\" === nodeType ||\n    \"DeclareTypeAlias\" === nodeType ||\n    \"DeclareOpaqueType\" === nodeType ||\n    \"DeclareVariable\" === nodeType ||\n    \"DeclareExportDeclaration\" === nodeType ||\n    \"DeclareExportAllDeclaration\" === nodeType ||\n    \"InterfaceDeclaration\" === nodeType ||\n    \"OpaqueType\" === nodeType ||\n    \"TypeAlias\" === nodeType ||\n    \"EnumDeclaration\" === nodeType ||\n    \"TSDeclareFunction\" === nodeType ||\n    \"TSInterfaceDeclaration\" === nodeType ||\n    \"TSTypeAliasDeclaration\" === nodeType ||\n    \"TSEnumDeclaration\" === nodeType ||\n    \"TSModuleDeclaration\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"Declaration\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPatternLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.PatternLike {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"Identifier\" === nodeType ||\n    \"RestElement\" === nodeType ||\n    \"AssignmentPattern\" === nodeType ||\n    \"ArrayPattern\" === nodeType ||\n    \"ObjectPattern\" === nodeType ||\n    \"TSAsExpression\" === nodeType ||\n    \"TSTypeAssertion\" === nodeType ||\n    \"TSNonNullExpression\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      (\"Pattern\" === (node as t.Placeholder).expectedNode ||\n        \"Identifier\" === (node as t.Placeholder).expectedNode))\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isLVal(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.LVal {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"Identifier\" === nodeType ||\n    \"MemberExpression\" === nodeType ||\n    \"RestElement\" === nodeType ||\n    \"AssignmentPattern\" === nodeType ||\n    \"ArrayPattern\" === nodeType ||\n    \"ObjectPattern\" === nodeType ||\n    \"TSParameterProperty\" === nodeType ||\n    \"TSAsExpression\" === nodeType ||\n    \"TSTypeAssertion\" === nodeType ||\n    \"TSNonNullExpression\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      (\"Pattern\" === (node as t.Placeholder).expectedNode ||\n        \"Identifier\" === (node as t.Placeholder).expectedNode))\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSEntityName(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSEntityName {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"Identifier\" === nodeType ||\n    \"TSQualifiedName\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"Identifier\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Literal {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"StringLiteral\" === nodeType ||\n    \"NumericLiteral\" === nodeType ||\n    \"NullLiteral\" === nodeType ||\n    \"BooleanLiteral\" === nodeType ||\n    \"RegExpLiteral\" === nodeType ||\n    \"TemplateLiteral\" === nodeType ||\n    \"BigIntLiteral\" === nodeType ||\n    \"DecimalLiteral\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"StringLiteral\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isImmutable(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Immutable {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"StringLiteral\" === nodeType ||\n    \"NumericLiteral\" === nodeType ||\n    \"NullLiteral\" === nodeType ||\n    \"BooleanLiteral\" === nodeType ||\n    \"BigIntLiteral\" === nodeType ||\n    \"JSXAttribute\" === nodeType ||\n    \"JSXClosingElement\" === nodeType ||\n    \"JSXElement\" === nodeType ||\n    \"JSXExpressionContainer\" === nodeType ||\n    \"JSXSpreadChild\" === nodeType ||\n    \"JSXOpeningElement\" === nodeType ||\n    \"JSXText\" === nodeType ||\n    \"JSXFragment\" === nodeType ||\n    \"JSXOpeningFragment\" === nodeType ||\n    \"JSXClosingFragment\" === nodeType ||\n    \"DecimalLiteral\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"StringLiteral\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isUserWhitespacable(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.UserWhitespacable {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ObjectMethod\" === nodeType ||\n    \"ObjectProperty\" === nodeType ||\n    \"ObjectTypeInternalSlot\" === nodeType ||\n    \"ObjectTypeCallProperty\" === nodeType ||\n    \"ObjectTypeIndexer\" === nodeType ||\n    \"ObjectTypeProperty\" === nodeType ||\n    \"ObjectTypeSpreadProperty\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Method {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ObjectMethod\" === nodeType ||\n    \"ClassMethod\" === nodeType ||\n    \"ClassPrivateMethod\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isObjectMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ObjectMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Property {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ObjectProperty\" === nodeType ||\n    \"ClassProperty\" === nodeType ||\n    \"ClassAccessorProperty\" === nodeType ||\n    \"ClassPrivateProperty\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isUnaryLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.UnaryLike {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"UnaryExpression\" === nodeType || \"SpreadElement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Pattern {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"AssignmentPattern\" === nodeType ||\n    \"ArrayPattern\" === nodeType ||\n    \"ObjectPattern\" === nodeType ||\n    (nodeType === \"Placeholder\" &&\n      \"Pattern\" === (node as t.Placeholder).expectedNode)\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Class {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ModuleDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ExportAllDeclaration\" === nodeType ||\n    \"ExportDefaultDeclaration\" === nodeType ||\n    \"ExportNamedDeclaration\" === nodeType ||\n    \"ImportDeclaration\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ExportDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ExportAllDeclaration\" === nodeType ||\n    \"ExportDefaultDeclaration\" === nodeType ||\n    \"ExportNamedDeclaration\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isModuleSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.ModuleSpecifier {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ExportSpecifier\" === nodeType ||\n    \"ImportDefaultSpecifier\" === nodeType ||\n    \"ImportNamespaceSpecifier\" === nodeType ||\n    \"ImportSpecifier\" === nodeType ||\n    \"ExportNamespaceSpecifier\" === nodeType ||\n    \"ExportDefaultSpecifier\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isAccessor(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Accessor {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"ClassAccessorProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isPrivate(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Private {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"ClassPrivateProperty\" === nodeType ||\n    \"ClassPrivateMethod\" === nodeType ||\n    \"PrivateName\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFlow(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Flow {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"AnyTypeAnnotation\" === nodeType ||\n    \"ArrayTypeAnnotation\" === nodeType ||\n    \"BooleanTypeAnnotation\" === nodeType ||\n    \"BooleanLiteralTypeAnnotation\" === nodeType ||\n    \"NullLiteralTypeAnnotation\" === nodeType ||\n    \"ClassImplements\" === nodeType ||\n    \"DeclareClass\" === nodeType ||\n    \"DeclareFunction\" === nodeType ||\n    \"DeclareInterface\" === nodeType ||\n    \"DeclareModule\" === nodeType ||\n    \"DeclareModuleExports\" === nodeType ||\n    \"DeclareTypeAlias\" === nodeType ||\n    \"DeclareOpaqueType\" === nodeType ||\n    \"DeclareVariable\" === nodeType ||\n    \"DeclareExportDeclaration\" === nodeType ||\n    \"DeclareExportAllDeclaration\" === nodeType ||\n    \"DeclaredPredicate\" === nodeType ||\n    \"ExistsTypeAnnotation\" === nodeType ||\n    \"FunctionTypeAnnotation\" === nodeType ||\n    \"FunctionTypeParam\" === nodeType ||\n    \"GenericTypeAnnotation\" === nodeType ||\n    \"InferredPredicate\" === nodeType ||\n    \"InterfaceExtends\" === nodeType ||\n    \"InterfaceDeclaration\" === nodeType ||\n    \"InterfaceTypeAnnotation\" === nodeType ||\n    \"IntersectionTypeAnnotation\" === nodeType ||\n    \"MixedTypeAnnotation\" === nodeType ||\n    \"EmptyTypeAnnotation\" === nodeType ||\n    \"NullableTypeAnnotation\" === nodeType ||\n    \"NumberLiteralTypeAnnotation\" === nodeType ||\n    \"NumberTypeAnnotation\" === nodeType ||\n    \"ObjectTypeAnnotation\" === nodeType ||\n    \"ObjectTypeInternalSlot\" === nodeType ||\n    \"ObjectTypeCallProperty\" === nodeType ||\n    \"ObjectTypeIndexer\" === nodeType ||\n    \"ObjectTypeProperty\" === nodeType ||\n    \"ObjectTypeSpreadProperty\" === nodeType ||\n    \"OpaqueType\" === nodeType ||\n    \"QualifiedTypeIdentifier\" === nodeType ||\n    \"StringLiteralTypeAnnotation\" === nodeType ||\n    \"StringTypeAnnotation\" === nodeType ||\n    \"SymbolTypeAnnotation\" === nodeType ||\n    \"ThisTypeAnnotation\" === nodeType ||\n    \"TupleTypeAnnotation\" === nodeType ||\n    \"TypeofTypeAnnotation\" === nodeType ||\n    \"TypeAlias\" === nodeType ||\n    \"TypeAnnotation\" === nodeType ||\n    \"TypeCastExpression\" === nodeType ||\n    \"TypeParameter\" === nodeType ||\n    \"TypeParameterDeclaration\" === nodeType ||\n    \"TypeParameterInstantiation\" === nodeType ||\n    \"UnionTypeAnnotation\" === nodeType ||\n    \"Variance\" === nodeType ||\n    \"VoidTypeAnnotation\" === nodeType ||\n    \"EnumDeclaration\" === nodeType ||\n    \"EnumBooleanBody\" === nodeType ||\n    \"EnumNumberBody\" === nodeType ||\n    \"EnumStringBody\" === nodeType ||\n    \"EnumSymbolBody\" === nodeType ||\n    \"EnumBooleanMember\" === nodeType ||\n    \"EnumNumberMember\" === nodeType ||\n    \"EnumStringMember\" === nodeType ||\n    \"EnumDefaultedMember\" === nodeType ||\n    \"IndexedAccessType\" === nodeType ||\n    \"OptionalIndexedAccessType\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFlowType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FlowType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"AnyTypeAnnotation\" === nodeType ||\n    \"ArrayTypeAnnotation\" === nodeType ||\n    \"BooleanTypeAnnotation\" === nodeType ||\n    \"BooleanLiteralTypeAnnotation\" === nodeType ||\n    \"NullLiteralTypeAnnotation\" === nodeType ||\n    \"ExistsTypeAnnotation\" === nodeType ||\n    \"FunctionTypeAnnotation\" === nodeType ||\n    \"GenericTypeAnnotation\" === nodeType ||\n    \"InterfaceTypeAnnotation\" === nodeType ||\n    \"IntersectionTypeAnnotation\" === nodeType ||\n    \"MixedTypeAnnotation\" === nodeType ||\n    \"EmptyTypeAnnotation\" === nodeType ||\n    \"NullableTypeAnnotation\" === nodeType ||\n    \"NumberLiteralTypeAnnotation\" === nodeType ||\n    \"NumberTypeAnnotation\" === nodeType ||\n    \"ObjectTypeAnnotation\" === nodeType ||\n    \"StringLiteralTypeAnnotation\" === nodeType ||\n    \"StringTypeAnnotation\" === nodeType ||\n    \"SymbolTypeAnnotation\" === nodeType ||\n    \"ThisTypeAnnotation\" === nodeType ||\n    \"TupleTypeAnnotation\" === nodeType ||\n    \"TypeofTypeAnnotation\" === nodeType ||\n    \"UnionTypeAnnotation\" === nodeType ||\n    \"VoidTypeAnnotation\" === nodeType ||\n    \"IndexedAccessType\" === nodeType ||\n    \"OptionalIndexedAccessType\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFlowBaseAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FlowBaseAnnotation {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"AnyTypeAnnotation\" === nodeType ||\n    \"BooleanTypeAnnotation\" === nodeType ||\n    \"NullLiteralTypeAnnotation\" === nodeType ||\n    \"MixedTypeAnnotation\" === nodeType ||\n    \"EmptyTypeAnnotation\" === nodeType ||\n    \"NumberTypeAnnotation\" === nodeType ||\n    \"StringTypeAnnotation\" === nodeType ||\n    \"SymbolTypeAnnotation\" === nodeType ||\n    \"ThisTypeAnnotation\" === nodeType ||\n    \"VoidTypeAnnotation\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFlowDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FlowDeclaration {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"DeclareClass\" === nodeType ||\n    \"DeclareFunction\" === nodeType ||\n    \"DeclareInterface\" === nodeType ||\n    \"DeclareModule\" === nodeType ||\n    \"DeclareModuleExports\" === nodeType ||\n    \"DeclareTypeAlias\" === nodeType ||\n    \"DeclareOpaqueType\" === nodeType ||\n    \"DeclareVariable\" === nodeType ||\n    \"DeclareExportDeclaration\" === nodeType ||\n    \"DeclareExportAllDeclaration\" === nodeType ||\n    \"InterfaceDeclaration\" === nodeType ||\n    \"OpaqueType\" === nodeType ||\n    \"TypeAlias\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isFlowPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.FlowPredicate {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\"DeclaredPredicate\" === nodeType || \"InferredPredicate\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumBody {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"EnumBooleanBody\" === nodeType ||\n    \"EnumNumberBody\" === nodeType ||\n    \"EnumStringBody\" === nodeType ||\n    \"EnumSymbolBody\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.EnumMember {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"EnumBooleanMember\" === nodeType ||\n    \"EnumNumberMember\" === nodeType ||\n    \"EnumStringMember\" === nodeType ||\n    \"EnumDefaultedMember\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isJSX(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.JSX {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"JSXAttribute\" === nodeType ||\n    \"JSXClosingElement\" === nodeType ||\n    \"JSXElement\" === nodeType ||\n    \"JSXEmptyExpression\" === nodeType ||\n    \"JSXExpressionContainer\" === nodeType ||\n    \"JSXSpreadChild\" === nodeType ||\n    \"JSXIdentifier\" === nodeType ||\n    \"JSXMemberExpression\" === nodeType ||\n    \"JSXNamespacedName\" === nodeType ||\n    \"JSXOpeningElement\" === nodeType ||\n    \"JSXSpreadAttribute\" === nodeType ||\n    \"JSXText\" === nodeType ||\n    \"JSXFragment\" === nodeType ||\n    \"JSXOpeningFragment\" === nodeType ||\n    \"JSXClosingFragment\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isMiscellaneous(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.Miscellaneous {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"Noop\" === nodeType ||\n    \"Placeholder\" === nodeType ||\n    \"V8IntrinsicIdentifier\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTypeScript(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TypeScript {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"TSParameterProperty\" === nodeType ||\n    \"TSDeclareFunction\" === nodeType ||\n    \"TSDeclareMethod\" === nodeType ||\n    \"TSQualifiedName\" === nodeType ||\n    \"TSCallSignatureDeclaration\" === nodeType ||\n    \"TSConstructSignatureDeclaration\" === nodeType ||\n    \"TSPropertySignature\" === nodeType ||\n    \"TSMethodSignature\" === nodeType ||\n    \"TSIndexSignature\" === nodeType ||\n    \"TSAnyKeyword\" === nodeType ||\n    \"TSBooleanKeyword\" === nodeType ||\n    \"TSBigIntKeyword\" === nodeType ||\n    \"TSIntrinsicKeyword\" === nodeType ||\n    \"TSNeverKeyword\" === nodeType ||\n    \"TSNullKeyword\" === nodeType ||\n    \"TSNumberKeyword\" === nodeType ||\n    \"TSObjectKeyword\" === nodeType ||\n    \"TSStringKeyword\" === nodeType ||\n    \"TSSymbolKeyword\" === nodeType ||\n    \"TSUndefinedKeyword\" === nodeType ||\n    \"TSUnknownKeyword\" === nodeType ||\n    \"TSVoidKeyword\" === nodeType ||\n    \"TSThisType\" === nodeType ||\n    \"TSFunctionType\" === nodeType ||\n    \"TSConstructorType\" === nodeType ||\n    \"TSTypeReference\" === nodeType ||\n    \"TSTypePredicate\" === nodeType ||\n    \"TSTypeQuery\" === nodeType ||\n    \"TSTypeLiteral\" === nodeType ||\n    \"TSArrayType\" === nodeType ||\n    \"TSTupleType\" === nodeType ||\n    \"TSOptionalType\" === nodeType ||\n    \"TSRestType\" === nodeType ||\n    \"TSNamedTupleMember\" === nodeType ||\n    \"TSUnionType\" === nodeType ||\n    \"TSIntersectionType\" === nodeType ||\n    \"TSConditionalType\" === nodeType ||\n    \"TSInferType\" === nodeType ||\n    \"TSParenthesizedType\" === nodeType ||\n    \"TSTypeOperator\" === nodeType ||\n    \"TSIndexedAccessType\" === nodeType ||\n    \"TSMappedType\" === nodeType ||\n    \"TSLiteralType\" === nodeType ||\n    \"TSExpressionWithTypeArguments\" === nodeType ||\n    \"TSInterfaceDeclaration\" === nodeType ||\n    \"TSInterfaceBody\" === nodeType ||\n    \"TSTypeAliasDeclaration\" === nodeType ||\n    \"TSInstantiationExpression\" === nodeType ||\n    \"TSAsExpression\" === nodeType ||\n    \"TSTypeAssertion\" === nodeType ||\n    \"TSEnumDeclaration\" === nodeType ||\n    \"TSEnumMember\" === nodeType ||\n    \"TSModuleDeclaration\" === nodeType ||\n    \"TSModuleBlock\" === nodeType ||\n    \"TSImportType\" === nodeType ||\n    \"TSImportEqualsDeclaration\" === nodeType ||\n    \"TSExternalModuleReference\" === nodeType ||\n    \"TSNonNullExpression\" === nodeType ||\n    \"TSExportAssignment\" === nodeType ||\n    \"TSNamespaceExportDeclaration\" === nodeType ||\n    \"TSTypeAnnotation\" === nodeType ||\n    \"TSTypeParameterInstantiation\" === nodeType ||\n    \"TSTypeParameterDeclaration\" === nodeType ||\n    \"TSTypeParameter\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSTypeElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSTypeElement {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"TSCallSignatureDeclaration\" === nodeType ||\n    \"TSConstructSignatureDeclaration\" === nodeType ||\n    \"TSPropertySignature\" === nodeType ||\n    \"TSMethodSignature\" === nodeType ||\n    \"TSIndexSignature\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"TSAnyKeyword\" === nodeType ||\n    \"TSBooleanKeyword\" === nodeType ||\n    \"TSBigIntKeyword\" === nodeType ||\n    \"TSIntrinsicKeyword\" === nodeType ||\n    \"TSNeverKeyword\" === nodeType ||\n    \"TSNullKeyword\" === nodeType ||\n    \"TSNumberKeyword\" === nodeType ||\n    \"TSObjectKeyword\" === nodeType ||\n    \"TSStringKeyword\" === nodeType ||\n    \"TSSymbolKeyword\" === nodeType ||\n    \"TSUndefinedKeyword\" === nodeType ||\n    \"TSUnknownKeyword\" === nodeType ||\n    \"TSVoidKeyword\" === nodeType ||\n    \"TSThisType\" === nodeType ||\n    \"TSFunctionType\" === nodeType ||\n    \"TSConstructorType\" === nodeType ||\n    \"TSTypeReference\" === nodeType ||\n    \"TSTypePredicate\" === nodeType ||\n    \"TSTypeQuery\" === nodeType ||\n    \"TSTypeLiteral\" === nodeType ||\n    \"TSArrayType\" === nodeType ||\n    \"TSTupleType\" === nodeType ||\n    \"TSOptionalType\" === nodeType ||\n    \"TSRestType\" === nodeType ||\n    \"TSUnionType\" === nodeType ||\n    \"TSIntersectionType\" === nodeType ||\n    \"TSConditionalType\" === nodeType ||\n    \"TSInferType\" === nodeType ||\n    \"TSParenthesizedType\" === nodeType ||\n    \"TSTypeOperator\" === nodeType ||\n    \"TSIndexedAccessType\" === nodeType ||\n    \"TSMappedType\" === nodeType ||\n    \"TSLiteralType\" === nodeType ||\n    \"TSExpressionWithTypeArguments\" === nodeType ||\n    \"TSImportType\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isTSBaseType(\n  node: object | null | undefined,\n  opts?: object | null,\n): node is t.TSBaseType {\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (\n    \"TSAnyKeyword\" === nodeType ||\n    \"TSBooleanKeyword\" === nodeType ||\n    \"TSBigIntKeyword\" === nodeType ||\n    \"TSIntrinsicKeyword\" === nodeType ||\n    \"TSNeverKeyword\" === nodeType ||\n    \"TSNullKeyword\" === nodeType ||\n    \"TSNumberKeyword\" === nodeType ||\n    \"TSObjectKeyword\" === nodeType ||\n    \"TSStringKeyword\" === nodeType ||\n    \"TSSymbolKeyword\" === nodeType ||\n    \"TSUndefinedKeyword\" === nodeType ||\n    \"TSUnknownKeyword\" === nodeType ||\n    \"TSVoidKeyword\" === nodeType ||\n    \"TSThisType\" === nodeType ||\n    \"TSLiteralType\" === nodeType\n  ) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isNumberLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): boolean {\n  console.trace(\n    \"The node type NumberLiteral has been renamed to NumericLiteral\",\n  );\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"NumberLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isRegexLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): boolean {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"RegexLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isRestProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): boolean {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"RestProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\nexport function isSpreadProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): boolean {\n  console.trace(\n    \"The node type SpreadProperty has been renamed to SpreadElement\",\n  );\n  if (!node) return false;\n\n  const nodeType = (node as t.Node).type;\n  if (nodeType === \"SpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return shallowEqual(node, opts);\n    }\n  }\n\n  return false;\n}\n", "import {\n  isIdentifier,\n  isMemberExpression,\n  isStringLiteral,\n  isThisExpression,\n} from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Determines whether or not the input node `member` matches the\n * input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function matchesPattern(\n  member: t.Node | null | undefined,\n  match: string | string[],\n  allowPartial?: boolean,\n): boolean {\n  // not a member expression\n  if (!isMemberExpression(member)) return false;\n\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n\n  let node;\n  for (node = member; isMemberExpression(node); node = node.object) {\n    nodes.push(node.property);\n  }\n  nodes.push(node);\n\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n    if (isIdentifier(node)) {\n      value = node.name;\n    } else if (isStringLiteral(node)) {\n      value = node.value;\n    } else if (isThisExpression(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}\n", "import matchesPattern from \"./matchesPattern\";\nimport type * as t from \"..\";\n\n/**\n * Build a function that when called will return whether or not the\n * input `node` `MemberExpression` matches the input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function buildMatchMemberExpression(\n  match: string,\n  allowPartial?: boolean,\n) {\n  const parts = match.split(\".\");\n\n  return (member: t.Node) => matchesPattern(member, parts, allowPartial);\n}\n", "import buildMatchMemberExpression from \"../buildMatchMemberExpression\";\n\nconst isReactComponent = buildMatchMemberExpression(\"React.Component\");\n\nexport default isReactComponent;\n", "export default function isCompatTag(tagName?: string): boolean {\n  // Must start with a lowercase ASCII letter\n  return !!tagName && /^[a-z]/.test(tagName);\n}\n", "'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nmodule.exports = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n", "import { FLIPPED_ALIAS_KEYS, ALIAS_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function isType<T extends t.Node[\"type\"]>(\n  nodeType: string,\n  targetType: T,\n): nodeType is T;\n\nexport default function isType(\n  nodeType: string | null | undefined,\n  targetType: string,\n): boolean;\n\n/**\n * Test if a `nodeType` is a `targetType` or if `targetType` is an alias of `nodeType`.\n */\nexport default function isType(nodeType: string, targetType: string): boolean {\n  if (nodeType === targetType) return true;\n\n  // This is a fast-path. If the test above failed, but an alias key is found, then the\n  // targetType was a primary node type, so there's no need to check the aliases.\n  // @ts-expect-error targetType may not index ALIAS_KEYS\n  if (ALIAS_KEYS[targetType]) return false;\n\n  const aliases: Array<string> | undefined = FLIPPED_ALIAS_KEYS[targetType];\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (const alias of aliases) {\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}\n", "import { PLACEHOLDERS_ALIAS } from \"../definitions\";\n\n/**\n * Test if a `placeholderType` is a `targetType` or if `targetType` is an alias of `placeholderType`.\n */\nexport default function isPlaceholderType(\n  placeholderType: string,\n  targetType: string,\n): boolean {\n  if (placeholderType === targetType) return true;\n\n  const aliases: Array<string> | undefined =\n    PLACEHOLDERS_ALIAS[placeholderType];\n  if (aliases) {\n    for (const alias of aliases) {\n      if (targetType === alias) return true;\n    }\n  }\n\n  return false;\n}\n", "import shallowEqual from \"../utils/shallowEqual\";\nimport isType from \"./isType\";\nimport isPlaceholderType from \"./isPlaceholderType\";\nimport { FLIPPED_ALIAS_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function is<T extends t.Node[\"type\"]>(\n  type: T,\n  node: t.Node | null | undefined,\n  opts?: undefined,\n): node is Extract<t.Node, { type: T }>;\n\nexport default function is<\n  T extends t.Node[\"type\"],\n  P extends Extract<t.Node, { type: T }>,\n>(type: T, n: t.Node | null | undefined, required: Partial<P>): n is P;\n\nexport default function is<P extends t.Node>(\n  type: string,\n  node: t.Node | null | undefined,\n  opts: Partial<P>,\n): node is P;\n\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node;\n/**\n * Returns whether `node` is of given `type`.\n *\n * For better performance, use this instead of `is[Type]` when `type` is unknown.\n */\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node {\n  if (!node) return false;\n\n  const matches = isType(node.type, type);\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in FLIPPED_ALIAS_KEYS) {\n      // We can only return true if the placeholder doesn't replace a real node,\n      // but it replaces a category of nodes (an alias).\n      //\n      // t.is(\"Identifier\", node) gives some guarantees about node's shape, so we\n      // can't say that Placeholder(expectedNode: \"Identifier\") is an identifier\n      // because it doesn't have the same properties.\n      // On the other hand, t.is(\"Expression\", node) doesn't say anything about\n      // the shape of node because Expression can be many different nodes: we can,\n      // and should, safely report expression placeholders as Expressions.\n      return isPlaceholderType(node.expectedNode, type);\n    }\n    return false;\n  }\n\n  if (typeof opts === \"undefined\") {\n    return true;\n  } else {\n    return shallowEqual(node, opts);\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "export {\n  isIdentifierName,\n  isIdentifierChar,\n  isIdentifierStart,\n} from \"./identifier\";\nexport {\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"./keyword\";\n", "import {\n  isIdentifierName,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\n/**\n * Check if the input `name` is a valid identifier name\n * and isn't a reserved word.\n */\nexport default function isValidIdentifier(\n  name: string,\n  reserved: boolean = true,\n): boolean {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    // \"await\" is invalid in module, valid in script; better be safe (see #4952)\n    if (isKeyword(name) || isStrictReservedWord(name, true)) {\n      return false;\n    }\n  }\n\n  return isIdentifierName(name);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readCodePoint = readCodePoint;\nexports.readInt = readInt;\nexports.readStringContents = readStringContents;\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\n\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let containsInvalid = false;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n\n    const ch = input.charCodeAt(pos);\n\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      let escaped;\n      ({\n        ch: escaped,\n        pos,\n        lineStart,\n        curLine\n      } = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors));\n\n      if (escaped === null) {\n        containsInvalid = true;\n      } else {\n        out += escaped;\n      }\n\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n\n  return {\n    pos,\n    str: out,\n    containsInvalid,\n    lineStart,\n    curLine\n  };\n}\n\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n\n  return ch === (type === \"double\" ? 34 : 39);\n}\n\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n\n  const ch = input.charCodeAt(pos++);\n\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n\n    case 114:\n      return res(\"\\r\");\n\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n\n    case 116:\n      return res(\"\\t\");\n\n    case 98:\n      return res(\"\\b\");\n\n    case 118:\n      return res(\"\\u000b\");\n\n    case 102:\n      return res(\"\\f\");\n\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n\n    case 10:\n      lineStart = pos;\n      ++curLine;\n\n    case 8232:\n    case 8233:\n      return res(\"\");\n\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors));\n\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n\n  return {\n    code: n,\n    pos\n  };\n}\n\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      ++pos;\n      continue;\n    }\n\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n\n    if (val >= radix) {\n      if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n\n    ++pos;\n    total = total * radix + val;\n  }\n\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n\n  return {\n    n: total,\n    pos\n  };\n}\n\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n\n  return {\n    code,\n    pos\n  };\n}", "export const STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexport const FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexport const FOR_INIT_KEYS = [\"left\", \"init\"];\nexport const COMMENT_KEYS = [\n  \"leadingComments\",\n  \"trailingComments\",\n  \"innerComments\",\n] as const;\n\nexport const LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexport const UPDATE_OPERATORS = [\"++\", \"--\"];\n\nexport const BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexport const EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexport const COMPARISON_BINARY_OPERATORS = [\n  ...EQUALITY_BINARY_OPERATORS,\n  \"in\",\n  \"instanceof\",\n];\nexport const BOOLEAN_BINARY_OPERATORS = [\n  ...COMPARISON_BINARY_OPERATORS,\n  ...BOOLEAN_NUMBER_BINARY_OPERATORS,\n];\nexport const NUMBER_BINARY_OPERATORS = [\n  \"-\",\n  \"/\",\n  \"%\",\n  \"*\",\n  \"**\",\n  \"&\",\n  \"|\",\n  \">>\",\n  \">>>\",\n  \"<<\",\n  \"^\",\n];\nexport const BINARY_OPERATORS = [\n  \"+\",\n  ...NUMBER_BINARY_OPERATORS,\n  ...BOOLEAN_BINARY_OPERATORS,\n  \"|>\",\n];\n\nexport const ASSIGNMENT_OPERATORS = [\n  \"=\",\n  \"+=\",\n  ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"),\n  ...LOGICAL_OPERATORS.map(op => op + \"=\"),\n];\n\nexport const BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexport const NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexport const STRING_UNARY_OPERATORS = [\"typeof\"];\nexport const UNARY_OPERATORS = [\n  \"void\",\n  \"throw\",\n  ...BOOLEAN_UNARY_OPERATORS,\n  ...NUMBER_UNARY_OPERATORS,\n  ...STRING_UNARY_OPERATORS,\n];\n\nexport const INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"],\n} as const;\n\nexport const BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\nexport const NOT_LOCAL_BINDING = Symbol.for(\n  \"should not be considered a local binding\",\n);\n", "import is from \"../validators/is\";\nimport { validateField, validateChild } from \"../validators/validate\";\nimport type * as t from \"..\";\n\nexport const VISITOR_KEYS: Record<string, string[]> = {};\nexport const ALIAS_KEYS: Partial<Record<NodeTypesWithoutComment, string[]>> =\n  {};\nexport const FLIPPED_ALIAS_KEYS: Record<string, NodeTypesWithoutComment[]> = {};\nexport const NODE_FIELDS: Record<string, FieldDefinitions> = {};\nexport const BUILDER_KEYS: Record<string, string[]> = {};\nexport const DEPRECATED_KEYS: Record<string, NodeTypesWithoutComment> = {};\nexport const NODE_PARENT_VALIDATIONS: Record<string, Validator> = {};\n\nfunction getType(val: any) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\ntype NodeTypesWithoutComment = t.Node[\"type\"] | keyof t.Aliases;\n\ntype NodeTypes = NodeTypesWithoutComment | t.Comment[\"type\"];\n\ntype PrimitiveTypes = ReturnType<typeof getType>;\n\ntype FieldDefinitions = {\n  [x: string]: FieldOptions;\n};\n\ntype DefineTypeOpts = {\n  fields?: FieldDefinitions;\n  visitor?: Array<string>;\n  aliases?: Array<string>;\n  builder?: Array<string>;\n  inherits?: NodeTypes;\n  deprecatedAlias?: string;\n  validate?: Validator;\n};\n\nexport type Validator = (\n  | { type: PrimitiveTypes }\n  | { each: Validator }\n  | { chainOf: Validator[] }\n  | { oneOf: any[] }\n  | { oneOfNodeTypes: NodeTypes[] }\n  | { oneOfNodeOrValueTypes: (NodeTypes | PrimitiveTypes)[] }\n  | { shapeOf: { [x: string]: FieldOptions } }\n  | {}\n) &\n  ((node: t.Node, key: string, val: any) => void);\n\nexport type FieldOptions = {\n  default?: string | number | boolean | [];\n  optional?: boolean;\n  validate?: Validator;\n};\n\nexport function validate(validate: Validator): FieldOptions {\n  return { validate };\n}\n\nexport function typeIs(typeName: NodeTypes | NodeTypes[]) {\n  return typeof typeName === \"string\"\n    ? assertNodeType(typeName)\n    : assertNodeType(...typeName);\n}\n\nexport function validateType(typeName: NodeTypes | NodeTypes[]) {\n  return validate(typeIs(typeName));\n}\n\nexport function validateOptional(validate: Validator): FieldOptions {\n  return { validate, optional: true };\n}\n\nexport function validateOptionalType(\n  typeName: NodeTypes | NodeTypes[],\n): FieldOptions {\n  return { validate: typeIs(typeName), optional: true };\n}\n\nexport function arrayOf(elementType: Validator): Validator {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nexport function arrayOfType(typeName: NodeTypes | NodeTypes[]) {\n  return arrayOf(typeIs(typeName));\n}\n\nexport function validateArrayOfType(typeName: NodeTypes | NodeTypes[]) {\n  return validate(arrayOfType(typeName));\n}\n\nexport function assertEach(callback: Validator): Validator {\n  function validator(node: t.Node, key: string, val: any) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      const subkey = `${key}[${i}]`;\n      const v = val[i];\n      callback(node, subkey, v);\n      if (process.env.BABEL_TYPES_8_BREAKING) validateChild(node, subkey, v);\n    }\n  }\n  validator.each = callback;\n  return validator;\n}\n\nexport function assertOneOf(...values: Array<any>): Validator {\n  function validate(node: any, key: string, val: any) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(\n        `Property ${key} expected value to be one of ${JSON.stringify(\n          values,\n        )} but got ${JSON.stringify(val)}`,\n      );\n    }\n  }\n\n  validate.oneOf = values;\n\n  return validate;\n}\n\nexport function assertNodeType(...types: NodeTypes[]): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeTypes = types;\n\n  return validate;\n}\n\nexport function assertNodeOrValueType(\n  ...types: (NodeTypes | PrimitiveTypes)[]\n): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (getType(val) === type || is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n\n  return validate;\n}\n\nexport function assertValueType(type: PrimitiveTypes): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(\n        `Property ${key} expected type of ${type} but got ${getType(val)}`,\n      );\n    }\n  }\n\n  validate.type = type;\n\n  return validate;\n}\n\nexport function assertShape(shape: { [x: string]: FieldOptions }): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const errors = [];\n    for (const property of Object.keys(shape)) {\n      try {\n        validateField(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n        throw error;\n      }\n    }\n    if (errors.length) {\n      throw new TypeError(\n        `Property ${key} of ${\n          node.type\n        } expected to have the following:\\n${errors.join(\"\\n\")}`,\n      );\n    }\n  }\n\n  validate.shapeOf = shape;\n\n  return validate;\n}\n\nexport function assertOptionalChainStart(): Validator {\n  function validate(node: t.Node) {\n    let current = node;\n    while (node) {\n      const { type } = current;\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(\n      `Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${current?.type}`,\n    );\n  }\n\n  return validate;\n}\n\nexport function chain(...fns: Array<Validator>): Validator {\n  function validate(...args: Parameters<Validator>) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n  validate.chainOf = fns;\n\n  if (\n    fns.length >= 2 &&\n    \"type\" in fns[0] &&\n    fns[0].type === \"array\" &&\n    !(\"each\" in fns[1])\n  ) {\n    throw new Error(\n      `An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`,\n    );\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = [\n  \"aliases\",\n  \"builder\",\n  \"deprecatedAlias\",\n  \"fields\",\n  \"inherits\",\n  \"visitor\",\n  \"validate\",\n];\nconst validFieldKeys = [\"default\", \"optional\", \"validate\"];\n\n// Wraps defineType to ensure these aliases are included.\nexport function defineAliasedType(...aliases: string[]) {\n  return (type: string, opts: DefineTypeOpts = {}) => {\n    let defined = opts.aliases;\n    if (!defined) {\n      if (opts.inherits) defined = store[opts.inherits].aliases?.slice();\n      defined ??= [];\n      opts.aliases = defined;\n    }\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    return defineType(type, opts);\n  };\n}\n\nexport default function defineType(type: string, opts: DefineTypeOpts = {}) {\n  const inherits = (opts.inherits && store[opts.inherits]) || {};\n\n  let fields = opts.fields;\n  if (!fields) {\n    fields = {};\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n        if (\n          Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\"\n        ) {\n          throw new Error(\n            \"field defaults can only be primitives or empty arrays currently\",\n          );\n        }\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          validate: field.validate,\n        };\n      }\n    }\n  }\n\n  const visitor: Array<string> = opts.visitor || inherits.visitor || [];\n  const aliases: Array<string> = opts.aliases || inherits.aliases || [];\n  const builder: Array<string> =\n    opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (validTypeOpts.indexOf(k) === -1) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type as NodeTypesWithoutComment;\n  }\n\n  // ensure all field keys are represented in `fields`\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (validFieldKeys.indexOf(k) === -1) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type as NodeTypesWithoutComment] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type as NodeTypesWithoutComment);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n\nconst store = {} as Record<string, DefineTypeOpts>;\n", "import is from \"../validators/is\";\nimport isValidIdentifier from \"../validators/isValidIdentifier\";\nimport { isKeyword, isReservedWord } from \"@babel/helper-validator-identifier\";\nimport type * as t from \"..\";\nimport { readStringContents } from \"@babel/helper-string-parser\";\n\nimport {\n  BINARY_OPERATORS,\n  LOGICAL_OPERATORS,\n  ASSIGNMENT_OPERATORS,\n  UNARY_OPERATORS,\n  UPDATE_OPERATORS,\n} from \"../constants\";\n\nimport {\n  defineAliasedType,\n  assertShape,\n  assertOptionalChainStart,\n  assertValueType,\n  assertNodeType,\n  assertNodeOrValueType,\n  assertEach,\n  chain,\n  assertOneOf,\n  validateOptional,\n  type Validator,\n} from \"./utils\";\n\nconst defineType = defineAliasedType(\"Standardized\");\n\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeOrValueType(\"null\", \"Expression\", \"SpreadElement\"),\n        ),\n      ),\n      default: !process.env.BABEL_TYPES_8_BREAKING ? [] : undefined,\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertValueType(\"string\");\n        }\n\n        const identifier = assertOneOf(...ASSIGNMENT_OPERATORS);\n        const pattern = assertOneOf(\"=\");\n\n        return function (node: t.AssignmentExpression, key, val) {\n          const validator = is(\"Pattern\", node.left) ? pattern : identifier;\n          validator(node, key, val);\n        };\n      })(),\n    },\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"LVal\")\n        : assertNodeType(\n            \"Identifier\",\n            \"MemberExpression\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"TSAsExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...BINARY_OPERATORS),\n    },\n    left: {\n      validate: (function () {\n        const expression = assertNodeType(\"Expression\");\n        const inOp = assertNodeType(\"Expression\", \"PrivateName\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.BinaryExpression, key, val) {\n            const validator = node.operator === \"in\" ? inOp : expression;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `operator` property\n          { oneOfNodeTypes: [\"Expression\", \"PrivateName\"] },\n        );\n        return validator;\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n});\n\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: assertNodeType(\"DirectiveLiteral\"),\n    },\n  },\n});\n\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Directive\")),\n      ),\n      default: [],\n    },\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"],\n});\n\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\", \"Super\", \"V8IntrinsicIdentifier\"),\n    },\n    arguments: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            \"SpreadElement\",\n            \"JSXNamespacedName\",\n            \"ArgumentPlaceholder\",\n          ),\n        ),\n      ),\n    },\n    ...(!process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertOneOf(true, false),\n            optional: true,\n          },\n        }\n      : {}),\n    typeArguments: {\n      validate: assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: assertNodeType(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\"],\n});\n\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    alternate: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\", \"Conditional\"],\n});\n\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n});\n\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"],\n});\n\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: assertNodeType(\"Program\"),\n    },\n    comments: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? Object.assign(() => {}, {\n            each: { oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"] },\n          })\n        : assertEach(assertNodeType(\"CommentBlock\", \"CommentLine\")),\n      optional: true,\n    },\n    tokens: {\n      // todo(ts): add Token type\n      validate: assertEach(Object.assign(() => {}, { type: \"any\" })),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"VariableDeclaration\", \"LVal\")\n        : assertNodeType(\n            \"VariableDeclaration\",\n            \"Identifier\",\n            \"MemberExpression\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"TSAsExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: assertNodeType(\"VariableDeclaration\", \"Expression\"),\n      optional: true,\n    },\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    update: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\nexport const functionCommon = () => ({\n  params: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Identifier\", \"Pattern\", \"RestElement\")),\n    ),\n  },\n  generator: {\n    default: false,\n  },\n  async: {\n    default: false,\n  },\n});\n\nexport const functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\")\n      : assertNodeType(\n          \"TypeParameterDeclaration\",\n          \"TSTypeParameterDeclaration\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n});\n\nexport const functionDeclarationCommon = () => ({\n  ...functionCommon(),\n  declare: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  id: {\n    validate: assertNodeType(\"Identifier\"),\n    optional: true, // May be null for `export default function`\n  },\n});\n\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Statement\",\n    \"Pureish\",\n    \"Declaration\",\n  ],\n  validate: (function () {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return () => {};\n\n    const identifier = assertNodeType(\"Identifier\");\n\n    return function (parent, key, node) {\n      if (!is(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  })(),\n});\n\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\nexport const patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  decorators: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Decorator\")),\n    ),\n    optional: true,\n  },\n});\n\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\" /* for legacy param decorators */],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: {\n    ...patternLikeCommon(),\n    name: {\n      validate: chain(\n        assertValueType(\"string\"),\n        Object.assign(\n          function (node, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (!isValidIdentifier(val, false)) {\n              throw new TypeError(`\"${val}\" is not a valid identifier name`);\n            }\n          } as Validator,\n          { type: \"string\" },\n        ),\n      ),\n    },\n    optional: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    const match = /\\.(\\w+)$/.exec(key);\n    if (!match) return;\n\n    const [, parentKey] = match;\n    const nonComp = { computed: false };\n\n    // We can't check if `parent.property === node`, because nodes are validated\n    // before replacing them in the AST.\n    if (parentKey === \"property\") {\n      if (is(\"MemberExpression\", parent, nonComp)) return;\n      if (is(\"OptionalMemberExpression\", parent, nonComp)) return;\n    } else if (parentKey === \"key\") {\n      if (is(\"Property\", parent, nonComp)) return;\n      if (is(\"Method\", parent, nonComp)) return;\n    } else if (parentKey === \"exported\") {\n      if (is(\"ExportSpecifier\", parent)) return;\n    } else if (parentKey === \"imported\") {\n      if (is(\"ImportSpecifier\", parent, { imported: node })) return;\n    } else if (parentKey === \"meta\") {\n      if (is(\"MetaProperty\", parent, { meta: node })) return;\n    }\n\n    if (\n      // Ideally we should call isStrictReservedWord if this node is a descendant\n      // of a block in strict mode. Also, we should pass the inModule option so\n      // we can disable \"await\" in module.\n      (isKeyword(node.name) || isReservedWord(node.name, false)) &&\n      // Even if \"this\" is a keyword, we are using the Identifier\n      // node to represent it.\n      node.name !== \"this\"\n    ) {\n      throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n    }\n  },\n});\n\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    alternate: {\n      optional: true,\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: assertValueType(\"number\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"boolean\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: assertValueType(\"string\"),\n    },\n    flags: {\n      validate: chain(\n        assertValueType(\"string\"),\n        Object.assign(\n          function (node, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            const invalid = /[^gimsuy]/.exec(val);\n            if (invalid) {\n              throw new TypeError(`\"${invalid[0]}\" is not a valid RegExp flag`);\n            }\n          } as Validator,\n          { type: \"string\" },\n        ),\n      ),\n      default: \"\",\n    },\n  },\n});\n\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...LOGICAL_OPERATORS),\n    },\n    left: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"MemberExpression\", {\n  builder: [\n    \"object\",\n    \"property\",\n    \"computed\",\n    ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"optional\"] : []),\n  ],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\", \"Super\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\", \"PrivateName\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (\n          node: t.MemberExpression,\n          key,\n          val,\n        ) {\n          const validator: Validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    ...(!process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertOneOf(true, false),\n            optional: true,\n          },\n        }\n      : {}),\n  },\n});\n\ndefineType(\"NewExpression\", { inherits: \"CallExpression\" });\n\ndefineType(\"Program\", {\n  // Note: We explicitly leave 'interpreter' out here because it is\n  // conceptually comment-like, and Babel does not traverse comments either.\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceFile: {\n      validate: assertValueType(\"string\"),\n    },\n    sourceType: {\n      validate: assertOneOf(\"script\", \"module\"),\n      default: \"script\",\n    },\n    interpreter: {\n      validate: assertNodeType(\"InterpreterDirective\"),\n      default: null,\n      optional: true,\n    },\n    directives: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Directive\")),\n      ),\n      default: [],\n    },\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"],\n});\n\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"ObjectMethod\", \"ObjectProperty\", \"SpreadElement\"),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n      ...(!process.env.BABEL_TYPES_8_BREAKING ? { default: \"method\" } : {}),\n    },\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (node: t.ObjectMethod, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\n          \"Expression\",\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        ];\n        return validator;\n      })(),\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  aliases: [\n    \"UserWhitespacable\",\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"ObjectMember\",\n  ],\n});\n\ndefineType(\"ObjectProperty\", {\n  builder: [\n    \"key\",\n    \"value\",\n    \"computed\",\n    \"shorthand\",\n    ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"decorators\"] : []),\n  ],\n  fields: {\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"DecimalLiteral\",\n          \"PrivateName\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          {\n            // todo(ts): can be discriminated union by `computed` property\n            oneOfNodeTypes: [\n              \"Expression\",\n              \"Identifier\",\n              \"StringLiteral\",\n              \"NumericLiteral\",\n              \"BigIntLiteral\",\n              \"DecimalLiteral\",\n              \"PrivateName\",\n            ],\n          },\n        );\n        return validator;\n      })(),\n    },\n    value: {\n      // Value may be PatternLike if this is an AssignmentProperty\n      // https://github.com/babel/babylon/issues/434\n      validate: assertNodeType(\"Expression\", \"PatternLike\"),\n    },\n    shorthand: {\n      validate: chain(\n        assertValueType(\"boolean\"),\n        Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (val && node.computed) {\n              throw new TypeError(\n                \"Property shorthand of ObjectProperty cannot be true if computed is true\",\n              );\n            }\n          } as Validator,\n          { type: \"boolean\" },\n        ),\n        function (node: t.ObjectProperty, key, val) {\n          if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n          if (val && !is(\"Identifier\", node.key)) {\n            throw new TypeError(\n              \"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\",\n            );\n          }\n        } as Validator,\n      ),\n      default: false,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate: (function () {\n    const pattern = assertNodeType(\n      \"Identifier\",\n      \"Pattern\",\n      \"TSAsExpression\",\n      \"TSNonNullExpression\",\n      \"TSTypeAssertion\",\n    );\n    const expression = assertNodeType(\"Expression\");\n\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      const validator = is(\"ObjectPattern\", parent) ? pattern : expression;\n      validator(node, \"value\", node.value);\n    };\n  })(),\n});\n\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: {\n    ...patternLikeCommon(),\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"LVal\")\n        : assertNodeType(\n            \"Identifier\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"MemberExpression\",\n            \"TSAsExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n    // For Flow\n    optional: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n  validate(parent: t.ArrayPattern | t.ObjectPattern, key) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    const match = /(\\w+)\\[(\\d+)\\]/.exec(key);\n    if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n\n    const [, listKey, index] = match as unknown as [\n      string,\n      keyof typeof parent,\n      string,\n    ];\n    if ((parent[listKey] as t.Node[]).length > +index + 1) {\n      throw new TypeError(`RestElement must be last element of ${listKey}`);\n    }\n  },\n});\n\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Expression\")),\n      ),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    consequent: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    cases: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"SwitchCase\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ThisExpression\", {\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate: chain(\n        assertNodeType(\"BlockStatement\"),\n        Object.assign(\n          function (node: t.TryStatement) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            // This validator isn't put at the top level because we can run it\n            // even if this node doesn't have a parent.\n\n            if (!node.handler && !node.finalizer) {\n              throw new TypeError(\n                \"TryStatement expects either a handler or finalizer, or both\",\n              );\n            }\n          } as Validator,\n          {\n            oneOfNodeTypes: [\"BlockStatement\"],\n          },\n        ),\n      ),\n    },\n    handler: {\n      optional: true,\n      validate: assertNodeType(\"CatchClause\"),\n    },\n    finalizer: {\n      optional: true,\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true,\n    },\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UNARY_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"],\n});\n\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false,\n    },\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"Expression\")\n        : assertNodeType(\"Identifier\", \"MemberExpression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UPDATE_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    kind: {\n      validate: assertOneOf(\"var\", \"let\", \"const\"),\n    },\n    declarations: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"VariableDeclarator\")),\n      ),\n    },\n  },\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    if (!is(\"ForXStatement\", parent, { left: node })) return;\n    if (node.declarations.length !== 1) {\n      throw new TypeError(\n        `Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`,\n      );\n    }\n  },\n});\n\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertNodeType(\"LVal\");\n        }\n\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n        );\n        const without = assertNodeType(\"Identifier\");\n\n        return function (node: t.VariableDeclarator, key, val) {\n          const validator = node.init ? normal : without;\n          validator(node, key, val);\n        };\n      })(),\n    },\n    definite: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    init: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\n// --- ES2015 ---\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\" /* for legacy param decorators */],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    left: {\n      validate: assertNodeType(\n        \"Identifier\",\n        \"ObjectPattern\",\n        \"ArrayPattern\",\n        \"MemberExpression\",\n        \"TSAsExpression\",\n        \"TSTypeAssertion\",\n        \"TSNonNullExpression\",\n      ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    // For TypeScript\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeOrValueType(\"null\", \"PatternLike\", \"LVal\")),\n      ),\n    },\n    // For TypeScript\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    optional: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    expression: {\n      // https://github.com/babel/babylon/issues/505\n      validate: assertValueType(\"boolean\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\", \"Expression\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"ClassMethod\",\n            \"ClassPrivateMethod\",\n            \"ClassProperty\",\n            \"ClassPrivateProperty\",\n            \"ClassAccessorProperty\",\n            \"TSDeclareMethod\",\n            \"TSIndexSignature\",\n            \"StaticBlock\",\n          ),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\n    \"id\",\n    \"body\",\n    \"superClass\",\n    \"mixins\",\n    \"typeParameters\",\n    \"superTypeParameters\",\n    \"implements\",\n    \"decorators\",\n  ],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      // In declarations, this is missing if this is the\n      // child of an ExportDefaultDeclaration.\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    superTypeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"TSExpressionWithTypeArguments\", \"ClassImplements\"),\n        ),\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    superTypeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"TSExpressionWithTypeArguments\", \"ClassImplements\"),\n        ),\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    abstract: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n  validate: (function () {\n    const identifier = assertNodeType(\"Identifier\");\n\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      if (!is(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  })(),\n});\n\ndefineType(\"ExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ModuleDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ModuleDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      validate: assertNodeType(\n        \"TSDeclareFunction\",\n        \"FunctionDeclaration\",\n        \"ClassDeclaration\",\n        \"Expression\",\n      ),\n    },\n    exportKind: validateOptional(assertOneOf(\"value\")),\n  },\n});\n\ndefineType(\"ExportNamedDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ModuleDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      optional: true,\n      validate: chain(\n        assertNodeType(\"Declaration\"),\n        Object.assign(\n          function (node: t.ExportNamedDeclaration, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            // This validator isn't put at the top level because we can run it\n            // even if this node doesn't have a parent.\n\n            if (val && node.specifiers.length) {\n              throw new TypeError(\n                \"Only declaration or specifiers is allowed on ExportNamedDeclaration\",\n              );\n            }\n          } as Validator,\n          { oneOfNodeTypes: [\"Declaration\"] },\n        ),\n        function (node: t.ExportNamedDeclaration, key, val) {\n          if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n          // This validator isn't put at the top level because we can run it\n          // even if this node doesn't have a parent.\n\n          if (val && node.source) {\n            throw new TypeError(\"Cannot export a declaration from a source\");\n          }\n        },\n      ),\n    },\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    specifiers: {\n      default: [],\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          (function () {\n            const sourced = assertNodeType(\n              \"ExportSpecifier\",\n              \"ExportDefaultSpecifier\",\n              \"ExportNamespaceSpecifier\",\n            );\n            const sourceless = assertNodeType(\"ExportSpecifier\");\n\n            if (!process.env.BABEL_TYPES_8_BREAKING) return sourced;\n\n            return function (node: t.ExportNamedDeclaration, key, val) {\n              const validator = node.source ? sourced : sourceless;\n              validator(node, key, val);\n            } as Validator;\n          })(),\n        ),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n      optional: true,\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    exported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    exportKind: {\n      // And TypeScript's \"export { type foo } from\"\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertNodeType(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = assertNodeType(\"VariableDeclaration\");\n        const lval = assertNodeType(\n          \"Identifier\",\n          \"MemberExpression\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n          \"TSAsExpression\",\n          \"TSTypeAssertion\",\n          \"TSNonNullExpression\",\n        );\n\n        return function (node, key, val) {\n          if (is(\"VariableDeclaration\", val)) {\n            declaration(node, key, val);\n          } else {\n            lval(node, key, val);\n          }\n        };\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    await: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ImportDeclaration\", {\n  visitor: [\"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\n  fields: {\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    specifiers: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"ImportSpecifier\",\n            \"ImportDefaultSpecifier\",\n            \"ImportNamespaceSpecifier\",\n          ),\n        ),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    importKind: {\n      // Handle TypeScript/Flowtype's extension \"import type foo from\"\n      // TypeScript doesn't support typeof\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    imported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    importKind: {\n      // Handle Flowtype's extension \"import {typeof foo} from\"\n      // And TypeScript's \"import { type foo } from\"\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate: chain(\n        assertNodeType(\"Identifier\"),\n        Object.assign(\n          function (node: t.MetaProperty, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            let property;\n            switch (val.name) {\n              case \"function\":\n                property = \"sent\";\n                break;\n              case \"new\":\n                property = \"target\";\n                break;\n              case \"import\":\n                property = \"meta\";\n                break;\n            }\n            if (!is(\"Identifier\", node.property, { name: property })) {\n              throw new TypeError(\"Unrecognised MetaProperty\");\n            }\n          } as Validator,\n          { oneOfNodeTypes: [\"Identifier\"] },\n        ),\n      ),\n    },\n    property: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\nexport const classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  accessibility: {\n    validate: assertOneOf(\"public\", \"private\", \"protected\"),\n    optional: true,\n  },\n  static: {\n    default: false,\n  },\n  override: {\n    default: false,\n  },\n  computed: {\n    default: false,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  key: {\n    validate: chain(\n      (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        return function (node: any, key: string, val: any) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      })(),\n      assertNodeType(\n        \"Identifier\",\n        \"StringLiteral\",\n        \"NumericLiteral\",\n        \"BigIntLiteral\",\n        \"Expression\",\n      ),\n    ),\n  },\n});\n\nexport const classMethodOrDeclareMethodCommon = () => ({\n  ...functionCommon(),\n  ...classMethodOrPropertyCommon(),\n  params: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(\n        assertNodeType(\n          \"Identifier\",\n          \"Pattern\",\n          \"RestElement\",\n          \"TSParameterProperty\",\n        ),\n      ),\n    ),\n  },\n  kind: {\n    validate: assertOneOf(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\",\n  },\n  access: {\n    validate: chain(\n      assertValueType(\"string\"),\n      assertOneOf(\"public\", \"private\", \"protected\"),\n    ),\n    optional: true,\n  },\n  decorators: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Decorator\")),\n    ),\n    optional: true,\n  },\n});\n\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\n    \"kind\",\n    \"key\",\n    \"params\",\n    \"body\",\n    \"computed\",\n    \"static\",\n    \"generator\",\n    \"async\",\n  ],\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"ObjectPattern\", {\n  visitor: [\n    \"properties\",\n    \"typeAnnotation\",\n    \"decorators\" /* for legacy param decorators */,\n  ],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"RestElement\", \"ObjectProperty\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\n  \"Super\",\n  process.env.BABEL_8_BREAKING\n    ? undefined\n    : {\n        aliases: [\"Expression\"],\n      },\n);\n\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\", \"typeParameters\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    quasi: {\n      validate: assertNodeType(\"TemplateLiteral\"),\n    },\n    typeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: chain(\n        assertShape({\n          raw: {\n            validate: assertValueType(\"string\"),\n          },\n          cooked: {\n            validate: assertValueType(\"string\"),\n            optional: true,\n          },\n        }),\n        function templateElementCookedValidator(node: t.TemplateElement) {\n          const raw = node.value.raw;\n\n          let str,\n            containsInvalid,\n            unterminatedCalled = false;\n          try {\n            const error = () => {\n              throw new Error();\n            };\n            ({ str, containsInvalid } = readStringContents(\n              \"template\",\n              raw,\n              0,\n              0,\n              0,\n              {\n                unterminated() {\n                  unterminatedCalled = true;\n                },\n                strictNumericEscape: error,\n                invalidEscapeSequence: error,\n                numericSeparatorInEscapeSequence: error,\n                unexpectedNumericSeparator: error,\n                invalidDigit: error,\n                invalidCodePoint: error,\n              },\n            ));\n          } catch {\n            // TODO: When https://github.com/babel/babel/issues/14775 is fixed\n            // we can remove the try/catch block.\n            unterminatedCalled = true;\n            containsInvalid = true;\n          }\n          if (!unterminatedCalled) throw new Error(\"Invalid raw\");\n\n          node.value.cooked = containsInvalid ? null : str;\n        },\n      ),\n    },\n    tail: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TemplateElement\")),\n      ),\n    },\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            // For TypeScript template literal types\n            \"TSType\",\n          ),\n        ),\n        function (node: t.TemplateLiteral, key, val) {\n          if (node.quasis.length !== val.length + 1) {\n            throw new TypeError(\n              `Number of ${\n                node.type\n              } quasis should be exactly one more than the number of expressions.\\nExpected ${\n                val.length + 1\n              } quasis but got ${node.quasis.length}`,\n            );\n          }\n        } as Validator,\n      ),\n    },\n  },\n});\n\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: chain(\n        assertValueType(\"boolean\"),\n        Object.assign(\n          function (node: t.YieldExpression, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (val && !node.argument) {\n              throw new TypeError(\n                \"Property delegate of YieldExpression cannot be true if there is no argument\",\n              );\n            }\n          } as Validator,\n          { type: \"boolean\" },\n        ),\n      ),\n      default: false,\n    },\n    argument: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2017 ---\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2019 ---\ndefineType(\"Import\", {\n  aliases: [\"Expression\"],\n});\n\n// --- ES2020 ---\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.OptionalMemberExpression, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `computed` property\n          { oneOfNodeTypes: [\"Expression\", \"Identifier\"] },\n        );\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertValueType(\"boolean\")\n        : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n  },\n});\n\ndefineType(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    arguments: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            \"SpreadElement\",\n            \"JSXNamespacedName\",\n            \"ArgumentPlaceholder\",\n          ),\n        ),\n      ),\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertValueType(\"boolean\")\n        : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n    typeArguments: {\n      validate: assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n      optional: true,\n    },\n  },\n});\n\n// --- ES2022 ---\ndefineType(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    key: {\n      validate: chain(\n        (function () {\n          const normal = assertNodeType(\n            \"Identifier\",\n            \"StringLiteral\",\n            \"NumericLiteral\",\n            \"BigIntLiteral\",\n            \"PrivateName\",\n          );\n          const computed = assertNodeType(\"Expression\");\n\n          return function (node: any, key: string, val: any) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          };\n        })(),\n        assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"Expression\",\n          \"PrivateName\",\n        ),\n      ),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\", \"typeAnnotation\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    static: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  aliases: [\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"Private\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\", \"method\"),\n      default: \"method\",\n    },\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"],\n});\n", "import {\n  defineAliasedType,\n  arrayOfType,\n  assertOneOf,\n  assertValueType,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils\";\n\nconst defineType = defineAliasedType(\"Flow\");\n\nconst defineInterfaceishType = (\n  name: \"DeclareClass\" | \"DeclareInterface\" | \"InterfaceDeclaration\",\n) => {\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\n      \"id\",\n      \"typeParameters\",\n      \"extends\",\n      \"mixins\",\n      \"implements\",\n      \"body\",\n    ],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: validateType(\"Identifier\"),\n      typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n      extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n      mixins: validateOptional(arrayOfType(\"InterfaceExtends\")),\n      implements: validateOptional(arrayOfType(\"ClassImplements\")),\n      body: validateType(\"ObjectTypeAnnotation\"),\n    },\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareClass\");\n\ndefineType(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    predicate: validateOptionalType(\"DeclaredPredicate\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareInterface\");\n\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    body: validateType(\"BlockStatement\"),\n    kind: validateOptional(assertOneOf(\"CommonJS\", \"ES\")),\n  },\n});\n\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateOptionalType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: validateOptionalType(\"Flow\"),\n    specifiers: validateOptional(\n      arrayOfType([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"]),\n    ),\n    source: validateOptionalType(\"StringLiteral\"),\n    default: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: validateType(\"StringLiteral\"),\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: validateType(\"Flow\"),\n  },\n});\n\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"],\n});\n\ndefineType(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    params: validate(arrayOfType(\"FunctionTypeParam\")),\n    rest: validateOptionalType(\"FunctionTypeParam\"),\n    this: validateOptionalType(\"FunctionTypeParam\"),\n    returnType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: validateOptionalType(\"Identifier\"),\n    typeAnnotation: validateType(\"FlowType\"),\n    optional: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"],\n});\n\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"InterfaceDeclaration\");\n\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n    body: validateType(\"ObjectTypeAnnotation\"),\n  },\n});\n\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"number\")),\n  },\n});\n\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\n    \"properties\",\n    \"indexers\",\n    \"callProperties\",\n    \"internalSlots\",\n    \"exact\",\n  ],\n  fields: {\n    properties: validate(\n      arrayOfType([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"]),\n    ),\n    indexers: {\n      validate: arrayOfType(\"ObjectTypeIndexer\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    callProperties: {\n      validate: arrayOfType(\"ObjectTypeCallProperty\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    internalSlots: {\n      validate: arrayOfType(\"ObjectTypeInternalSlot\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    exact: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    // If the inexact flag is present then this is an object type, and not a\n    // declare class, declare interface, or interface. If it is true, the\n    // object uses ... to express that it is inexact.\n    inexact: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    value: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n    static: validate(assertValueType(\"boolean\")),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateOptionalType(\"Identifier\"),\n    key: validateType(\"FlowType\"),\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: validateType([\"Identifier\", \"StringLiteral\"]),\n    value: validateType(\"FlowType\"),\n    kind: validate(assertOneOf(\"init\", \"get\", \"set\")),\n    static: validate(assertValueType(\"boolean\")),\n    proto: validate(assertValueType(\"boolean\")),\n    optional: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    qualification: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n  },\n});\n\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"string\")),\n  },\n});\n\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: validate(assertValueType(\"string\")),\n    bound: validateOptionalType(\"TypeAnnotation\"),\n    default: validateOptionalType(\"FlowType\"),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"TypeParameter\")),\n  },\n});\n\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: validate(assertOneOf(\"minus\", \"plus\")),\n  },\n});\n\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\n// Enums\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    body: validateType([\n      \"EnumBooleanBody\",\n      \"EnumNumberBody\",\n      \"EnumStringBody\",\n      \"EnumSymbolBody\",\n    ]),\n  },\n});\n\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumBooleanMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumNumberMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType([\"EnumStringMember\", \"EnumDefaultedMember\"]),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"EnumDefaultedMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"BooleanLiteral\"),\n  },\n});\n\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"NumericLiteral\"),\n  },\n});\n\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n  },\n});\n", "import {\n  defineAliasedType,\n  assertNodeType,\n  assertValueType,\n  chain,\n  assertEach,\n} from \"./utils\";\n\nconst defineType = defineAliasedType(\"JSX\");\n\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\", \"JSXNamespacedName\"),\n    },\n    value: {\n      optional: true,\n      validate: assertNodeType(\n        \"JSXElement\",\n        \"JSXFragment\",\n        \"StringLiteral\",\n        \"JSXExpressionContainer\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXElement\", {\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"openingElement\", \"closingElement\", \"children\"]\n    : [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: assertNodeType(\"JSXOpeningElement\"),\n    },\n    closingElement: {\n      optional: true,\n      validate: assertNodeType(\"JSXClosingElement\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          selfClosing: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXEmptyExpression\", {});\n\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\", \"JSXEmptyExpression\"),\n    },\n  },\n});\n\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"JSXMemberExpression\", \"JSXIdentifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n    selfClosing: {\n      default: false,\n    },\n    attributes: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"JSXAttribute\", \"JSXSpreadAttribute\")),\n      ),\n    },\n    typeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: assertNodeType(\"JSXOpeningFragment\"),\n    },\n    closingFragment: {\n      validate: assertNodeType(\"JSXClosingFragment\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"],\n});\n\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"],\n});\n", "import { ALIAS_KEYS } from \"./utils\";\n\nexport const PLACEHOLDERS = [\n  \"Identifier\",\n  \"StringLiteral\",\n  \"Expression\",\n  \"Statement\",\n  \"Declaration\",\n  \"BlockStatement\",\n  \"ClassBody\",\n  \"Pattern\",\n] as const;\n\nexport const PLACEHOLDERS_ALIAS: Record<string, string[]> = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"],\n};\n\nfor (const type of PLACEHOLDERS) {\n  const alias = ALIAS_KEYS[type];\n  if (alias?.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nexport const PLACEHOLDERS_FLIPPED_ALIAS: Record<string, string[]> = {};\n\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});\n", "import {\n  defineAliasedType,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n} from \"./utils\";\nimport { PLACEHOLDERS } from \"./placeholders\";\n\nconst defineType = defineAliasedType(\"Miscellaneous\");\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"Noop\", {\n    visitor: [],\n  });\n}\n\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  // aliases: [], defined in placeholders.js\n  fields: {\n    name: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    expectedNode: {\n      validate: assertOneOf(...PLACEHOLDERS),\n    },\n  },\n});\n\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n", "import defineType, {\n  assertEach,\n  assertNodeType,\n  assertValueType,\n  chain,\n} from \"./utils\";\n\ndefineType(\"ArgumentPlaceholder\", {});\n\ndefineType(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING\n    ? {\n        object: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n        callee: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n      }\n    : {\n        object: {\n          validate: assertNodeType(\"Expression\"),\n        },\n        callee: {\n          validate: assertNodeType(\"Expression\"),\n        },\n      },\n});\n\ndefineType(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    value: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n  },\n});\n\ndefineType(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    async: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ObjectProperty\", \"SpreadElement\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Expression\", \"SpreadElement\")),\n      ),\n      default: [],\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\n// https://github.com/tc39/proposal-js-module-blocks\ndefineType(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"Program\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-hack-pipes\ndefineType(\"TopicReference\", {\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-smart-pipes\ndefineType(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"],\n});\n", "import {\n  defineAliasedType,\n  arrayOfType,\n  assertEach,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n  chain,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils\";\nimport {\n  functionDeclarationCommon,\n  classMethodOrDeclareMethodCommon,\n} from \"./core\";\nimport is from \"../validators/is\";\n\nconst defineType = defineAliasedType(\"TypeScript\");\n\nconst bool = assertValueType(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeAnnotation\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeParameterDeclaration\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true,\n  },\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"], // TODO: This isn't usable in general as an LVal. Should have a \"Parameter\" alias.\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: assertOneOf(\"public\", \"private\", \"protected\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    parameter: {\n      validate: assertNodeType(\"Identifier\", \"AssignmentPattern\"),\n    },\n    override: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: validateType(\"TSEntityName\"),\n    right: validateType(\"Identifier\"),\n  },\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n  [process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\"]: validateArrayOfType(\n    [\"Identifier\", \"RestElement\"],\n  ),\n  [process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\"]:\n    validateOptionalType(\"TSTypeAnnotation\"),\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: signatureDeclarationCommon(),\n};\n\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\n  \"TSConstructSignatureDeclaration\",\n  callConstructSignatureDeclaration,\n);\n\nconst namedTypeElementCommon = () => ({\n  key: validateType(\"Expression\"),\n  computed: { default: false },\n  optional: validateOptional(bool),\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\", \"initializer\"],\n  fields: {\n    ...namedTypeElementCommon(),\n    readonly: validateOptional(bool),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    initializer: validateOptionalType(\"Expression\"),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"key\",\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: {\n    ...signatureDeclarationCommon(),\n    ...namedTypeElementCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: validateOptional(bool),\n    static: validateOptional(bool),\n    parameters: validateArrayOfType(\"Identifier\"), // Length must be 1\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n  },\n});\n\nconst tsKeywordTypes = [\n  \"TSAnyKeyword\",\n  \"TSBooleanKeyword\",\n  \"TSBigIntKeyword\",\n  \"TSIntrinsicKeyword\",\n  \"TSNeverKeyword\",\n  \"TSNullKeyword\",\n  \"TSNumberKeyword\",\n  \"TSObjectKeyword\",\n  \"TSStringKeyword\",\n  \"TSSymbolKeyword\",\n  \"TSUndefinedKeyword\",\n  \"TSUnknownKeyword\",\n  \"TSVoidKeyword\",\n] as const;\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {},\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {},\n});\n\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n};\n\ndefineType(\"TSFunctionType\", {\n  ...fnOrCtrBase,\n  fields: signatureDeclarationCommon(),\n});\ndefineType(\"TSConstructorType\", {\n  ...fnOrCtrBase,\n  fields: {\n    ...signatureDeclarationCommon(),\n    abstract: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeName\", \"typeParameters\"],\n  fields: {\n    typeName: validateType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: validateType([\"Identifier\", \"TSThisType\"]),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    asserts: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\"exprName\", \"typeParameters\"],\n  fields: {\n    exprName: validateType([\"TSEntityName\", \"TSImportType\"]),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: validateArrayOfType([\"TSType\", \"TSNamedTupleMember\"]),\n  },\n});\n\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: validateType(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false,\n    },\n    elementType: validateType(\"TSType\"),\n  },\n});\n\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: validateArrayOfType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\n\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: validateType(\"TSType\"),\n    extendsType: validateType(\"TSType\"),\n    trueType: validateType(\"TSType\"),\n    falseType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: validateType(\"TSTypeParameter\"),\n  },\n});\n\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: validate(assertValueType(\"string\")),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: validateType(\"TSType\"),\n    indexType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    readonly: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeParameter: validateType(\"TSTypeParameter\"),\n    optional: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeAnnotation: validateOptionalType(\"TSType\"),\n    nameType: validateOptionalType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: (function () {\n        const unaryExpression = assertNodeType(\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const unaryOperator = assertOneOf(\"-\");\n\n        const literal = assertNodeType(\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n        );\n        function validator(parent: any, key: string, node: any) {\n          // type A = -1 | 1;\n          if (is(\"UnaryExpression\", node)) {\n            // check operator first\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            // type A = 'foo' | 'bar' | false | 1;\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n          \"UnaryExpression\",\n        ];\n\n        return validator;\n      })(),\n    },\n  },\n});\n\ndefineType(\"TSExpressionWithTypeArguments\", {\n  aliases: [\"TSType\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSInterfaceDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    extends: validateOptional(arrayOfType(\"TSExpressionWithTypeArguments\")),\n    body: validateType(\"TSInterfaceBody\"),\n  },\n});\n\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSAsExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"members\"],\n  fields: {\n    declare: validateOptional(bool),\n    const: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    members: validateArrayOfType(\"TSEnumMember\"),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    global: validateOptional(bool),\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    body: validateType([\"TSModuleBlock\", \"TSModuleDeclaration\"]),\n  },\n});\n\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"Statement\"),\n  },\n});\n\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"argument\", \"qualifier\", \"typeParameters\"],\n  fields: {\n    argument: validateType(\"StringLiteral\"),\n    qualifier: validateOptionalType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    isExport: validate(bool),\n    id: validateType(\"Identifier\"),\n    moduleReference: validateType([\n      \"TSEntityName\",\n      \"TSExternalModuleReference\",\n    ]),\n    importKind: {\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: assertNodeType(\"TSType\"),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSType\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSTypeParameter\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: !process.env.BABEL_8_BREAKING\n        ? assertValueType(\"string\")\n        : assertNodeType(\"Identifier\"),\n    },\n    in: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    out: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    constraint: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n    default: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n  },\n});\n", "import toFastProperties from \"to-fast-properties\";\nimport \"./core\";\nimport \"./flow\";\nimport \"./jsx\";\nimport \"./misc\";\nimport \"./experimental\";\nimport \"./typescript\";\nimport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n} from \"./utils\";\nimport {\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n} from \"./placeholders\";\n\n// We do this here, because at this point the visitor keys should be ready and setup\ntoFastProperties(VISITOR_KEYS);\ntoFastProperties(ALIAS_KEYS);\ntoFastProperties(FLIPPED_ALIAS_KEYS);\ntoFastProperties(NODE_FIELDS);\ntoFastProperties(BUILDER_KEYS);\ntoFastProperties(DEPRECATED_KEYS);\n\ntoFastProperties(PLACEHOLDERS_ALIAS);\ntoFastProperties(PLACEHOLDERS_FLIPPED_ALIAS);\n\nconst TYPES: Array<string> = [].concat(\n  Object.keys(VISITOR_KEYS),\n  Object.keys(FLIPPED_ALIAS_KEYS),\n  Object.keys(DEPRECATED_KEYS),\n);\n\nexport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n  TYPES,\n};\n\nexport type { FieldOptions } from \"./utils\";\n", "import {\n  NODE_FIELDS,\n  NODE_PARENT_VALIDATIONS,\n  type FieldOptions,\n} from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function validate(\n  node: t.Node | undefined | null,\n  key: string,\n  val: any,\n): void {\n  if (!node) return;\n\n  const fields = NODE_FIELDS[node.type];\n  if (!fields) return;\n\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nexport function validateField(\n  node: t.Node | undefined | null,\n  key: string,\n  val: any,\n  field: FieldOptions | undefined | null,\n): void {\n  if (!field?.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n}\n\nexport function validateChild(\n  node: t.Node | undefined | null,\n  key: string,\n  val?: t.Node | undefined | null,\n) {\n  if (val == null) return;\n  const validate = NODE_PARENT_VALIDATIONS[val.type];\n  if (!validate) return;\n  validate(node, key, val);\n}\n", "import validate from \"../validators/validate\";\nimport type * as t from \"..\";\nimport { BUILDER_KEYS } from \"..\";\n\nexport default function validateNode<N extends t.Node>(node: N) {\n  // todo: because keys not in BUILDER_KEYS are not validated - this actually allows invalid nodes in some cases\n  const keys = BUILDER_KEYS[node.type] as (keyof N & string)[];\n  for (const key of keys) {\n    validate(node, key, node[key]);\n  }\n  return node;\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport validateNode from \"../validateNode\";\nimport type * as t from \"../..\";\nexport function arrayExpression(\n  elements: Array<null | t.Expression | t.SpreadElement> = [],\n): t.ArrayExpression {\n  return validateNode<t.ArrayExpression>({\n    type: \"ArrayExpression\",\n    elements,\n  });\n}\nexport function assignmentExpression(\n  operator: string,\n  left: t.LVal,\n  right: t.Expression,\n): t.AssignmentExpression {\n  return validateNode<t.AssignmentExpression>({\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function binaryExpression(\n  operator:\n    | \"+\"\n    | \"-\"\n    | \"/\"\n    | \"%\"\n    | \"*\"\n    | \"**\"\n    | \"&\"\n    | \"|\"\n    | \">>\"\n    | \">>>\"\n    | \"<<\"\n    | \"^\"\n    | \"==\"\n    | \"===\"\n    | \"!=\"\n    | \"!==\"\n    | \"in\"\n    | \"instanceof\"\n    | \">\"\n    | \"<\"\n    | \">=\"\n    | \"<=\"\n    | \"|>\",\n  left: t.Expression | t.PrivateName,\n  right: t.Expression,\n): t.BinaryExpression {\n  return validateNode<t.BinaryExpression>({\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function interpreterDirective(value: string): t.InterpreterDirective {\n  return validateNode<t.InterpreterDirective>({\n    type: \"InterpreterDirective\",\n    value,\n  });\n}\nexport function directive(value: t.DirectiveLiteral): t.Directive {\n  return validateNode<t.Directive>({\n    type: \"Directive\",\n    value,\n  });\n}\nexport function directiveLiteral(value: string): t.DirectiveLiteral {\n  return validateNode<t.DirectiveLiteral>({\n    type: \"DirectiveLiteral\",\n    value,\n  });\n}\nexport function blockStatement(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n): t.BlockStatement {\n  return validateNode<t.BlockStatement>({\n    type: \"BlockStatement\",\n    body,\n    directives,\n  });\n}\nexport function breakStatement(\n  label: t.Identifier | null = null,\n): t.BreakStatement {\n  return validateNode<t.BreakStatement>({\n    type: \"BreakStatement\",\n    label,\n  });\n}\nexport function callExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n): t.CallExpression {\n  return validateNode<t.CallExpression>({\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments,\n  });\n}\nexport function catchClause(\n  param:\n    | t.Identifier\n    | t.ArrayPattern\n    | t.ObjectPattern\n    | null\n    | undefined = null,\n  body: t.BlockStatement,\n): t.CatchClause {\n  return validateNode<t.CatchClause>({\n    type: \"CatchClause\",\n    param,\n    body,\n  });\n}\nexport function conditionalExpression(\n  test: t.Expression,\n  consequent: t.Expression,\n  alternate: t.Expression,\n): t.ConditionalExpression {\n  return validateNode<t.ConditionalExpression>({\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate,\n  });\n}\nexport function continueStatement(\n  label: t.Identifier | null = null,\n): t.ContinueStatement {\n  return validateNode<t.ContinueStatement>({\n    type: \"ContinueStatement\",\n    label,\n  });\n}\nexport function debuggerStatement(): t.DebuggerStatement {\n  return {\n    type: \"DebuggerStatement\",\n  };\n}\nexport function doWhileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.DoWhileStatement {\n  return validateNode<t.DoWhileStatement>({\n    type: \"DoWhileStatement\",\n    test,\n    body,\n  });\n}\nexport function emptyStatement(): t.EmptyStatement {\n  return {\n    type: \"EmptyStatement\",\n  };\n}\nexport function expressionStatement(\n  expression: t.Expression,\n): t.ExpressionStatement {\n  return validateNode<t.ExpressionStatement>({\n    type: \"ExpressionStatement\",\n    expression,\n  });\n}\nexport function file(\n  program: t.Program,\n  comments: Array<t.CommentBlock | t.CommentLine> | null = null,\n  tokens: Array<any> | null = null,\n): t.File {\n  return validateNode<t.File>({\n    type: \"File\",\n    program,\n    comments,\n    tokens,\n  });\n}\nexport function forInStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n): t.ForInStatement {\n  return validateNode<t.ForInStatement>({\n    type: \"ForInStatement\",\n    left,\n    right,\n    body,\n  });\n}\nexport function forStatement(\n  init: t.VariableDeclaration | t.Expression | null | undefined = null,\n  test: t.Expression | null | undefined = null,\n  update: t.Expression | null | undefined = null,\n  body: t.Statement,\n): t.ForStatement {\n  return validateNode<t.ForStatement>({\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body,\n  });\n}\nexport function functionDeclaration(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionDeclaration {\n  return validateNode<t.FunctionDeclaration>({\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  });\n}\nexport function functionExpression(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionExpression {\n  return validateNode<t.FunctionExpression>({\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  });\n}\nexport function identifier(name: string): t.Identifier {\n  return validateNode<t.Identifier>({\n    type: \"Identifier\",\n    name,\n  });\n}\nexport function ifStatement(\n  test: t.Expression,\n  consequent: t.Statement,\n  alternate: t.Statement | null = null,\n): t.IfStatement {\n  return validateNode<t.IfStatement>({\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate,\n  });\n}\nexport function labeledStatement(\n  label: t.Identifier,\n  body: t.Statement,\n): t.LabeledStatement {\n  return validateNode<t.LabeledStatement>({\n    type: \"LabeledStatement\",\n    label,\n    body,\n  });\n}\nexport function stringLiteral(value: string): t.StringLiteral {\n  return validateNode<t.StringLiteral>({\n    type: \"StringLiteral\",\n    value,\n  });\n}\nexport function numericLiteral(value: number): t.NumericLiteral {\n  return validateNode<t.NumericLiteral>({\n    type: \"NumericLiteral\",\n    value,\n  });\n}\nexport function nullLiteral(): t.NullLiteral {\n  return {\n    type: \"NullLiteral\",\n  };\n}\nexport function booleanLiteral(value: boolean): t.BooleanLiteral {\n  return validateNode<t.BooleanLiteral>({\n    type: \"BooleanLiteral\",\n    value,\n  });\n}\nexport function regExpLiteral(\n  pattern: string,\n  flags: string = \"\",\n): t.RegExpLiteral {\n  return validateNode<t.RegExpLiteral>({\n    type: \"RegExpLiteral\",\n    pattern,\n    flags,\n  });\n}\nexport function logicalExpression(\n  operator: \"||\" | \"&&\" | \"??\",\n  left: t.Expression,\n  right: t.Expression,\n): t.LogicalExpression {\n  return validateNode<t.LogicalExpression>({\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function memberExpression(\n  object: t.Expression | t.Super,\n  property: t.Expression | t.Identifier | t.PrivateName,\n  computed: boolean = false,\n  optional: true | false | null = null,\n): t.MemberExpression {\n  return validateNode<t.MemberExpression>({\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  });\n}\nexport function newExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n): t.NewExpression {\n  return validateNode<t.NewExpression>({\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments,\n  });\n}\nexport function program(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n  sourceType: \"script\" | \"module\" = \"script\",\n  interpreter: t.InterpreterDirective | null = null,\n): t.Program {\n  return validateNode<t.Program>({\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n    sourceFile: null,\n  });\n}\nexport function objectExpression(\n  properties: Array<t.ObjectMethod | t.ObjectProperty | t.SpreadElement>,\n): t.ObjectExpression {\n  return validateNode<t.ObjectExpression>({\n    type: \"ObjectExpression\",\n    properties,\n  });\n}\nexport function objectMethod(\n  kind: \"method\" | \"get\" | \"set\" | undefined = \"method\",\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ObjectMethod {\n  return validateNode<t.ObjectMethod>({\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async,\n  });\n}\nexport function objectProperty(\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.DecimalLiteral\n    | t.PrivateName,\n  value: t.Expression | t.PatternLike,\n  computed: boolean = false,\n  shorthand: boolean = false,\n  decorators: Array<t.Decorator> | null = null,\n): t.ObjectProperty {\n  return validateNode<t.ObjectProperty>({\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators,\n  });\n}\nexport function restElement(argument: t.LVal): t.RestElement {\n  return validateNode<t.RestElement>({\n    type: \"RestElement\",\n    argument,\n  });\n}\nexport function returnStatement(\n  argument: t.Expression | null = null,\n): t.ReturnStatement {\n  return validateNode<t.ReturnStatement>({\n    type: \"ReturnStatement\",\n    argument,\n  });\n}\nexport function sequenceExpression(\n  expressions: Array<t.Expression>,\n): t.SequenceExpression {\n  return validateNode<t.SequenceExpression>({\n    type: \"SequenceExpression\",\n    expressions,\n  });\n}\nexport function parenthesizedExpression(\n  expression: t.Expression,\n): t.ParenthesizedExpression {\n  return validateNode<t.ParenthesizedExpression>({\n    type: \"ParenthesizedExpression\",\n    expression,\n  });\n}\nexport function switchCase(\n  test: t.Expression | null | undefined = null,\n  consequent: Array<t.Statement>,\n): t.SwitchCase {\n  return validateNode<t.SwitchCase>({\n    type: \"SwitchCase\",\n    test,\n    consequent,\n  });\n}\nexport function switchStatement(\n  discriminant: t.Expression,\n  cases: Array<t.SwitchCase>,\n): t.SwitchStatement {\n  return validateNode<t.SwitchStatement>({\n    type: \"SwitchStatement\",\n    discriminant,\n    cases,\n  });\n}\nexport function thisExpression(): t.ThisExpression {\n  return {\n    type: \"ThisExpression\",\n  };\n}\nexport function throwStatement(argument: t.Expression): t.ThrowStatement {\n  return validateNode<t.ThrowStatement>({\n    type: \"ThrowStatement\",\n    argument,\n  });\n}\nexport function tryStatement(\n  block: t.BlockStatement,\n  handler: t.CatchClause | null = null,\n  finalizer: t.BlockStatement | null = null,\n): t.TryStatement {\n  return validateNode<t.TryStatement>({\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer,\n  });\n}\nexport function unaryExpression(\n  operator: \"void\" | \"throw\" | \"delete\" | \"!\" | \"+\" | \"-\" | \"~\" | \"typeof\",\n  argument: t.Expression,\n  prefix: boolean = true,\n): t.UnaryExpression {\n  return validateNode<t.UnaryExpression>({\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix,\n  });\n}\nexport function updateExpression(\n  operator: \"++\" | \"--\",\n  argument: t.Expression,\n  prefix: boolean = false,\n): t.UpdateExpression {\n  return validateNode<t.UpdateExpression>({\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix,\n  });\n}\nexport function variableDeclaration(\n  kind: \"var\" | \"let\" | \"const\",\n  declarations: Array<t.VariableDeclarator>,\n): t.VariableDeclaration {\n  return validateNode<t.VariableDeclaration>({\n    type: \"VariableDeclaration\",\n    kind,\n    declarations,\n  });\n}\nexport function variableDeclarator(\n  id: t.LVal,\n  init: t.Expression | null = null,\n): t.VariableDeclarator {\n  return validateNode<t.VariableDeclarator>({\n    type: \"VariableDeclarator\",\n    id,\n    init,\n  });\n}\nexport function whileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.WhileStatement {\n  return validateNode<t.WhileStatement>({\n    type: \"WhileStatement\",\n    test,\n    body,\n  });\n}\nexport function withStatement(\n  object: t.Expression,\n  body: t.Statement,\n): t.WithStatement {\n  return validateNode<t.WithStatement>({\n    type: \"WithStatement\",\n    object,\n    body,\n  });\n}\nexport function assignmentPattern(\n  left:\n    | t.Identifier\n    | t.ObjectPattern\n    | t.ArrayPattern\n    | t.MemberExpression\n    | t.TSAsExpression\n    | t.TSTypeAssertion\n    | t.TSNonNullExpression,\n  right: t.Expression,\n): t.AssignmentPattern {\n  return validateNode<t.AssignmentPattern>({\n    type: \"AssignmentPattern\",\n    left,\n    right,\n  });\n}\nexport function arrayPattern(\n  elements: Array<null | t.PatternLike | t.LVal>,\n): t.ArrayPattern {\n  return validateNode<t.ArrayPattern>({\n    type: \"ArrayPattern\",\n    elements,\n  });\n}\nexport function arrowFunctionExpression(\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement | t.Expression,\n  async: boolean = false,\n): t.ArrowFunctionExpression {\n  return validateNode<t.ArrowFunctionExpression>({\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null,\n  });\n}\nexport function classBody(\n  body: Array<\n    | t.ClassMethod\n    | t.ClassPrivateMethod\n    | t.ClassProperty\n    | t.ClassPrivateProperty\n    | t.ClassAccessorProperty\n    | t.TSDeclareMethod\n    | t.TSIndexSignature\n    | t.StaticBlock\n  >,\n): t.ClassBody {\n  return validateNode<t.ClassBody>({\n    type: \"ClassBody\",\n    body,\n  });\n}\nexport function classExpression(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassExpression {\n  return validateNode<t.ClassExpression>({\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators,\n  });\n}\nexport function classDeclaration(\n  id: t.Identifier,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassDeclaration {\n  return validateNode<t.ClassDeclaration>({\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators,\n  });\n}\nexport function exportAllDeclaration(\n  source: t.StringLiteral,\n): t.ExportAllDeclaration {\n  return validateNode<t.ExportAllDeclaration>({\n    type: \"ExportAllDeclaration\",\n    source,\n  });\n}\nexport function exportDefaultDeclaration(\n  declaration:\n    | t.TSDeclareFunction\n    | t.FunctionDeclaration\n    | t.ClassDeclaration\n    | t.Expression,\n): t.ExportDefaultDeclaration {\n  return validateNode<t.ExportDefaultDeclaration>({\n    type: \"ExportDefaultDeclaration\",\n    declaration,\n  });\n}\nexport function exportNamedDeclaration(\n  declaration: t.Declaration | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportDefaultSpecifier | t.ExportNamespaceSpecifier\n  > = [],\n  source: t.StringLiteral | null = null,\n): t.ExportNamedDeclaration {\n  return validateNode<t.ExportNamedDeclaration>({\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  });\n}\nexport function exportSpecifier(\n  local: t.Identifier,\n  exported: t.Identifier | t.StringLiteral,\n): t.ExportSpecifier {\n  return validateNode<t.ExportSpecifier>({\n    type: \"ExportSpecifier\",\n    local,\n    exported,\n  });\n}\nexport function forOfStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n  _await: boolean = false,\n): t.ForOfStatement {\n  return validateNode<t.ForOfStatement>({\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await,\n  });\n}\nexport function importDeclaration(\n  specifiers: Array<\n    t.ImportSpecifier | t.ImportDefaultSpecifier | t.ImportNamespaceSpecifier\n  >,\n  source: t.StringLiteral,\n): t.ImportDeclaration {\n  return validateNode<t.ImportDeclaration>({\n    type: \"ImportDeclaration\",\n    specifiers,\n    source,\n  });\n}\nexport function importDefaultSpecifier(\n  local: t.Identifier,\n): t.ImportDefaultSpecifier {\n  return validateNode<t.ImportDefaultSpecifier>({\n    type: \"ImportDefaultSpecifier\",\n    local,\n  });\n}\nexport function importNamespaceSpecifier(\n  local: t.Identifier,\n): t.ImportNamespaceSpecifier {\n  return validateNode<t.ImportNamespaceSpecifier>({\n    type: \"ImportNamespaceSpecifier\",\n    local,\n  });\n}\nexport function importSpecifier(\n  local: t.Identifier,\n  imported: t.Identifier | t.StringLiteral,\n): t.ImportSpecifier {\n  return validateNode<t.ImportSpecifier>({\n    type: \"ImportSpecifier\",\n    local,\n    imported,\n  });\n}\nexport function metaProperty(\n  meta: t.Identifier,\n  property: t.Identifier,\n): t.MetaProperty {\n  return validateNode<t.MetaProperty>({\n    type: \"MetaProperty\",\n    meta,\n    property,\n  });\n}\nexport function classMethod(\n  kind: \"get\" | \"set\" | \"method\" | \"constructor\" | undefined = \"method\",\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  _static: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ClassMethod {\n  return validateNode<t.ClassMethod>({\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async,\n  });\n}\nexport function objectPattern(\n  properties: Array<t.RestElement | t.ObjectProperty>,\n): t.ObjectPattern {\n  return validateNode<t.ObjectPattern>({\n    type: \"ObjectPattern\",\n    properties,\n  });\n}\nexport function spreadElement(argument: t.Expression): t.SpreadElement {\n  return validateNode<t.SpreadElement>({\n    type: \"SpreadElement\",\n    argument,\n  });\n}\nfunction _super(): t.Super {\n  return {\n    type: \"Super\",\n  };\n}\nexport { _super as super };\nexport function taggedTemplateExpression(\n  tag: t.Expression,\n  quasi: t.TemplateLiteral,\n): t.TaggedTemplateExpression {\n  return validateNode<t.TaggedTemplateExpression>({\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi,\n  });\n}\nexport function templateElement(\n  value: { raw: string; cooked?: string },\n  tail: boolean = false,\n): t.TemplateElement {\n  return validateNode<t.TemplateElement>({\n    type: \"TemplateElement\",\n    value,\n    tail,\n  });\n}\nexport function templateLiteral(\n  quasis: Array<t.TemplateElement>,\n  expressions: Array<t.Expression | t.TSType>,\n): t.TemplateLiteral {\n  return validateNode<t.TemplateLiteral>({\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions,\n  });\n}\nexport function yieldExpression(\n  argument: t.Expression | null = null,\n  delegate: boolean = false,\n): t.YieldExpression {\n  return validateNode<t.YieldExpression>({\n    type: \"YieldExpression\",\n    argument,\n    delegate,\n  });\n}\nexport function awaitExpression(argument: t.Expression): t.AwaitExpression {\n  return validateNode<t.AwaitExpression>({\n    type: \"AwaitExpression\",\n    argument,\n  });\n}\nfunction _import(): t.Import {\n  return {\n    type: \"Import\",\n  };\n}\nexport { _import as import };\nexport function bigIntLiteral(value: string): t.BigIntLiteral {\n  return validateNode<t.BigIntLiteral>({\n    type: \"BigIntLiteral\",\n    value,\n  });\n}\nexport function exportNamespaceSpecifier(\n  exported: t.Identifier,\n): t.ExportNamespaceSpecifier {\n  return validateNode<t.ExportNamespaceSpecifier>({\n    type: \"ExportNamespaceSpecifier\",\n    exported,\n  });\n}\nexport function optionalMemberExpression(\n  object: t.Expression,\n  property: t.Expression | t.Identifier,\n  computed: boolean | undefined = false,\n  optional: boolean,\n): t.OptionalMemberExpression {\n  return validateNode<t.OptionalMemberExpression>({\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  });\n}\nexport function optionalCallExpression(\n  callee: t.Expression,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n  optional: boolean,\n): t.OptionalCallExpression {\n  return validateNode<t.OptionalCallExpression>({\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional,\n  });\n}\nexport function classProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassProperty {\n  return validateNode<t.ClassProperty>({\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  });\n}\nexport function classAccessorProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression\n    | t.PrivateName,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassAccessorProperty {\n  return validateNode<t.ClassAccessorProperty>({\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  });\n}\nexport function classPrivateProperty(\n  key: t.PrivateName,\n  value: t.Expression | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  _static: boolean = false,\n): t.ClassPrivateProperty {\n  return validateNode<t.ClassPrivateProperty>({\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static,\n  });\n}\nexport function classPrivateMethod(\n  kind: \"get\" | \"set\" | \"method\" | undefined = \"method\",\n  key: t.PrivateName,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  _static: boolean = false,\n): t.ClassPrivateMethod {\n  return validateNode<t.ClassPrivateMethod>({\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static,\n  });\n}\nexport function privateName(id: t.Identifier): t.PrivateName {\n  return validateNode<t.PrivateName>({\n    type: \"PrivateName\",\n    id,\n  });\n}\nexport function staticBlock(body: Array<t.Statement>): t.StaticBlock {\n  return validateNode<t.StaticBlock>({\n    type: \"StaticBlock\",\n    body,\n  });\n}\nexport function anyTypeAnnotation(): t.AnyTypeAnnotation {\n  return {\n    type: \"AnyTypeAnnotation\",\n  };\n}\nexport function arrayTypeAnnotation(\n  elementType: t.FlowType,\n): t.ArrayTypeAnnotation {\n  return validateNode<t.ArrayTypeAnnotation>({\n    type: \"ArrayTypeAnnotation\",\n    elementType,\n  });\n}\nexport function booleanTypeAnnotation(): t.BooleanTypeAnnotation {\n  return {\n    type: \"BooleanTypeAnnotation\",\n  };\n}\nexport function booleanLiteralTypeAnnotation(\n  value: boolean,\n): t.BooleanLiteralTypeAnnotation {\n  return validateNode<t.BooleanLiteralTypeAnnotation>({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function nullLiteralTypeAnnotation(): t.NullLiteralTypeAnnotation {\n  return {\n    type: \"NullLiteralTypeAnnotation\",\n  };\n}\nexport function classImplements(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.ClassImplements {\n  return validateNode<t.ClassImplements>({\n    type: \"ClassImplements\",\n    id,\n    typeParameters,\n  });\n}\nexport function declareClass(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareClass {\n  return validateNode<t.DeclareClass>({\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function declareFunction(id: t.Identifier): t.DeclareFunction {\n  return validateNode<t.DeclareFunction>({\n    type: \"DeclareFunction\",\n    id,\n  });\n}\nexport function declareInterface(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareInterface {\n  return validateNode<t.DeclareInterface>({\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function declareModule(\n  id: t.Identifier | t.StringLiteral,\n  body: t.BlockStatement,\n  kind: \"CommonJS\" | \"ES\" | null = null,\n): t.DeclareModule {\n  return validateNode<t.DeclareModule>({\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind,\n  });\n}\nexport function declareModuleExports(\n  typeAnnotation: t.TypeAnnotation,\n): t.DeclareModuleExports {\n  return validateNode<t.DeclareModuleExports>({\n    type: \"DeclareModuleExports\",\n    typeAnnotation,\n  });\n}\nexport function declareTypeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.DeclareTypeAlias {\n  return validateNode<t.DeclareTypeAlias>({\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right,\n  });\n}\nexport function declareOpaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null = null,\n  supertype: t.FlowType | null = null,\n): t.DeclareOpaqueType {\n  return validateNode<t.DeclareOpaqueType>({\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n  });\n}\nexport function declareVariable(id: t.Identifier): t.DeclareVariable {\n  return validateNode<t.DeclareVariable>({\n    type: \"DeclareVariable\",\n    id,\n  });\n}\nexport function declareExportDeclaration(\n  declaration: t.Flow | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportNamespaceSpecifier\n  > | null = null,\n  source: t.StringLiteral | null = null,\n): t.DeclareExportDeclaration {\n  return validateNode<t.DeclareExportDeclaration>({\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  });\n}\nexport function declareExportAllDeclaration(\n  source: t.StringLiteral,\n): t.DeclareExportAllDeclaration {\n  return validateNode<t.DeclareExportAllDeclaration>({\n    type: \"DeclareExportAllDeclaration\",\n    source,\n  });\n}\nexport function declaredPredicate(value: t.Flow): t.DeclaredPredicate {\n  return validateNode<t.DeclaredPredicate>({\n    type: \"DeclaredPredicate\",\n    value,\n  });\n}\nexport function existsTypeAnnotation(): t.ExistsTypeAnnotation {\n  return {\n    type: \"ExistsTypeAnnotation\",\n  };\n}\nexport function functionTypeAnnotation(\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  params: Array<t.FunctionTypeParam>,\n  rest: t.FunctionTypeParam | null | undefined = null,\n  returnType: t.FlowType,\n): t.FunctionTypeAnnotation {\n  return validateNode<t.FunctionTypeAnnotation>({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType,\n  });\n}\nexport function functionTypeParam(\n  name: t.Identifier | null | undefined = null,\n  typeAnnotation: t.FlowType,\n): t.FunctionTypeParam {\n  return validateNode<t.FunctionTypeParam>({\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation,\n  });\n}\nexport function genericTypeAnnotation(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.GenericTypeAnnotation {\n  return validateNode<t.GenericTypeAnnotation>({\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters,\n  });\n}\nexport function inferredPredicate(): t.InferredPredicate {\n  return {\n    type: \"InferredPredicate\",\n  };\n}\nexport function interfaceExtends(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.InterfaceExtends {\n  return validateNode<t.InterfaceExtends>({\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters,\n  });\n}\nexport function interfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceDeclaration {\n  return validateNode<t.InterfaceDeclaration>({\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function interfaceTypeAnnotation(\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceTypeAnnotation {\n  return validateNode<t.InterfaceTypeAnnotation>({\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body,\n  });\n}\nexport function intersectionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.IntersectionTypeAnnotation {\n  return validateNode<t.IntersectionTypeAnnotation>({\n    type: \"IntersectionTypeAnnotation\",\n    types,\n  });\n}\nexport function mixedTypeAnnotation(): t.MixedTypeAnnotation {\n  return {\n    type: \"MixedTypeAnnotation\",\n  };\n}\nexport function emptyTypeAnnotation(): t.EmptyTypeAnnotation {\n  return {\n    type: \"EmptyTypeAnnotation\",\n  };\n}\nexport function nullableTypeAnnotation(\n  typeAnnotation: t.FlowType,\n): t.NullableTypeAnnotation {\n  return validateNode<t.NullableTypeAnnotation>({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport function numberLiteralTypeAnnotation(\n  value: number,\n): t.NumberLiteralTypeAnnotation {\n  return validateNode<t.NumberLiteralTypeAnnotation>({\n    type: \"NumberLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function numberTypeAnnotation(): t.NumberTypeAnnotation {\n  return {\n    type: \"NumberTypeAnnotation\",\n  };\n}\nexport function objectTypeAnnotation(\n  properties: Array<t.ObjectTypeProperty | t.ObjectTypeSpreadProperty>,\n  indexers: Array<t.ObjectTypeIndexer> = [],\n  callProperties: Array<t.ObjectTypeCallProperty> = [],\n  internalSlots: Array<t.ObjectTypeInternalSlot> = [],\n  exact: boolean = false,\n): t.ObjectTypeAnnotation {\n  return validateNode<t.ObjectTypeAnnotation>({\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact,\n  });\n}\nexport function objectTypeInternalSlot(\n  id: t.Identifier,\n  value: t.FlowType,\n  optional: boolean,\n  _static: boolean,\n  method: boolean,\n): t.ObjectTypeInternalSlot {\n  return validateNode<t.ObjectTypeInternalSlot>({\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method,\n  });\n}\nexport function objectTypeCallProperty(\n  value: t.FlowType,\n): t.ObjectTypeCallProperty {\n  return validateNode<t.ObjectTypeCallProperty>({\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null,\n  });\n}\nexport function objectTypeIndexer(\n  id: t.Identifier | null | undefined = null,\n  key: t.FlowType,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeIndexer {\n  return validateNode<t.ObjectTypeIndexer>({\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null,\n  });\n}\nexport function objectTypeProperty(\n  key: t.Identifier | t.StringLiteral,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeProperty {\n  return validateNode<t.ObjectTypeProperty>({\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null,\n  });\n}\nexport function objectTypeSpreadProperty(\n  argument: t.FlowType,\n): t.ObjectTypeSpreadProperty {\n  return validateNode<t.ObjectTypeSpreadProperty>({\n    type: \"ObjectTypeSpreadProperty\",\n    argument,\n  });\n}\nexport function opaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  supertype: t.FlowType | null | undefined = null,\n  impltype: t.FlowType,\n): t.OpaqueType {\n  return validateNode<t.OpaqueType>({\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype,\n  });\n}\nexport function qualifiedTypeIdentifier(\n  id: t.Identifier,\n  qualification: t.Identifier | t.QualifiedTypeIdentifier,\n): t.QualifiedTypeIdentifier {\n  return validateNode<t.QualifiedTypeIdentifier>({\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification,\n  });\n}\nexport function stringLiteralTypeAnnotation(\n  value: string,\n): t.StringLiteralTypeAnnotation {\n  return validateNode<t.StringLiteralTypeAnnotation>({\n    type: \"StringLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function stringTypeAnnotation(): t.StringTypeAnnotation {\n  return {\n    type: \"StringTypeAnnotation\",\n  };\n}\nexport function symbolTypeAnnotation(): t.SymbolTypeAnnotation {\n  return {\n    type: \"SymbolTypeAnnotation\",\n  };\n}\nexport function thisTypeAnnotation(): t.ThisTypeAnnotation {\n  return {\n    type: \"ThisTypeAnnotation\",\n  };\n}\nexport function tupleTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.TupleTypeAnnotation {\n  return validateNode<t.TupleTypeAnnotation>({\n    type: \"TupleTypeAnnotation\",\n    types,\n  });\n}\nexport function typeofTypeAnnotation(\n  argument: t.FlowType,\n): t.TypeofTypeAnnotation {\n  return validateNode<t.TypeofTypeAnnotation>({\n    type: \"TypeofTypeAnnotation\",\n    argument,\n  });\n}\nexport function typeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.TypeAlias {\n  return validateNode<t.TypeAlias>({\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right,\n  });\n}\nexport function typeAnnotation(typeAnnotation: t.FlowType): t.TypeAnnotation {\n  return validateNode<t.TypeAnnotation>({\n    type: \"TypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport function typeCastExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TypeAnnotation,\n): t.TypeCastExpression {\n  return validateNode<t.TypeCastExpression>({\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport function typeParameter(\n  bound: t.TypeAnnotation | null = null,\n  _default: t.FlowType | null = null,\n  variance: t.Variance | null = null,\n): t.TypeParameter {\n  return validateNode<t.TypeParameter>({\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null,\n  });\n}\nexport function typeParameterDeclaration(\n  params: Array<t.TypeParameter>,\n): t.TypeParameterDeclaration {\n  return validateNode<t.TypeParameterDeclaration>({\n    type: \"TypeParameterDeclaration\",\n    params,\n  });\n}\nexport function typeParameterInstantiation(\n  params: Array<t.FlowType>,\n): t.TypeParameterInstantiation {\n  return validateNode<t.TypeParameterInstantiation>({\n    type: \"TypeParameterInstantiation\",\n    params,\n  });\n}\nexport function unionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.UnionTypeAnnotation {\n  return validateNode<t.UnionTypeAnnotation>({\n    type: \"UnionTypeAnnotation\",\n    types,\n  });\n}\nexport function variance(kind: \"minus\" | \"plus\"): t.Variance {\n  return validateNode<t.Variance>({\n    type: \"Variance\",\n    kind,\n  });\n}\nexport function voidTypeAnnotation(): t.VoidTypeAnnotation {\n  return {\n    type: \"VoidTypeAnnotation\",\n  };\n}\nexport function enumDeclaration(\n  id: t.Identifier,\n  body:\n    | t.EnumBooleanBody\n    | t.EnumNumberBody\n    | t.EnumStringBody\n    | t.EnumSymbolBody,\n): t.EnumDeclaration {\n  return validateNode<t.EnumDeclaration>({\n    type: \"EnumDeclaration\",\n    id,\n    body,\n  });\n}\nexport function enumBooleanBody(\n  members: Array<t.EnumBooleanMember>,\n): t.EnumBooleanBody {\n  return validateNode<t.EnumBooleanBody>({\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumNumberBody(\n  members: Array<t.EnumNumberMember>,\n): t.EnumNumberBody {\n  return validateNode<t.EnumNumberBody>({\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumStringBody(\n  members: Array<t.EnumStringMember | t.EnumDefaultedMember>,\n): t.EnumStringBody {\n  return validateNode<t.EnumStringBody>({\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumSymbolBody(\n  members: Array<t.EnumDefaultedMember>,\n): t.EnumSymbolBody {\n  return validateNode<t.EnumSymbolBody>({\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumBooleanMember(id: t.Identifier): t.EnumBooleanMember {\n  return validateNode<t.EnumBooleanMember>({\n    type: \"EnumBooleanMember\",\n    id,\n    init: null,\n  });\n}\nexport function enumNumberMember(\n  id: t.Identifier,\n  init: t.NumericLiteral,\n): t.EnumNumberMember {\n  return validateNode<t.EnumNumberMember>({\n    type: \"EnumNumberMember\",\n    id,\n    init,\n  });\n}\nexport function enumStringMember(\n  id: t.Identifier,\n  init: t.StringLiteral,\n): t.EnumStringMember {\n  return validateNode<t.EnumStringMember>({\n    type: \"EnumStringMember\",\n    id,\n    init,\n  });\n}\nexport function enumDefaultedMember(id: t.Identifier): t.EnumDefaultedMember {\n  return validateNode<t.EnumDefaultedMember>({\n    type: \"EnumDefaultedMember\",\n    id,\n  });\n}\nexport function indexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.IndexedAccessType {\n  return validateNode<t.IndexedAccessType>({\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType,\n  });\n}\nexport function optionalIndexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.OptionalIndexedAccessType {\n  return validateNode<t.OptionalIndexedAccessType>({\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null,\n  });\n}\nexport function jsxAttribute(\n  name: t.JSXIdentifier | t.JSXNamespacedName,\n  value:\n    | t.JSXElement\n    | t.JSXFragment\n    | t.StringLiteral\n    | t.JSXExpressionContainer\n    | null = null,\n): t.JSXAttribute {\n  return validateNode<t.JSXAttribute>({\n    type: \"JSXAttribute\",\n    name,\n    value,\n  });\n}\nexport { jsxAttribute as jSXAttribute };\nexport function jsxClosingElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n): t.JSXClosingElement {\n  return validateNode<t.JSXClosingElement>({\n    type: \"JSXClosingElement\",\n    name,\n  });\n}\nexport { jsxClosingElement as jSXClosingElement };\nexport function jsxElement(\n  openingElement: t.JSXOpeningElement,\n  closingElement: t.JSXClosingElement | null | undefined = null,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n  selfClosing: boolean | null = null,\n): t.JSXElement {\n  return validateNode<t.JSXElement>({\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing,\n  });\n}\nexport { jsxElement as jSXElement };\nexport function jsxEmptyExpression(): t.JSXEmptyExpression {\n  return {\n    type: \"JSXEmptyExpression\",\n  };\n}\nexport { jsxEmptyExpression as jSXEmptyExpression };\nexport function jsxExpressionContainer(\n  expression: t.Expression | t.JSXEmptyExpression,\n): t.JSXExpressionContainer {\n  return validateNode<t.JSXExpressionContainer>({\n    type: \"JSXExpressionContainer\",\n    expression,\n  });\n}\nexport { jsxExpressionContainer as jSXExpressionContainer };\nexport function jsxSpreadChild(expression: t.Expression): t.JSXSpreadChild {\n  return validateNode<t.JSXSpreadChild>({\n    type: \"JSXSpreadChild\",\n    expression,\n  });\n}\nexport { jsxSpreadChild as jSXSpreadChild };\nexport function jsxIdentifier(name: string): t.JSXIdentifier {\n  return validateNode<t.JSXIdentifier>({\n    type: \"JSXIdentifier\",\n    name,\n  });\n}\nexport { jsxIdentifier as jSXIdentifier };\nexport function jsxMemberExpression(\n  object: t.JSXMemberExpression | t.JSXIdentifier,\n  property: t.JSXIdentifier,\n): t.JSXMemberExpression {\n  return validateNode<t.JSXMemberExpression>({\n    type: \"JSXMemberExpression\",\n    object,\n    property,\n  });\n}\nexport { jsxMemberExpression as jSXMemberExpression };\nexport function jsxNamespacedName(\n  namespace: t.JSXIdentifier,\n  name: t.JSXIdentifier,\n): t.JSXNamespacedName {\n  return validateNode<t.JSXNamespacedName>({\n    type: \"JSXNamespacedName\",\n    namespace,\n    name,\n  });\n}\nexport { jsxNamespacedName as jSXNamespacedName };\nexport function jsxOpeningElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n  attributes: Array<t.JSXAttribute | t.JSXSpreadAttribute>,\n  selfClosing: boolean = false,\n): t.JSXOpeningElement {\n  return validateNode<t.JSXOpeningElement>({\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing,\n  });\n}\nexport { jsxOpeningElement as jSXOpeningElement };\nexport function jsxSpreadAttribute(\n  argument: t.Expression,\n): t.JSXSpreadAttribute {\n  return validateNode<t.JSXSpreadAttribute>({\n    type: \"JSXSpreadAttribute\",\n    argument,\n  });\n}\nexport { jsxSpreadAttribute as jSXSpreadAttribute };\nexport function jsxText(value: string): t.JSXText {\n  return validateNode<t.JSXText>({\n    type: \"JSXText\",\n    value,\n  });\n}\nexport { jsxText as jSXText };\nexport function jsxFragment(\n  openingFragment: t.JSXOpeningFragment,\n  closingFragment: t.JSXClosingFragment,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n): t.JSXFragment {\n  return validateNode<t.JSXFragment>({\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children,\n  });\n}\nexport { jsxFragment as jSXFragment };\nexport function jsxOpeningFragment(): t.JSXOpeningFragment {\n  return {\n    type: \"JSXOpeningFragment\",\n  };\n}\nexport { jsxOpeningFragment as jSXOpeningFragment };\nexport function jsxClosingFragment(): t.JSXClosingFragment {\n  return {\n    type: \"JSXClosingFragment\",\n  };\n}\nexport { jsxClosingFragment as jSXClosingFragment };\nexport function noop(): t.Noop {\n  return {\n    type: \"Noop\",\n  };\n}\nexport function placeholder(\n  expectedNode:\n    | \"Identifier\"\n    | \"StringLiteral\"\n    | \"Expression\"\n    | \"Statement\"\n    | \"Declaration\"\n    | \"BlockStatement\"\n    | \"ClassBody\"\n    | \"Pattern\",\n  name: t.Identifier,\n): t.Placeholder {\n  return validateNode<t.Placeholder>({\n    type: \"Placeholder\",\n    expectedNode,\n    name,\n  });\n}\nexport function v8IntrinsicIdentifier(name: string): t.V8IntrinsicIdentifier {\n  return validateNode<t.V8IntrinsicIdentifier>({\n    type: \"V8IntrinsicIdentifier\",\n    name,\n  });\n}\nexport function argumentPlaceholder(): t.ArgumentPlaceholder {\n  return {\n    type: \"ArgumentPlaceholder\",\n  };\n}\nexport function bindExpression(\n  object: t.Expression,\n  callee: t.Expression,\n): t.BindExpression {\n  return validateNode<t.BindExpression>({\n    type: \"BindExpression\",\n    object,\n    callee,\n  });\n}\nexport function importAttribute(\n  key: t.Identifier | t.StringLiteral,\n  value: t.StringLiteral,\n): t.ImportAttribute {\n  return validateNode<t.ImportAttribute>({\n    type: \"ImportAttribute\",\n    key,\n    value,\n  });\n}\nexport function decorator(expression: t.Expression): t.Decorator {\n  return validateNode<t.Decorator>({\n    type: \"Decorator\",\n    expression,\n  });\n}\nexport function doExpression(\n  body: t.BlockStatement,\n  async: boolean = false,\n): t.DoExpression {\n  return validateNode<t.DoExpression>({\n    type: \"DoExpression\",\n    body,\n    async,\n  });\n}\nexport function exportDefaultSpecifier(\n  exported: t.Identifier,\n): t.ExportDefaultSpecifier {\n  return validateNode<t.ExportDefaultSpecifier>({\n    type: \"ExportDefaultSpecifier\",\n    exported,\n  });\n}\nexport function recordExpression(\n  properties: Array<t.ObjectProperty | t.SpreadElement>,\n): t.RecordExpression {\n  return validateNode<t.RecordExpression>({\n    type: \"RecordExpression\",\n    properties,\n  });\n}\nexport function tupleExpression(\n  elements: Array<t.Expression | t.SpreadElement> = [],\n): t.TupleExpression {\n  return validateNode<t.TupleExpression>({\n    type: \"TupleExpression\",\n    elements,\n  });\n}\nexport function decimalLiteral(value: string): t.DecimalLiteral {\n  return validateNode<t.DecimalLiteral>({\n    type: \"DecimalLiteral\",\n    value,\n  });\n}\nexport function moduleExpression(body: t.Program): t.ModuleExpression {\n  return validateNode<t.ModuleExpression>({\n    type: \"ModuleExpression\",\n    body,\n  });\n}\nexport function topicReference(): t.TopicReference {\n  return {\n    type: \"TopicReference\",\n  };\n}\nexport function pipelineTopicExpression(\n  expression: t.Expression,\n): t.PipelineTopicExpression {\n  return validateNode<t.PipelineTopicExpression>({\n    type: \"PipelineTopicExpression\",\n    expression,\n  });\n}\nexport function pipelineBareFunction(\n  callee: t.Expression,\n): t.PipelineBareFunction {\n  return validateNode<t.PipelineBareFunction>({\n    type: \"PipelineBareFunction\",\n    callee,\n  });\n}\nexport function pipelinePrimaryTopicReference(): t.PipelinePrimaryTopicReference {\n  return {\n    type: \"PipelinePrimaryTopicReference\",\n  };\n}\nexport function tsParameterProperty(\n  parameter: t.Identifier | t.AssignmentPattern,\n): t.TSParameterProperty {\n  return validateNode<t.TSParameterProperty>({\n    type: \"TSParameterProperty\",\n    parameter,\n  });\n}\nexport { tsParameterProperty as tSParameterProperty };\nexport function tsDeclareFunction(\n  id: t.Identifier | null | undefined = null,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareFunction {\n  return validateNode<t.TSDeclareFunction>({\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType,\n  });\n}\nexport { tsDeclareFunction as tSDeclareFunction };\nexport function tsDeclareMethod(\n  decorators: Array<t.Decorator> | null | undefined = null,\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareMethod {\n  return validateNode<t.TSDeclareMethod>({\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType,\n  });\n}\nexport { tsDeclareMethod as tSDeclareMethod };\nexport function tsQualifiedName(\n  left: t.TSEntityName,\n  right: t.Identifier,\n): t.TSQualifiedName {\n  return validateNode<t.TSQualifiedName>({\n    type: \"TSQualifiedName\",\n    left,\n    right,\n  });\n}\nexport { tsQualifiedName as tSQualifiedName };\nexport function tsCallSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSCallSignatureDeclaration {\n  return validateNode<t.TSCallSignatureDeclaration>({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsCallSignatureDeclaration as tSCallSignatureDeclaration };\nexport function tsConstructSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructSignatureDeclaration {\n  return validateNode<t.TSConstructSignatureDeclaration>({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsConstructSignatureDeclaration as tSConstructSignatureDeclaration };\nexport function tsPropertySignature(\n  key: t.Expression,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n  initializer: t.Expression | null = null,\n): t.TSPropertySignature {\n  return validateNode<t.TSPropertySignature>({\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n    initializer,\n    kind: null,\n  });\n}\nexport { tsPropertySignature as tSPropertySignature };\nexport function tsMethodSignature(\n  key: t.Expression,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSMethodSignature {\n  return validateNode<t.TSMethodSignature>({\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null,\n  });\n}\nexport { tsMethodSignature as tSMethodSignature };\nexport function tsIndexSignature(\n  parameters: Array<t.Identifier>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSIndexSignature {\n  return validateNode<t.TSIndexSignature>({\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsIndexSignature as tSIndexSignature };\nexport function tsAnyKeyword(): t.TSAnyKeyword {\n  return {\n    type: \"TSAnyKeyword\",\n  };\n}\nexport { tsAnyKeyword as tSAnyKeyword };\nexport function tsBooleanKeyword(): t.TSBooleanKeyword {\n  return {\n    type: \"TSBooleanKeyword\",\n  };\n}\nexport { tsBooleanKeyword as tSBooleanKeyword };\nexport function tsBigIntKeyword(): t.TSBigIntKeyword {\n  return {\n    type: \"TSBigIntKeyword\",\n  };\n}\nexport { tsBigIntKeyword as tSBigIntKeyword };\nexport function tsIntrinsicKeyword(): t.TSIntrinsicKeyword {\n  return {\n    type: \"TSIntrinsicKeyword\",\n  };\n}\nexport { tsIntrinsicKeyword as tSIntrinsicKeyword };\nexport function tsNeverKeyword(): t.TSNeverKeyword {\n  return {\n    type: \"TSNeverKeyword\",\n  };\n}\nexport { tsNeverKeyword as tSNeverKeyword };\nexport function tsNullKeyword(): t.TSNullKeyword {\n  return {\n    type: \"TSNullKeyword\",\n  };\n}\nexport { tsNullKeyword as tSNullKeyword };\nexport function tsNumberKeyword(): t.TSNumberKeyword {\n  return {\n    type: \"TSNumberKeyword\",\n  };\n}\nexport { tsNumberKeyword as tSNumberKeyword };\nexport function tsObjectKeyword(): t.TSObjectKeyword {\n  return {\n    type: \"TSObjectKeyword\",\n  };\n}\nexport { tsObjectKeyword as tSObjectKeyword };\nexport function tsStringKeyword(): t.TSStringKeyword {\n  return {\n    type: \"TSStringKeyword\",\n  };\n}\nexport { tsStringKeyword as tSStringKeyword };\nexport function tsSymbolKeyword(): t.TSSymbolKeyword {\n  return {\n    type: \"TSSymbolKeyword\",\n  };\n}\nexport { tsSymbolKeyword as tSSymbolKeyword };\nexport function tsUndefinedKeyword(): t.TSUndefinedKeyword {\n  return {\n    type: \"TSUndefinedKeyword\",\n  };\n}\nexport { tsUndefinedKeyword as tSUndefinedKeyword };\nexport function tsUnknownKeyword(): t.TSUnknownKeyword {\n  return {\n    type: \"TSUnknownKeyword\",\n  };\n}\nexport { tsUnknownKeyword as tSUnknownKeyword };\nexport function tsVoidKeyword(): t.TSVoidKeyword {\n  return {\n    type: \"TSVoidKeyword\",\n  };\n}\nexport { tsVoidKeyword as tSVoidKeyword };\nexport function tsThisType(): t.TSThisType {\n  return {\n    type: \"TSThisType\",\n  };\n}\nexport { tsThisType as tSThisType };\nexport function tsFunctionType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSFunctionType {\n  return validateNode<t.TSFunctionType>({\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsFunctionType as tSFunctionType };\nexport function tsConstructorType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructorType {\n  return validateNode<t.TSConstructorType>({\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsConstructorType as tSConstructorType };\nexport function tsTypeReference(\n  typeName: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeReference {\n  return validateNode<t.TSTypeReference>({\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters,\n  });\n}\nexport { tsTypeReference as tSTypeReference };\nexport function tsTypePredicate(\n  parameterName: t.Identifier | t.TSThisType,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n  asserts: boolean | null = null,\n): t.TSTypePredicate {\n  return validateNode<t.TSTypePredicate>({\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts,\n  });\n}\nexport { tsTypePredicate as tSTypePredicate };\nexport function tsTypeQuery(\n  exprName: t.TSEntityName | t.TSImportType,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeQuery {\n  return validateNode<t.TSTypeQuery>({\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters,\n  });\n}\nexport { tsTypeQuery as tSTypeQuery };\nexport function tsTypeLiteral(\n  members: Array<t.TSTypeElement>,\n): t.TSTypeLiteral {\n  return validateNode<t.TSTypeLiteral>({\n    type: \"TSTypeLiteral\",\n    members,\n  });\n}\nexport { tsTypeLiteral as tSTypeLiteral };\nexport function tsArrayType(elementType: t.TSType): t.TSArrayType {\n  return validateNode<t.TSArrayType>({\n    type: \"TSArrayType\",\n    elementType,\n  });\n}\nexport { tsArrayType as tSArrayType };\nexport function tsTupleType(\n  elementTypes: Array<t.TSType | t.TSNamedTupleMember>,\n): t.TSTupleType {\n  return validateNode<t.TSTupleType>({\n    type: \"TSTupleType\",\n    elementTypes,\n  });\n}\nexport { tsTupleType as tSTupleType };\nexport function tsOptionalType(typeAnnotation: t.TSType): t.TSOptionalType {\n  return validateNode<t.TSOptionalType>({\n    type: \"TSOptionalType\",\n    typeAnnotation,\n  });\n}\nexport { tsOptionalType as tSOptionalType };\nexport function tsRestType(typeAnnotation: t.TSType): t.TSRestType {\n  return validateNode<t.TSRestType>({\n    type: \"TSRestType\",\n    typeAnnotation,\n  });\n}\nexport { tsRestType as tSRestType };\nexport function tsNamedTupleMember(\n  label: t.Identifier,\n  elementType: t.TSType,\n  optional: boolean = false,\n): t.TSNamedTupleMember {\n  return validateNode<t.TSNamedTupleMember>({\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional,\n  });\n}\nexport { tsNamedTupleMember as tSNamedTupleMember };\nexport function tsUnionType(types: Array<t.TSType>): t.TSUnionType {\n  return validateNode<t.TSUnionType>({\n    type: \"TSUnionType\",\n    types,\n  });\n}\nexport { tsUnionType as tSUnionType };\nexport function tsIntersectionType(\n  types: Array<t.TSType>,\n): t.TSIntersectionType {\n  return validateNode<t.TSIntersectionType>({\n    type: \"TSIntersectionType\",\n    types,\n  });\n}\nexport { tsIntersectionType as tSIntersectionType };\nexport function tsConditionalType(\n  checkType: t.TSType,\n  extendsType: t.TSType,\n  trueType: t.TSType,\n  falseType: t.TSType,\n): t.TSConditionalType {\n  return validateNode<t.TSConditionalType>({\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType,\n  });\n}\nexport { tsConditionalType as tSConditionalType };\nexport function tsInferType(typeParameter: t.TSTypeParameter): t.TSInferType {\n  return validateNode<t.TSInferType>({\n    type: \"TSInferType\",\n    typeParameter,\n  });\n}\nexport { tsInferType as tSInferType };\nexport function tsParenthesizedType(\n  typeAnnotation: t.TSType,\n): t.TSParenthesizedType {\n  return validateNode<t.TSParenthesizedType>({\n    type: \"TSParenthesizedType\",\n    typeAnnotation,\n  });\n}\nexport { tsParenthesizedType as tSParenthesizedType };\nexport function tsTypeOperator(typeAnnotation: t.TSType): t.TSTypeOperator {\n  return validateNode<t.TSTypeOperator>({\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null,\n  });\n}\nexport { tsTypeOperator as tSTypeOperator };\nexport function tsIndexedAccessType(\n  objectType: t.TSType,\n  indexType: t.TSType,\n): t.TSIndexedAccessType {\n  return validateNode<t.TSIndexedAccessType>({\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType,\n  });\n}\nexport { tsIndexedAccessType as tSIndexedAccessType };\nexport function tsMappedType(\n  typeParameter: t.TSTypeParameter,\n  typeAnnotation: t.TSType | null = null,\n  nameType: t.TSType | null = null,\n): t.TSMappedType {\n  return validateNode<t.TSMappedType>({\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType,\n  });\n}\nexport { tsMappedType as tSMappedType };\nexport function tsLiteralType(\n  literal:\n    | t.NumericLiteral\n    | t.StringLiteral\n    | t.BooleanLiteral\n    | t.BigIntLiteral\n    | t.TemplateLiteral\n    | t.UnaryExpression,\n): t.TSLiteralType {\n  return validateNode<t.TSLiteralType>({\n    type: \"TSLiteralType\",\n    literal,\n  });\n}\nexport { tsLiteralType as tSLiteralType };\nexport function tsExpressionWithTypeArguments(\n  expression: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSExpressionWithTypeArguments {\n  return validateNode<t.TSExpressionWithTypeArguments>({\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters,\n  });\n}\nexport { tsExpressionWithTypeArguments as tSExpressionWithTypeArguments };\nexport function tsInterfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.TSExpressionWithTypeArguments> | null | undefined = null,\n  body: t.TSInterfaceBody,\n): t.TSInterfaceDeclaration {\n  return validateNode<t.TSInterfaceDeclaration>({\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport { tsInterfaceDeclaration as tSInterfaceDeclaration };\nexport function tsInterfaceBody(\n  body: Array<t.TSTypeElement>,\n): t.TSInterfaceBody {\n  return validateNode<t.TSInterfaceBody>({\n    type: \"TSInterfaceBody\",\n    body,\n  });\n}\nexport { tsInterfaceBody as tSInterfaceBody };\nexport function tsTypeAliasDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  typeAnnotation: t.TSType,\n): t.TSTypeAliasDeclaration {\n  return validateNode<t.TSTypeAliasDeclaration>({\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation,\n  });\n}\nexport { tsTypeAliasDeclaration as tSTypeAliasDeclaration };\nexport function tsInstantiationExpression(\n  expression: t.Expression,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSInstantiationExpression {\n  return validateNode<t.TSInstantiationExpression>({\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters,\n  });\n}\nexport { tsInstantiationExpression as tSInstantiationExpression };\nexport function tsAsExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSAsExpression {\n  return validateNode<t.TSAsExpression>({\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport { tsAsExpression as tSAsExpression };\nexport function tsTypeAssertion(\n  typeAnnotation: t.TSType,\n  expression: t.Expression,\n): t.TSTypeAssertion {\n  return validateNode<t.TSTypeAssertion>({\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression,\n  });\n}\nexport { tsTypeAssertion as tSTypeAssertion };\nexport function tsEnumDeclaration(\n  id: t.Identifier,\n  members: Array<t.TSEnumMember>,\n): t.TSEnumDeclaration {\n  return validateNode<t.TSEnumDeclaration>({\n    type: \"TSEnumDeclaration\",\n    id,\n    members,\n  });\n}\nexport { tsEnumDeclaration as tSEnumDeclaration };\nexport function tsEnumMember(\n  id: t.Identifier | t.StringLiteral,\n  initializer: t.Expression | null = null,\n): t.TSEnumMember {\n  return validateNode<t.TSEnumMember>({\n    type: \"TSEnumMember\",\n    id,\n    initializer,\n  });\n}\nexport { tsEnumMember as tSEnumMember };\nexport function tsModuleDeclaration(\n  id: t.Identifier | t.StringLiteral,\n  body: t.TSModuleBlock | t.TSModuleDeclaration,\n): t.TSModuleDeclaration {\n  return validateNode<t.TSModuleDeclaration>({\n    type: \"TSModuleDeclaration\",\n    id,\n    body,\n  });\n}\nexport { tsModuleDeclaration as tSModuleDeclaration };\nexport function tsModuleBlock(body: Array<t.Statement>): t.TSModuleBlock {\n  return validateNode<t.TSModuleBlock>({\n    type: \"TSModuleBlock\",\n    body,\n  });\n}\nexport { tsModuleBlock as tSModuleBlock };\nexport function tsImportType(\n  argument: t.StringLiteral,\n  qualifier: t.TSEntityName | null = null,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSImportType {\n  return validateNode<t.TSImportType>({\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters,\n  });\n}\nexport { tsImportType as tSImportType };\nexport function tsImportEqualsDeclaration(\n  id: t.Identifier,\n  moduleReference: t.TSEntityName | t.TSExternalModuleReference,\n): t.TSImportEqualsDeclaration {\n  return validateNode<t.TSImportEqualsDeclaration>({\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null,\n  });\n}\nexport { tsImportEqualsDeclaration as tSImportEqualsDeclaration };\nexport function tsExternalModuleReference(\n  expression: t.StringLiteral,\n): t.TSExternalModuleReference {\n  return validateNode<t.TSExternalModuleReference>({\n    type: \"TSExternalModuleReference\",\n    expression,\n  });\n}\nexport { tsExternalModuleReference as tSExternalModuleReference };\nexport function tsNonNullExpression(\n  expression: t.Expression,\n): t.TSNonNullExpression {\n  return validateNode<t.TSNonNullExpression>({\n    type: \"TSNonNullExpression\",\n    expression,\n  });\n}\nexport { tsNonNullExpression as tSNonNullExpression };\nexport function tsExportAssignment(\n  expression: t.Expression,\n): t.TSExportAssignment {\n  return validateNode<t.TSExportAssignment>({\n    type: \"TSExportAssignment\",\n    expression,\n  });\n}\nexport { tsExportAssignment as tSExportAssignment };\nexport function tsNamespaceExportDeclaration(\n  id: t.Identifier,\n): t.TSNamespaceExportDeclaration {\n  return validateNode<t.TSNamespaceExportDeclaration>({\n    type: \"TSNamespaceExportDeclaration\",\n    id,\n  });\n}\nexport { tsNamespaceExportDeclaration as tSNamespaceExportDeclaration };\nexport function tsTypeAnnotation(typeAnnotation: t.TSType): t.TSTypeAnnotation {\n  return validateNode<t.TSTypeAnnotation>({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport { tsTypeAnnotation as tSTypeAnnotation };\nexport function tsTypeParameterInstantiation(\n  params: Array<t.TSType>,\n): t.TSTypeParameterInstantiation {\n  return validateNode<t.TSTypeParameterInstantiation>({\n    type: \"TSTypeParameterInstantiation\",\n    params,\n  });\n}\nexport { tsTypeParameterInstantiation as tSTypeParameterInstantiation };\nexport function tsTypeParameterDeclaration(\n  params: Array<t.TSTypeParameter>,\n): t.TSTypeParameterDeclaration {\n  return validateNode<t.TSTypeParameterDeclaration>({\n    type: \"TSTypeParameterDeclaration\",\n    params,\n  });\n}\nexport { tsTypeParameterDeclaration as tSTypeParameterDeclaration };\nexport function tsTypeParameter(\n  constraint: t.TSType | null | undefined = null,\n  _default: t.TSType | null | undefined = null,\n  name: string,\n): t.TSTypeParameter {\n  return validateNode<t.TSTypeParameter>({\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name,\n  });\n}\nexport { tsTypeParameter as tSTypeParameter };\n/** @deprecated */\nfunction NumberLiteral(value: number) {\n  console.trace(\n    \"The node type NumberLiteral has been renamed to NumericLiteral\",\n  );\n  return numericLiteral(value);\n}\nexport { NumberLiteral as numberLiteral };\n/** @deprecated */\nfunction RegexLiteral(pattern: string, flags: string = \"\") {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return regExpLiteral(pattern, flags);\n}\nexport { RegexLiteral as regexLiteral };\n/** @deprecated */\nfunction RestProperty(argument: t.LVal) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return restElement(argument);\n}\nexport { RestProperty as restProperty };\n/** @deprecated */\nfunction SpreadProperty(argument: t.Expression) {\n  console.trace(\n    \"The node type SpreadProperty has been renamed to SpreadElement\",\n  );\n  return spreadElement(argument);\n}\nexport { SpreadProperty as spreadProperty };\n", "import { stringLiteral } from \"../../builders/generated\";\nimport type * as t from \"../..\";\n\nexport default function cleanJSXElementLiteralChild(\n  child: {\n    value: string;\n  },\n  args: Array<t.Node>,\n) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n\n    // replace rendered whitespace tabs with spaces\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    // trim whitespace touching a newline\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    // trim whitespace touching an endline\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push(stringLiteral(str));\n}\n", "import {\n  isJSXText,\n  isJSXExpressionContainer,\n  isJSXEmptyExpression,\n} from \"../../validators/generated\";\nimport cleanJSXElementLiteralChild from \"../../utils/react/cleanJSXElementLiteralChild\";\nimport type * as t from \"../..\";\n\ntype ReturnedChild =\n  | t.JSXSpreadChild\n  | t.JSXElement\n  | t.JSXFragment\n  | t.Expression;\n\nexport default function buildChildren(\n  node: t.JSXElement | t.JSXFragment,\n): ReturnedChild[] {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child: any = node.children[i];\n\n    if (isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elements);\n      continue;\n    }\n\n    if (isJSXExpressionContainer(child)) child = child.expression;\n    if (isJSXEmptyExpression(child)) continue;\n\n    elements.push(child);\n  }\n\n  return elements;\n}\n", "import { VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function isNode(node: any): node is t.Node {\n  return !!(node && VISITOR_KEYS[node.type]);\n}\n", "import isNode from \"../validators/isNode\";\nimport type * as t from \"..\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type as any}\"`);\n  }\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport is from \"../../validators/is\";\nimport type * as t from \"../..\";\n\nfunction assert(type: string, node: any, opts?: any): void {\n  if (!is(type, node, opts)) {\n    throw new Error(\n      `Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` +\n        `but instead got \"${node.type}\".`,\n    );\n  }\n}\n\nexport function assertArrayExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayExpression {\n  assert(\"ArrayExpression\", node, opts);\n}\nexport function assertAssignmentExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentExpression {\n  assert(\"AssignmentExpression\", node, opts);\n}\nexport function assertBinaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BinaryExpression {\n  assert(\"BinaryExpression\", node, opts);\n}\nexport function assertInterpreterDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterpreterDirective {\n  assert(\"InterpreterDirective\", node, opts);\n}\nexport function assertDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Directive {\n  assert(\"Directive\", node, opts);\n}\nexport function assertDirectiveLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DirectiveLiteral {\n  assert(\"DirectiveLiteral\", node, opts);\n}\nexport function assertBlockStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockStatement {\n  assert(\"BlockStatement\", node, opts);\n}\nexport function assertBreakStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BreakStatement {\n  assert(\"BreakStatement\", node, opts);\n}\nexport function assertCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CallExpression {\n  assert(\"CallExpression\", node, opts);\n}\nexport function assertCatchClause(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CatchClause {\n  assert(\"CatchClause\", node, opts);\n}\nexport function assertConditionalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ConditionalExpression {\n  assert(\"ConditionalExpression\", node, opts);\n}\nexport function assertContinueStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ContinueStatement {\n  assert(\"ContinueStatement\", node, opts);\n}\nexport function assertDebuggerStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DebuggerStatement {\n  assert(\"DebuggerStatement\", node, opts);\n}\nexport function assertDoWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoWhileStatement {\n  assert(\"DoWhileStatement\", node, opts);\n}\nexport function assertEmptyStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyStatement {\n  assert(\"EmptyStatement\", node, opts);\n}\nexport function assertExpressionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionStatement {\n  assert(\"ExpressionStatement\", node, opts);\n}\nexport function assertFile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.File {\n  assert(\"File\", node, opts);\n}\nexport function assertForInStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForInStatement {\n  assert(\"ForInStatement\", node, opts);\n}\nexport function assertForStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForStatement {\n  assert(\"ForStatement\", node, opts);\n}\nexport function assertFunctionDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionDeclaration {\n  assert(\"FunctionDeclaration\", node, opts);\n}\nexport function assertFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionExpression {\n  assert(\"FunctionExpression\", node, opts);\n}\nexport function assertIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Identifier {\n  assert(\"Identifier\", node, opts);\n}\nexport function assertIfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IfStatement {\n  assert(\"IfStatement\", node, opts);\n}\nexport function assertLabeledStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LabeledStatement {\n  assert(\"LabeledStatement\", node, opts);\n}\nexport function assertStringLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteral {\n  assert(\"StringLiteral\", node, opts);\n}\nexport function assertNumericLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumericLiteral {\n  assert(\"NumericLiteral\", node, opts);\n}\nexport function assertNullLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteral {\n  assert(\"NullLiteral\", node, opts);\n}\nexport function assertBooleanLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteral {\n  assert(\"BooleanLiteral\", node, opts);\n}\nexport function assertRegExpLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RegExpLiteral {\n  assert(\"RegExpLiteral\", node, opts);\n}\nexport function assertLogicalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LogicalExpression {\n  assert(\"LogicalExpression\", node, opts);\n}\nexport function assertMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MemberExpression {\n  assert(\"MemberExpression\", node, opts);\n}\nexport function assertNewExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NewExpression {\n  assert(\"NewExpression\", node, opts);\n}\nexport function assertProgram(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Program {\n  assert(\"Program\", node, opts);\n}\nexport function assertObjectExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectExpression {\n  assert(\"ObjectExpression\", node, opts);\n}\nexport function assertObjectMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMethod {\n  assert(\"ObjectMethod\", node, opts);\n}\nexport function assertObjectProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectProperty {\n  assert(\"ObjectProperty\", node, opts);\n}\nexport function assertRestElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RestElement {\n  assert(\"RestElement\", node, opts);\n}\nexport function assertReturnStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ReturnStatement {\n  assert(\"ReturnStatement\", node, opts);\n}\nexport function assertSequenceExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SequenceExpression {\n  assert(\"SequenceExpression\", node, opts);\n}\nexport function assertParenthesizedExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ParenthesizedExpression {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\nexport function assertSwitchCase(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchCase {\n  assert(\"SwitchCase\", node, opts);\n}\nexport function assertSwitchStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchStatement {\n  assert(\"SwitchStatement\", node, opts);\n}\nexport function assertThisExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisExpression {\n  assert(\"ThisExpression\", node, opts);\n}\nexport function assertThrowStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThrowStatement {\n  assert(\"ThrowStatement\", node, opts);\n}\nexport function assertTryStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TryStatement {\n  assert(\"TryStatement\", node, opts);\n}\nexport function assertUnaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryExpression {\n  assert(\"UnaryExpression\", node, opts);\n}\nexport function assertUpdateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UpdateExpression {\n  assert(\"UpdateExpression\", node, opts);\n}\nexport function assertVariableDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclaration {\n  assert(\"VariableDeclaration\", node, opts);\n}\nexport function assertVariableDeclarator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclarator {\n  assert(\"VariableDeclarator\", node, opts);\n}\nexport function assertWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WhileStatement {\n  assert(\"WhileStatement\", node, opts);\n}\nexport function assertWithStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WithStatement {\n  assert(\"WithStatement\", node, opts);\n}\nexport function assertAssignmentPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentPattern {\n  assert(\"AssignmentPattern\", node, opts);\n}\nexport function assertArrayPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayPattern {\n  assert(\"ArrayPattern\", node, opts);\n}\nexport function assertArrowFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrowFunctionExpression {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\nexport function assertClassBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassBody {\n  assert(\"ClassBody\", node, opts);\n}\nexport function assertClassExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassExpression {\n  assert(\"ClassExpression\", node, opts);\n}\nexport function assertClassDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassDeclaration {\n  assert(\"ClassDeclaration\", node, opts);\n}\nexport function assertExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportAllDeclaration {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\nexport function assertExportDefaultDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultDeclaration {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\nexport function assertExportNamedDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamedDeclaration {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\nexport function assertExportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportSpecifier {\n  assert(\"ExportSpecifier\", node, opts);\n}\nexport function assertForOfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForOfStatement {\n  assert(\"ForOfStatement\", node, opts);\n}\nexport function assertImportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDeclaration {\n  assert(\"ImportDeclaration\", node, opts);\n}\nexport function assertImportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDefaultSpecifier {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\nexport function assertImportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportNamespaceSpecifier {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\nexport function assertImportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportSpecifier {\n  assert(\"ImportSpecifier\", node, opts);\n}\nexport function assertMetaProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MetaProperty {\n  assert(\"MetaProperty\", node, opts);\n}\nexport function assertClassMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassMethod {\n  assert(\"ClassMethod\", node, opts);\n}\nexport function assertObjectPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectPattern {\n  assert(\"ObjectPattern\", node, opts);\n}\nexport function assertSpreadElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SpreadElement {\n  assert(\"SpreadElement\", node, opts);\n}\nexport function assertSuper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Super {\n  assert(\"Super\", node, opts);\n}\nexport function assertTaggedTemplateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TaggedTemplateExpression {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\nexport function assertTemplateElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateElement {\n  assert(\"TemplateElement\", node, opts);\n}\nexport function assertTemplateLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateLiteral {\n  assert(\"TemplateLiteral\", node, opts);\n}\nexport function assertYieldExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.YieldExpression {\n  assert(\"YieldExpression\", node, opts);\n}\nexport function assertAwaitExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AwaitExpression {\n  assert(\"AwaitExpression\", node, opts);\n}\nexport function assertImport(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Import {\n  assert(\"Import\", node, opts);\n}\nexport function assertBigIntLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BigIntLiteral {\n  assert(\"BigIntLiteral\", node, opts);\n}\nexport function assertExportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamespaceSpecifier {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\nexport function assertOptionalMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalMemberExpression {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\nexport function assertOptionalCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalCallExpression {\n  assert(\"OptionalCallExpression\", node, opts);\n}\nexport function assertClassProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassProperty {\n  assert(\"ClassProperty\", node, opts);\n}\nexport function assertClassAccessorProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassAccessorProperty {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\nexport function assertClassPrivateProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateProperty {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\nexport function assertClassPrivateMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateMethod {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\nexport function assertPrivateName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PrivateName {\n  assert(\"PrivateName\", node, opts);\n}\nexport function assertStaticBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StaticBlock {\n  assert(\"StaticBlock\", node, opts);\n}\nexport function assertAnyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AnyTypeAnnotation {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\nexport function assertArrayTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayTypeAnnotation {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\nexport function assertBooleanTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanTypeAnnotation {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\nexport function assertBooleanLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteralTypeAnnotation {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNullLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteralTypeAnnotation {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\nexport function assertClassImplements(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassImplements {\n  assert(\"ClassImplements\", node, opts);\n}\nexport function assertDeclareClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareClass {\n  assert(\"DeclareClass\", node, opts);\n}\nexport function assertDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareFunction {\n  assert(\"DeclareFunction\", node, opts);\n}\nexport function assertDeclareInterface(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareInterface {\n  assert(\"DeclareInterface\", node, opts);\n}\nexport function assertDeclareModule(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModule {\n  assert(\"DeclareModule\", node, opts);\n}\nexport function assertDeclareModuleExports(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModuleExports {\n  assert(\"DeclareModuleExports\", node, opts);\n}\nexport function assertDeclareTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareTypeAlias {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\nexport function assertDeclareOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareOpaqueType {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\nexport function assertDeclareVariable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareVariable {\n  assert(\"DeclareVariable\", node, opts);\n}\nexport function assertDeclareExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportDeclaration {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\nexport function assertDeclareExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportAllDeclaration {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\nexport function assertDeclaredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclaredPredicate {\n  assert(\"DeclaredPredicate\", node, opts);\n}\nexport function assertExistsTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExistsTypeAnnotation {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeAnnotation {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeParam(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeParam {\n  assert(\"FunctionTypeParam\", node, opts);\n}\nexport function assertGenericTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.GenericTypeAnnotation {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\nexport function assertInferredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InferredPredicate {\n  assert(\"InferredPredicate\", node, opts);\n}\nexport function assertInterfaceExtends(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceExtends {\n  assert(\"InterfaceExtends\", node, opts);\n}\nexport function assertInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceDeclaration {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\nexport function assertInterfaceTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceTypeAnnotation {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\nexport function assertIntersectionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IntersectionTypeAnnotation {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\nexport function assertMixedTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MixedTypeAnnotation {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\nexport function assertEmptyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyTypeAnnotation {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\nexport function assertNullableTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullableTypeAnnotation {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\nexport function assertNumberLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberLiteralTypeAnnotation {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNumberTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberTypeAnnotation {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeAnnotation {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeInternalSlot(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeInternalSlot {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\nexport function assertObjectTypeCallProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeCallProperty {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\nexport function assertObjectTypeIndexer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeIndexer {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\nexport function assertObjectTypeProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeProperty {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\nexport function assertObjectTypeSpreadProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeSpreadProperty {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\nexport function assertOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OpaqueType {\n  assert(\"OpaqueType\", node, opts);\n}\nexport function assertQualifiedTypeIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.QualifiedTypeIdentifier {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\nexport function assertStringLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteralTypeAnnotation {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\nexport function assertStringTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringTypeAnnotation {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\nexport function assertSymbolTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SymbolTypeAnnotation {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\nexport function assertThisTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisTypeAnnotation {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\nexport function assertTupleTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleTypeAnnotation {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\nexport function assertTypeofTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeofTypeAnnotation {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\nexport function assertTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAlias {\n  assert(\"TypeAlias\", node, opts);\n}\nexport function assertTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAnnotation {\n  assert(\"TypeAnnotation\", node, opts);\n}\nexport function assertTypeCastExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeCastExpression {\n  assert(\"TypeCastExpression\", node, opts);\n}\nexport function assertTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameter {\n  assert(\"TypeParameter\", node, opts);\n}\nexport function assertTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterDeclaration {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\nexport function assertTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterInstantiation {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\nexport function assertUnionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnionTypeAnnotation {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\nexport function assertVariance(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Variance {\n  assert(\"Variance\", node, opts);\n}\nexport function assertVoidTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VoidTypeAnnotation {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\nexport function assertEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDeclaration {\n  assert(\"EnumDeclaration\", node, opts);\n}\nexport function assertEnumBooleanBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanBody {\n  assert(\"EnumBooleanBody\", node, opts);\n}\nexport function assertEnumNumberBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberBody {\n  assert(\"EnumNumberBody\", node, opts);\n}\nexport function assertEnumStringBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringBody {\n  assert(\"EnumStringBody\", node, opts);\n}\nexport function assertEnumSymbolBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumSymbolBody {\n  assert(\"EnumSymbolBody\", node, opts);\n}\nexport function assertEnumBooleanMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanMember {\n  assert(\"EnumBooleanMember\", node, opts);\n}\nexport function assertEnumNumberMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberMember {\n  assert(\"EnumNumberMember\", node, opts);\n}\nexport function assertEnumStringMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringMember {\n  assert(\"EnumStringMember\", node, opts);\n}\nexport function assertEnumDefaultedMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDefaultedMember {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\nexport function assertIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IndexedAccessType {\n  assert(\"IndexedAccessType\", node, opts);\n}\nexport function assertOptionalIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalIndexedAccessType {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\nexport function assertJSXAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXAttribute {\n  assert(\"JSXAttribute\", node, opts);\n}\nexport function assertJSXClosingElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingElement {\n  assert(\"JSXClosingElement\", node, opts);\n}\nexport function assertJSXElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXElement {\n  assert(\"JSXElement\", node, opts);\n}\nexport function assertJSXEmptyExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXEmptyExpression {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\nexport function assertJSXExpressionContainer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXExpressionContainer {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\nexport function assertJSXSpreadChild(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadChild {\n  assert(\"JSXSpreadChild\", node, opts);\n}\nexport function assertJSXIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXIdentifier {\n  assert(\"JSXIdentifier\", node, opts);\n}\nexport function assertJSXMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXMemberExpression {\n  assert(\"JSXMemberExpression\", node, opts);\n}\nexport function assertJSXNamespacedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXNamespacedName {\n  assert(\"JSXNamespacedName\", node, opts);\n}\nexport function assertJSXOpeningElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningElement {\n  assert(\"JSXOpeningElement\", node, opts);\n}\nexport function assertJSXSpreadAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadAttribute {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\nexport function assertJSXText(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXText {\n  assert(\"JSXText\", node, opts);\n}\nexport function assertJSXFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXFragment {\n  assert(\"JSXFragment\", node, opts);\n}\nexport function assertJSXOpeningFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningFragment {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\nexport function assertJSXClosingFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingFragment {\n  assert(\"JSXClosingFragment\", node, opts);\n}\nexport function assertNoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Noop {\n  assert(\"Noop\", node, opts);\n}\nexport function assertPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Placeholder {\n  assert(\"Placeholder\", node, opts);\n}\nexport function assertV8IntrinsicIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.V8IntrinsicIdentifier {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\nexport function assertArgumentPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArgumentPlaceholder {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\nexport function assertBindExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BindExpression {\n  assert(\"BindExpression\", node, opts);\n}\nexport function assertImportAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportAttribute {\n  assert(\"ImportAttribute\", node, opts);\n}\nexport function assertDecorator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Decorator {\n  assert(\"Decorator\", node, opts);\n}\nexport function assertDoExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoExpression {\n  assert(\"DoExpression\", node, opts);\n}\nexport function assertExportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultSpecifier {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\nexport function assertRecordExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RecordExpression {\n  assert(\"RecordExpression\", node, opts);\n}\nexport function assertTupleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleExpression {\n  assert(\"TupleExpression\", node, opts);\n}\nexport function assertDecimalLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DecimalLiteral {\n  assert(\"DecimalLiteral\", node, opts);\n}\nexport function assertModuleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleExpression {\n  assert(\"ModuleExpression\", node, opts);\n}\nexport function assertTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TopicReference {\n  assert(\"TopicReference\", node, opts);\n}\nexport function assertPipelineTopicExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineTopicExpression {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\nexport function assertPipelineBareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineBareFunction {\n  assert(\"PipelineBareFunction\", node, opts);\n}\nexport function assertPipelinePrimaryTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelinePrimaryTopicReference {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\nexport function assertTSParameterProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParameterProperty {\n  assert(\"TSParameterProperty\", node, opts);\n}\nexport function assertTSDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareFunction {\n  assert(\"TSDeclareFunction\", node, opts);\n}\nexport function assertTSDeclareMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareMethod {\n  assert(\"TSDeclareMethod\", node, opts);\n}\nexport function assertTSQualifiedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSQualifiedName {\n  assert(\"TSQualifiedName\", node, opts);\n}\nexport function assertTSCallSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSCallSignatureDeclaration {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\nexport function assertTSConstructSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructSignatureDeclaration {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\nexport function assertTSPropertySignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSPropertySignature {\n  assert(\"TSPropertySignature\", node, opts);\n}\nexport function assertTSMethodSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMethodSignature {\n  assert(\"TSMethodSignature\", node, opts);\n}\nexport function assertTSIndexSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexSignature {\n  assert(\"TSIndexSignature\", node, opts);\n}\nexport function assertTSAnyKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAnyKeyword {\n  assert(\"TSAnyKeyword\", node, opts);\n}\nexport function assertTSBooleanKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBooleanKeyword {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\nexport function assertTSBigIntKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBigIntKeyword {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\nexport function assertTSIntrinsicKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntrinsicKeyword {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\nexport function assertTSNeverKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNeverKeyword {\n  assert(\"TSNeverKeyword\", node, opts);\n}\nexport function assertTSNullKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNullKeyword {\n  assert(\"TSNullKeyword\", node, opts);\n}\nexport function assertTSNumberKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNumberKeyword {\n  assert(\"TSNumberKeyword\", node, opts);\n}\nexport function assertTSObjectKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSObjectKeyword {\n  assert(\"TSObjectKeyword\", node, opts);\n}\nexport function assertTSStringKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSStringKeyword {\n  assert(\"TSStringKeyword\", node, opts);\n}\nexport function assertTSSymbolKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSymbolKeyword {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\nexport function assertTSUndefinedKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUndefinedKeyword {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\nexport function assertTSUnknownKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnknownKeyword {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\nexport function assertTSVoidKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSVoidKeyword {\n  assert(\"TSVoidKeyword\", node, opts);\n}\nexport function assertTSThisType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSThisType {\n  assert(\"TSThisType\", node, opts);\n}\nexport function assertTSFunctionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSFunctionType {\n  assert(\"TSFunctionType\", node, opts);\n}\nexport function assertTSConstructorType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructorType {\n  assert(\"TSConstructorType\", node, opts);\n}\nexport function assertTSTypeReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeReference {\n  assert(\"TSTypeReference\", node, opts);\n}\nexport function assertTSTypePredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypePredicate {\n  assert(\"TSTypePredicate\", node, opts);\n}\nexport function assertTSTypeQuery(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeQuery {\n  assert(\"TSTypeQuery\", node, opts);\n}\nexport function assertTSTypeLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeLiteral {\n  assert(\"TSTypeLiteral\", node, opts);\n}\nexport function assertTSArrayType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSArrayType {\n  assert(\"TSArrayType\", node, opts);\n}\nexport function assertTSTupleType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTupleType {\n  assert(\"TSTupleType\", node, opts);\n}\nexport function assertTSOptionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSOptionalType {\n  assert(\"TSOptionalType\", node, opts);\n}\nexport function assertTSRestType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSRestType {\n  assert(\"TSRestType\", node, opts);\n}\nexport function assertTSNamedTupleMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamedTupleMember {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\nexport function assertTSUnionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnionType {\n  assert(\"TSUnionType\", node, opts);\n}\nexport function assertTSIntersectionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntersectionType {\n  assert(\"TSIntersectionType\", node, opts);\n}\nexport function assertTSConditionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConditionalType {\n  assert(\"TSConditionalType\", node, opts);\n}\nexport function assertTSInferType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInferType {\n  assert(\"TSInferType\", node, opts);\n}\nexport function assertTSParenthesizedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParenthesizedType {\n  assert(\"TSParenthesizedType\", node, opts);\n}\nexport function assertTSTypeOperator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeOperator {\n  assert(\"TSTypeOperator\", node, opts);\n}\nexport function assertTSIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexedAccessType {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\nexport function assertTSMappedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMappedType {\n  assert(\"TSMappedType\", node, opts);\n}\nexport function assertTSLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSLiteralType {\n  assert(\"TSLiteralType\", node, opts);\n}\nexport function assertTSExpressionWithTypeArguments(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExpressionWithTypeArguments {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\nexport function assertTSInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceDeclaration {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\nexport function assertTSInterfaceBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceBody {\n  assert(\"TSInterfaceBody\", node, opts);\n}\nexport function assertTSTypeAliasDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAliasDeclaration {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\nexport function assertTSInstantiationExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInstantiationExpression {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\nexport function assertTSAsExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAsExpression {\n  assert(\"TSAsExpression\", node, opts);\n}\nexport function assertTSTypeAssertion(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAssertion {\n  assert(\"TSTypeAssertion\", node, opts);\n}\nexport function assertTSEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumDeclaration {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\nexport function assertTSEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumMember {\n  assert(\"TSEnumMember\", node, opts);\n}\nexport function assertTSModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleDeclaration {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\nexport function assertTSModuleBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleBlock {\n  assert(\"TSModuleBlock\", node, opts);\n}\nexport function assertTSImportType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportType {\n  assert(\"TSImportType\", node, opts);\n}\nexport function assertTSImportEqualsDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportEqualsDeclaration {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\nexport function assertTSExternalModuleReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExternalModuleReference {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\nexport function assertTSNonNullExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNonNullExpression {\n  assert(\"TSNonNullExpression\", node, opts);\n}\nexport function assertTSExportAssignment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExportAssignment {\n  assert(\"TSExportAssignment\", node, opts);\n}\nexport function assertTSNamespaceExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamespaceExportDeclaration {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\nexport function assertTSTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAnnotation {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\nexport function assertTSTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterInstantiation {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\nexport function assertTSTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterDeclaration {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\nexport function assertTSTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameter {\n  assert(\"TSTypeParameter\", node, opts);\n}\nexport function assertStandardized(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Standardized {\n  assert(\"Standardized\", node, opts);\n}\nexport function assertExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Expression {\n  assert(\"Expression\", node, opts);\n}\nexport function assertBinary(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Binary {\n  assert(\"Binary\", node, opts);\n}\nexport function assertScopable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Scopable {\n  assert(\"Scopable\", node, opts);\n}\nexport function assertBlockParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockParent {\n  assert(\"BlockParent\", node, opts);\n}\nexport function assertBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Block {\n  assert(\"Block\", node, opts);\n}\nexport function assertStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Statement {\n  assert(\"Statement\", node, opts);\n}\nexport function assertTerminatorless(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Terminatorless {\n  assert(\"Terminatorless\", node, opts);\n}\nexport function assertCompletionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CompletionStatement {\n  assert(\"CompletionStatement\", node, opts);\n}\nexport function assertConditional(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Conditional {\n  assert(\"Conditional\", node, opts);\n}\nexport function assertLoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Loop {\n  assert(\"Loop\", node, opts);\n}\nexport function assertWhile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.While {\n  assert(\"While\", node, opts);\n}\nexport function assertExpressionWrapper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionWrapper {\n  assert(\"ExpressionWrapper\", node, opts);\n}\nexport function assertFor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.For {\n  assert(\"For\", node, opts);\n}\nexport function assertForXStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForXStatement {\n  assert(\"ForXStatement\", node, opts);\n}\nexport function assertFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Function {\n  assert(\"Function\", node, opts);\n}\nexport function assertFunctionParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionParent {\n  assert(\"FunctionParent\", node, opts);\n}\nexport function assertPureish(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pureish {\n  assert(\"Pureish\", node, opts);\n}\nexport function assertDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Declaration {\n  assert(\"Declaration\", node, opts);\n}\nexport function assertPatternLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PatternLike {\n  assert(\"PatternLike\", node, opts);\n}\nexport function assertLVal(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LVal {\n  assert(\"LVal\", node, opts);\n}\nexport function assertTSEntityName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEntityName {\n  assert(\"TSEntityName\", node, opts);\n}\nexport function assertLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Literal {\n  assert(\"Literal\", node, opts);\n}\nexport function assertImmutable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Immutable {\n  assert(\"Immutable\", node, opts);\n}\nexport function assertUserWhitespacable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UserWhitespacable {\n  assert(\"UserWhitespacable\", node, opts);\n}\nexport function assertMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Method {\n  assert(\"Method\", node, opts);\n}\nexport function assertObjectMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMember {\n  assert(\"ObjectMember\", node, opts);\n}\nexport function assertProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Property {\n  assert(\"Property\", node, opts);\n}\nexport function assertUnaryLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryLike {\n  assert(\"UnaryLike\", node, opts);\n}\nexport function assertPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pattern {\n  assert(\"Pattern\", node, opts);\n}\nexport function assertClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Class {\n  assert(\"Class\", node, opts);\n}\nexport function assertModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleDeclaration {\n  assert(\"ModuleDeclaration\", node, opts);\n}\nexport function assertExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDeclaration {\n  assert(\"ExportDeclaration\", node, opts);\n}\nexport function assertModuleSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleSpecifier {\n  assert(\"ModuleSpecifier\", node, opts);\n}\nexport function assertAccessor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Accessor {\n  assert(\"Accessor\", node, opts);\n}\nexport function assertPrivate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Private {\n  assert(\"Private\", node, opts);\n}\nexport function assertFlow(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Flow {\n  assert(\"Flow\", node, opts);\n}\nexport function assertFlowType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowType {\n  assert(\"FlowType\", node, opts);\n}\nexport function assertFlowBaseAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowBaseAnnotation {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\nexport function assertFlowDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowDeclaration {\n  assert(\"FlowDeclaration\", node, opts);\n}\nexport function assertFlowPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowPredicate {\n  assert(\"FlowPredicate\", node, opts);\n}\nexport function assertEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBody {\n  assert(\"EnumBody\", node, opts);\n}\nexport function assertEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumMember {\n  assert(\"EnumMember\", node, opts);\n}\nexport function assertJSX(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSX {\n  assert(\"JSX\", node, opts);\n}\nexport function assertMiscellaneous(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Miscellaneous {\n  assert(\"Miscellaneous\", node, opts);\n}\nexport function assertTypeScript(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeScript {\n  assert(\"TypeScript\", node, opts);\n}\nexport function assertTSTypeElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeElement {\n  assert(\"TSTypeElement\", node, opts);\n}\nexport function assertTSType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSType {\n  assert(\"TSType\", node, opts);\n}\nexport function assertTSBaseType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBaseType {\n  assert(\"TSBaseType\", node, opts);\n}\nexport function assertNumberLiteral(node: any, opts: any): void {\n  console.trace(\n    \"The node type NumberLiteral has been renamed to NumericLiteral\",\n  );\n  assert(\"NumberLiteral\", node, opts);\n}\nexport function assertRegexLiteral(node: any, opts: any): void {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\nexport function assertRestProperty(node: any, opts: any): void {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  assert(\"RestProperty\", node, opts);\n}\nexport function assertSpreadProperty(node: any, opts: any): void {\n  console.trace(\n    \"The node type SpreadProperty has been renamed to SpreadElement\",\n  );\n  assert(\"SpreadProperty\", node, opts);\n}\n", "import {\n  anyTypeAnnotation,\n  stringTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation,\n  booleanTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n} from \"../generated\";\nimport type * as t from \"../..\";\n\nexport default createTypeAnnotationBasedOnTypeof as {\n  (type: \"string\"): t.StringTypeAnnotation;\n  (type: \"number\"): t.NumberTypeAnnotation;\n  (type: \"undefined\"): t.VoidTypeAnnotation;\n  (type: \"boolean\"): t.BooleanTypeAnnotation;\n  (type: \"function\"): t.GenericTypeAnnotation;\n  (type: \"object\"): t.GenericTypeAnnotation;\n  (type: \"symbol\"): t.GenericTypeAnnotation;\n  (type: \"bigint\"): t.AnyTypeAnnotation;\n};\n\n/**\n * Create a type annotation based on typeof expression.\n */\nfunction createTypeAnnotationBasedOnTypeof(type: string): t.FlowType {\n  switch (type) {\n    case \"string\":\n      return stringTypeAnnotation();\n    case \"number\":\n      return numberTypeAnnotation();\n    case \"undefined\":\n      return voidTypeAnnotation();\n    case \"boolean\":\n      return booleanTypeAnnotation();\n    case \"function\":\n      return genericTypeAnnotation(identifier(\"Function\"));\n    case \"object\":\n      return genericTypeAnnotation(identifier(\"Object\"));\n    case \"symbol\":\n      return genericTypeAnnotation(identifier(\"Symbol\"));\n    case \"bigint\":\n      // todo: use BigInt annotation when Flow supports BigInt\n      // https://github.com/facebook/flow/issues/6639\n      return anyTypeAnnotation();\n  }\n  throw new Error(\"Invalid typeof value: \" + type);\n}\n", "import {\n  isAnyTypeAnnotation,\n  isGenericTypeAnnotation,\n  isUnionTypeAnnotation,\n  isFlowBaseAnnotation,\n  isIdentifier,\n} from \"../../validators/generated\";\nimport type * as t from \"../..\";\n\nfunction getQualifiedName(node: t.GenericTypeAnnotation[\"id\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  // todo(babel-8): change type to Array<...>\n  nodes: ReadonlyArray<t.FlowType | false | null | undefined>,\n): t.FlowType[] {\n  const generics = new Map<string, t.GenericTypeAnnotation>();\n  const bases = new Map<t.FlowBaseAnnotation[\"type\"], t.FlowBaseAnnotation>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.FlowType[]>();\n\n  const types: t.FlowType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (isFlowBaseAnnotation(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isUnionTypeAnnotation(node)) {\n      if (!typeGroups.has(node.types)) {\n        // todo(babel-8): use .push when nodes is mutable\n        nodes = nodes.concat(node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // find a matching generic type and merge and deduplicate the type parameters\n    if (isGenericTypeAnnotation(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing: t.Flow = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params.concat(node.typeParameters.params),\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n", "import { unionTypeAnnotation } from \"../generated\";\nimport removeTypeDuplicates from \"../../modifications/flow/removeTypeDuplicates\";\nimport type * as t from \"../..\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createFlowUnionType<T extends t.FlowType>(\n  types: [T] | Array<T>,\n): T | t.UnionTypeAnnotation {\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0] as T;\n  } else {\n    return unionTypeAnnotation(flattened);\n  }\n}\n", "import {\n  isIdentifier,\n  isTSAnyKeyword,\n  isTSTypeReference,\n  isTSUnionType,\n  isTSBaseType,\n} from \"../../validators/generated\";\nimport type * as t from \"../..\";\n\nfunction getQualifiedName(node: t.TSTypeReference[\"typeName\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodes: Array<t.TSType>,\n): Array<t.TSType> {\n  const generics = new Map<string, t.TSTypeReference>();\n  const bases = new Map<t.TSBaseType[\"type\"], t.TSBaseType>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.TSType[]>();\n\n  const types: t.TSType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isTSAnyKeyword(node)) {\n      return [node];\n    }\n\n    // Analogue of FlowBaseAnnotation\n    if (isTSBaseType(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isTSUnionType(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // todo: support merging tuples: number[]\n    if (isTSTypeReference(node) && node.typeParameters) {\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing: t.TypeScript = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params.concat(node.typeParameters.params),\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n", "import { tsUnionType } from \"../generated\";\nimport removeTypeDuplicates from \"../../modifications/typescript/removeTypeDuplicates\";\nimport { isTSTypeAnnotation } from \"../../validators/generated/index\";\nimport type * as t from \"../..\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createTSUnionType(\n  typeAnnotations: Array<t.TSTypeAnnotation | t.TSType>,\n): t.TSType {\n  const types = typeAnnotations.map(type => {\n    return isTSTypeAnnotation(type) ? type.typeAnnotation : type;\n  });\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return tsUnionType(flattened);\n  }\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\n/**\n * This file is written in JavaScript and not TypeScript because uppercase builders\n * conflict with AST types. TypeScript reads the uppercase.d.ts file instead.\n */\n\nexport {\n  arrayExpression as ArrayExpression,\n  assignmentExpression as AssignmentExpression,\n  binaryExpression as BinaryExpression,\n  interpreterDirective as InterpreterDirective,\n  directive as Directive,\n  directiveLiteral as DirectiveLiteral,\n  blockStatement as BlockStatement,\n  breakStatement as BreakStatement,\n  callExpression as CallExpression,\n  catchClause as CatchClause,\n  conditionalExpression as ConditionalExpression,\n  continueStatement as ContinueStatement,\n  debuggerStatement as DebuggerStatement,\n  doWhileStatement as DoWhileStatement,\n  emptyStatement as EmptyStatement,\n  expressionStatement as ExpressionStatement,\n  file as File,\n  forInStatement as ForInStatement,\n  forStatement as ForStatement,\n  functionDeclaration as FunctionDeclaration,\n  functionExpression as FunctionExpression,\n  identifier as Identifier,\n  ifStatement as IfStatement,\n  labeledStatement as LabeledStatement,\n  stringLiteral as StringLiteral,\n  numericLiteral as NumericLiteral,\n  nullLiteral as NullLiteral,\n  booleanLiteral as BooleanLiteral,\n  regExpLiteral as RegExpLiteral,\n  logicalExpression as LogicalExpression,\n  memberExpression as MemberExpression,\n  newExpression as NewExpression,\n  program as Program,\n  objectExpression as ObjectExpression,\n  objectMethod as ObjectMethod,\n  objectProperty as ObjectProperty,\n  restElement as RestElement,\n  returnStatement as ReturnStatement,\n  sequenceExpression as SequenceExpression,\n  parenthesizedExpression as ParenthesizedExpression,\n  switchCase as SwitchCase,\n  switchStatement as SwitchStatement,\n  thisExpression as ThisExpression,\n  throwStatement as ThrowStatement,\n  tryStatement as TryStatement,\n  unaryExpression as UnaryExpression,\n  updateExpression as UpdateExpression,\n  variableDeclaration as VariableDeclaration,\n  variableDeclarator as VariableDeclarator,\n  whileStatement as WhileStatement,\n  withStatement as WithStatement,\n  assignmentPattern as AssignmentPattern,\n  arrayPattern as ArrayPattern,\n  arrowFunctionExpression as ArrowFunctionExpression,\n  classBody as ClassBody,\n  classExpression as ClassExpression,\n  classDeclaration as ClassDeclaration,\n  exportAllDeclaration as ExportAllDeclaration,\n  exportDefaultDeclaration as ExportDefaultDeclaration,\n  exportNamedDeclaration as ExportNamedDeclaration,\n  exportSpecifier as ExportSpecifier,\n  forOfStatement as ForOfStatement,\n  importDeclaration as ImportDeclaration,\n  importDefaultSpecifier as ImportDefaultSpecifier,\n  importNamespaceSpecifier as ImportNamespaceSpecifier,\n  importSpecifier as ImportSpecifier,\n  metaProperty as MetaProperty,\n  classMethod as ClassMethod,\n  objectPattern as ObjectPattern,\n  spreadElement as SpreadElement,\n  super as Super,\n  taggedTemplateExpression as TaggedTemplateExpression,\n  templateElement as TemplateElement,\n  templateLiteral as TemplateLiteral,\n  yieldExpression as YieldExpression,\n  awaitExpression as AwaitExpression,\n  import as Import,\n  bigIntLiteral as BigIntLiteral,\n  exportNamespaceSpecifier as ExportNamespaceSpecifier,\n  optionalMemberExpression as OptionalMemberExpression,\n  optionalCallExpression as OptionalCallExpression,\n  classProperty as ClassProperty,\n  classAccessorProperty as ClassAccessorProperty,\n  classPrivateProperty as ClassPrivateProperty,\n  classPrivateMethod as ClassPrivateMethod,\n  privateName as PrivateName,\n  staticBlock as StaticBlock,\n  anyTypeAnnotation as AnyTypeAnnotation,\n  arrayTypeAnnotation as ArrayTypeAnnotation,\n  booleanTypeAnnotation as BooleanTypeAnnotation,\n  booleanLiteralTypeAnnotation as BooleanLiteralTypeAnnotation,\n  nullLiteralTypeAnnotation as NullLiteralTypeAnnotation,\n  classImplements as ClassImplements,\n  declareClass as DeclareClass,\n  declareFunction as DeclareFunction,\n  declareInterface as DeclareInterface,\n  declareModule as DeclareModule,\n  declareModuleExports as DeclareModuleExports,\n  declareTypeAlias as DeclareTypeAlias,\n  declareOpaqueType as DeclareOpaqueType,\n  declareVariable as DeclareVariable,\n  declareExportDeclaration as DeclareExportDeclaration,\n  declareExportAllDeclaration as DeclareExportAllDeclaration,\n  declaredPredicate as DeclaredPredicate,\n  existsTypeAnnotation as ExistsTypeAnnotation,\n  functionTypeAnnotation as FunctionTypeAnnotation,\n  functionTypeParam as FunctionTypeParam,\n  genericTypeAnnotation as GenericTypeAnnotation,\n  inferredPredicate as InferredPredicate,\n  interfaceExtends as InterfaceExtends,\n  interfaceDeclaration as InterfaceDeclaration,\n  interfaceTypeAnnotation as InterfaceTypeAnnotation,\n  intersectionTypeAnnotation as IntersectionTypeAnnotation,\n  mixedTypeAnnotation as MixedTypeAnnotation,\n  emptyTypeAnnotation as EmptyTypeAnnotation,\n  nullableTypeAnnotation as NullableTypeAnnotation,\n  numberLiteralTypeAnnotation as NumberLiteralTypeAnnotation,\n  numberTypeAnnotation as NumberTypeAnnotation,\n  objectTypeAnnotation as ObjectTypeAnnotation,\n  objectTypeInternalSlot as ObjectTypeInternalSlot,\n  objectTypeCallProperty as ObjectTypeCallProperty,\n  objectTypeIndexer as ObjectTypeIndexer,\n  objectTypeProperty as ObjectTypeProperty,\n  objectTypeSpreadProperty as ObjectTypeSpreadProperty,\n  opaqueType as OpaqueType,\n  qualifiedTypeIdentifier as QualifiedTypeIdentifier,\n  stringLiteralTypeAnnotation as StringLiteralTypeAnnotation,\n  stringTypeAnnotation as StringTypeAnnotation,\n  symbolTypeAnnotation as SymbolTypeAnnotation,\n  thisTypeAnnotation as ThisTypeAnnotation,\n  tupleTypeAnnotation as TupleTypeAnnotation,\n  typeofTypeAnnotation as TypeofTypeAnnotation,\n  typeAlias as TypeAlias,\n  typeAnnotation as TypeAnnotation,\n  typeCastExpression as TypeCastExpression,\n  typeParameter as TypeParameter,\n  typeParameterDeclaration as TypeParameterDeclaration,\n  typeParameterInstantiation as TypeParameterInstantiation,\n  unionTypeAnnotation as UnionTypeAnnotation,\n  variance as Variance,\n  voidTypeAnnotation as VoidTypeAnnotation,\n  enumDeclaration as EnumDeclaration,\n  enumBooleanBody as EnumBooleanBody,\n  enumNumberBody as EnumNumberBody,\n  enumStringBody as EnumStringBody,\n  enumSymbolBody as EnumSymbolBody,\n  enumBooleanMember as EnumBooleanMember,\n  enumNumberMember as EnumNumberMember,\n  enumStringMember as EnumStringMember,\n  enumDefaultedMember as EnumDefaultedMember,\n  indexedAccessType as IndexedAccessType,\n  optionalIndexedAccessType as OptionalIndexedAccessType,\n  jsxAttribute as JSXAttribute,\n  jsxClosingElement as JSXClosingElement,\n  jsxElement as JSXElement,\n  jsxEmptyExpression as JSXEmptyExpression,\n  jsxExpressionContainer as JSXExpressionContainer,\n  jsxSpreadChild as JSXSpreadChild,\n  jsxIdentifier as JSXIdentifier,\n  jsxMemberExpression as JSXMemberExpression,\n  jsxNamespacedName as JSXNamespacedName,\n  jsxOpeningElement as JSXOpeningElement,\n  jsxSpreadAttribute as JSXSpreadAttribute,\n  jsxText as JSXText,\n  jsxFragment as JSXFragment,\n  jsxOpeningFragment as JSXOpeningFragment,\n  jsxClosingFragment as JSXClosingFragment,\n  noop as Noop,\n  placeholder as Placeholder,\n  v8IntrinsicIdentifier as V8IntrinsicIdentifier,\n  argumentPlaceholder as ArgumentPlaceholder,\n  bindExpression as BindExpression,\n  importAttribute as ImportAttribute,\n  decorator as Decorator,\n  doExpression as DoExpression,\n  exportDefaultSpecifier as ExportDefaultSpecifier,\n  recordExpression as RecordExpression,\n  tupleExpression as TupleExpression,\n  decimalLiteral as DecimalLiteral,\n  moduleExpression as ModuleExpression,\n  topicReference as TopicReference,\n  pipelineTopicExpression as PipelineTopicExpression,\n  pipelineBareFunction as PipelineBareFunction,\n  pipelinePrimaryTopicReference as PipelinePrimaryTopicReference,\n  tsParameterProperty as TSParameterProperty,\n  tsDeclareFunction as TSDeclareFunction,\n  tsDeclareMethod as TSDeclareMethod,\n  tsQualifiedName as TSQualifiedName,\n  tsCallSignatureDeclaration as TSCallSignatureDeclaration,\n  tsConstructSignatureDeclaration as TSConstructSignatureDeclaration,\n  tsPropertySignature as TSPropertySignature,\n  tsMethodSignature as TSMethodSignature,\n  tsIndexSignature as TSIndexSignature,\n  tsAnyKeyword as TSAnyKeyword,\n  tsBooleanKeyword as TSBooleanKeyword,\n  tsBigIntKeyword as TSBigIntKeyword,\n  tsIntrinsicKeyword as TSIntrinsicKeyword,\n  tsNeverKeyword as TSNeverKeyword,\n  tsNullKeyword as TSNullKeyword,\n  tsNumberKeyword as TSNumberKeyword,\n  tsObjectKeyword as TSObjectKeyword,\n  tsStringKeyword as TSStringKeyword,\n  tsSymbolKeyword as TSSymbolKeyword,\n  tsUndefinedKeyword as TSUndefinedKeyword,\n  tsUnknownKeyword as TSUnknownKeyword,\n  tsVoidKeyword as TSVoidKeyword,\n  tsThisType as TSThisType,\n  tsFunctionType as TSFunctionType,\n  tsConstructorType as TSConstructorType,\n  tsTypeReference as TSTypeReference,\n  tsTypePredicate as TSTypePredicate,\n  tsTypeQuery as TSTypeQuery,\n  tsTypeLiteral as TSTypeLiteral,\n  tsArrayType as TSArrayType,\n  tsTupleType as TSTupleType,\n  tsOptionalType as TSOptionalType,\n  tsRestType as TSRestType,\n  tsNamedTupleMember as TSNamedTupleMember,\n  tsUnionType as TSUnionType,\n  tsIntersectionType as TSIntersectionType,\n  tsConditionalType as TSConditionalType,\n  tsInferType as TSInferType,\n  tsParenthesizedType as TSParenthesizedType,\n  tsTypeOperator as TSTypeOperator,\n  tsIndexedAccessType as TSIndexedAccessType,\n  tsMappedType as TSMappedType,\n  tsLiteralType as TSLiteralType,\n  tsExpressionWithTypeArguments as TSExpressionWithTypeArguments,\n  tsInterfaceDeclaration as TSInterfaceDeclaration,\n  tsInterfaceBody as TSInterfaceBody,\n  tsTypeAliasDeclaration as TSTypeAliasDeclaration,\n  tsInstantiationExpression as TSInstantiationExpression,\n  tsAsExpression as TSAsExpression,\n  tsTypeAssertion as TSTypeAssertion,\n  tsEnumDeclaration as TSEnumDeclaration,\n  tsEnumMember as TSEnumMember,\n  tsModuleDeclaration as TSModuleDeclaration,\n  tsModuleBlock as TSModuleBlock,\n  tsImportType as TSImportType,\n  tsImportEqualsDeclaration as TSImportEqualsDeclaration,\n  tsExternalModuleReference as TSExternalModuleReference,\n  tsNonNullExpression as TSNonNullExpression,\n  tsExportAssignment as TSExportAssignment,\n  tsNamespaceExportDeclaration as TSNamespaceExportDeclaration,\n  tsTypeAnnotation as TSTypeAnnotation,\n  tsTypeParameterInstantiation as TSTypeParameterInstantiation,\n  tsTypeParameterDeclaration as TSTypeParameterDeclaration,\n  tsTypeParameter as TSTypeParameter,\n  numberLiteral as NumberLiteral,\n  regexLiteral as RegexLiteral,\n  restProperty as RestProperty,\n  spreadProperty as SpreadProperty,\n} from \"./index\";\n", "import { NODE_FIELDS } from \"../definitions\";\nimport type * as t from \"..\";\nimport { isFile, isIdentifier } from \"../validators/generated\";\n\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\n\ntype CommentCache = Map<t.Comment, t.Comment>;\n\n// This function will never be called for comments, only for real nodes.\nfunction cloneIfNode(\n  obj: t.Node | undefined | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(\n  obj: t.Node | undefined | null | (t.Node | undefined | null)[],\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\n/**\n * Create a clone of a `node` including only properties belonging to the node.\n * If the second parameter is `false`, cloneNode performs a shallow clone.\n * If the third parameter is true, the cloned nodes exclude location properties.\n */\nexport default function cloneNode<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n): T {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n  commentsCache: CommentCache,\n): T {\n  if (!node) return node;\n\n  const { type } = node;\n  const newNode: any = { type: node.type };\n\n  // Special-case identifiers since they are the most cloned nodes.\n  if (isIdentifier(node)) {\n    newNode.name = node.name;\n\n    if (has(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (has(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep\n        ? cloneIfNodeOrArray(\n            node.typeAnnotation,\n            true,\n            withoutLoc,\n            commentsCache,\n          )\n        : node.typeAnnotation;\n    }\n  } else if (!has(NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(NODE_FIELDS[type])) {\n      if (has(node, field)) {\n        if (deep) {\n          newNode[field] =\n            isFile(node) && field === \"comments\"\n              ? maybeCloneComments(\n                  node.comments,\n                  deep,\n                  withoutLoc,\n                  commentsCache,\n                )\n              : cloneIfNodeOrArray(\n                  // @ts-expect-error node[field] has been guarded by has check\n                  node[field],\n                  true,\n                  withoutLoc,\n                  commentsCache,\n                );\n        } else {\n          newNode[field] =\n            // @ts-expect-error node[field] has been guarded by has check\n            node[field];\n        }\n      }\n    }\n  }\n\n  if (has(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n  if (has(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(\n      node.leadingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (has(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(\n      node.innerComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (has(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(\n      node.trailingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (has(node, \"extra\")) {\n    newNode.extra = {\n      ...node.extra,\n    };\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments<T extends t.Comment>(\n  comments: ReadonlyArray<T> | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: Map<T, T>,\n): ReadonlyArray<T> | null {\n  if (!comments || !deep) {\n    return comments;\n  }\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n\n    const { type, value, loc } = comment;\n\n    const ret = { type, value, loc } as T;\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n\n    return ret;\n  });\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n\n/**\n * Create a shallow clone of a `node`, including only\n * properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function clone<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false);\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function cloneDeep<T extends t.Node>(node: T): T {\n  return cloneNode(node);\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * excluding `_private` and location properties.\n */\nexport default function cloneDeepWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ true, /* withoutLoc */ true);\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n\n/**\n * Create a shallow clone of a `node` excluding `_private` and location properties.\n */\nexport default function cloneWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false, /* withoutLoc */ true);\n}\n", "import type * as t from \"..\";\n\n/**\n * Add comments of certain type to a node.\n */\nexport default function addComments<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  comments: Array<t.Comment>,\n): T {\n  if (!comments || !node) return node;\n\n  const key = `${type}Comments` as const;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}\n", "import addComments from \"./addComments\";\nimport type * as t from \"..\";\n\n/**\n * Add comment of certain type to a node.\n */\nexport default function addComment<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  content: string,\n  line?: boolean,\n): T {\n  return addComments(node, type, [\n    {\n      type: line ? \"CommentLine\" : \"CommentBlock\",\n      value: content,\n    } as t.Comment,\n  ]);\n}\n", "import type * as t from \"..\";\n\nexport default function inherit<\n  C extends t.Node | undefined,\n  P extends t.Node | undefined,\n>(key: keyof C & keyof P, child: C, parent: P): void {\n  if (child && parent) {\n    // @ts-expect-error Could further refine key definitions\n    child[key] = Array.from(\n      new Set([].concat(child[key], parent[key]).filter(Boolean)),\n    );\n  }\n}\n", "import inherit from \"../utils/inherit\";\nimport type * as t from \"..\";\n\nexport default function inheritInnerComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"innerComments\", child, parent);\n}\n", "import inherit from \"../utils/inherit\";\nimport type * as t from \"..\";\n\nexport default function inheritLeadingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"leadingComments\", child, parent);\n}\n", "import inherit from \"../utils/inherit\";\nimport type * as t from \"..\";\n\nexport default function inheritTrailingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"trailingComments\", child, parent);\n}\n", "import inheritTrailingComments from \"./inheritTrailingComments\";\nimport inheritLeadingComments from \"./inheritLeadingComments\";\nimport inheritInnerComments from \"./inheritInnerComments\";\nimport type * as t from \"..\";\n\n/**\n * Inherit all unique comments from `parent` node to `child` node.\n */\nexport default function inheritsComments<T extends t.Node>(\n  child: T,\n  parent: t.Node,\n): T {\n  inheritTrailingComments(child, parent);\n  inheritLeadingComments(child, parent);\n  inheritInnerComments(child, parent);\n\n  return child;\n}\n", "import { COMMENT_KEYS } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Remove comment properties from a node.\n */\nexport default function removeComments<T extends t.Node>(node: T): T {\n  COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport { FLIPPED_ALIAS_KEYS } from \"../../definitions\";\n\nexport const STANDARDIZED_TYPES = FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexport const EXPRESSION_TYPES = FLIPPED_ALIAS_KEYS[\"Expression\"];\nexport const BINARY_TYPES = FLIPPED_ALIAS_KEYS[\"Binary\"];\nexport const SCOPABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexport const BLOCKPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexport const BLOCK_TYPES = FLIPPED_ALIAS_KEYS[\"Block\"];\nexport const STATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"Statement\"];\nexport const TERMINATORLESS_TYPES = FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexport const COMPLETIONSTATEMENT_TYPES =\n  FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexport const CONDITIONAL_TYPES = FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexport const LOOP_TYPES = FLIPPED_ALIAS_KEYS[\"Loop\"];\nexport const WHILE_TYPES = FLIPPED_ALIAS_KEYS[\"While\"];\nexport const EXPRESSIONWRAPPER_TYPES = FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexport const FOR_TYPES = FLIPPED_ALIAS_KEYS[\"For\"];\nexport const FORXSTATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexport const FUNCTION_TYPES = FLIPPED_ALIAS_KEYS[\"Function\"];\nexport const FUNCTIONPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexport const PUREISH_TYPES = FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexport const DECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexport const PATTERNLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexport const LVAL_TYPES = FLIPPED_ALIAS_KEYS[\"LVal\"];\nexport const TSENTITYNAME_TYPES = FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexport const LITERAL_TYPES = FLIPPED_ALIAS_KEYS[\"Literal\"];\nexport const IMMUTABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexport const USERWHITESPACABLE_TYPES = FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexport const METHOD_TYPES = FLIPPED_ALIAS_KEYS[\"Method\"];\nexport const OBJECTMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexport const PROPERTY_TYPES = FLIPPED_ALIAS_KEYS[\"Property\"];\nexport const UNARYLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexport const PATTERN_TYPES = FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexport const CLASS_TYPES = FLIPPED_ALIAS_KEYS[\"Class\"];\nexport const MODULEDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"ModuleDeclaration\"];\nexport const EXPORTDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexport const MODULESPECIFIER_TYPES = FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexport const ACCESSOR_TYPES = FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexport const PRIVATE_TYPES = FLIPPED_ALIAS_KEYS[\"Private\"];\nexport const FLOW_TYPES = FLIPPED_ALIAS_KEYS[\"Flow\"];\nexport const FLOWTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexport const FLOWBASEANNOTATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexport const FLOWDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexport const FLOWPREDICATE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexport const ENUMBODY_TYPES = FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexport const ENUMMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexport const JSX_TYPES = FLIPPED_ALIAS_KEYS[\"JSX\"];\nexport const MISCELLANEOUS_TYPES = FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexport const TYPESCRIPT_TYPES = FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexport const TSTYPEELEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexport const TSTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSType\"];\nexport const TSBASETYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\n", "import {\n  isBlockStatement,\n  isFunction,\n  isEmptyStatement,\n  isStatement,\n} from \"../validators/generated\";\nimport {\n  returnStatement,\n  expressionStatement,\n  blockStatement,\n} from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default function toBlock(\n  node: t.Statement | t.Expression,\n  parent?: t.Node,\n): t.BlockStatement {\n  if (isBlockStatement(node)) {\n    return node;\n  }\n\n  let blockNodes: t.Statement[] = [];\n\n  if (isEmptyStatement(node)) {\n    blockNodes = [];\n  } else {\n    if (!isStatement(node)) {\n      if (isFunction(parent)) {\n        node = returnStatement(node);\n      } else {\n        node = expressionStatement(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return blockStatement(blockNodes);\n}\n", "import toBlock from \"./toBlock\";\nimport type * as t from \"..\";\n\n/**\n * Ensure the `key` (defaults to \"body\") of a `node` is a block.\n * Casting it to a block if it is not.\n *\n * Returns the BlockStatement\n */\nexport default function ensureBlock(\n  node: t.Node,\n  key: string = \"body\",\n): t.BlockStatement {\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  const result = toBlock(node[key], node);\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  node[key] = result;\n  return result;\n}\n", "import isValidIdentifier from \"../validators/isValidIdentifier\";\nimport { isIdentifierChar } from \"@babel/helper-validator-identifier\";\n\nexport default function toIdentifier(input: string): string {\n  input = input + \"\";\n\n  // replace all non-valid identifiers with dashes\n  let name = \"\";\n  for (const c of input) {\n    name += isIdentifierChar(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!isValidIdentifier(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}\n", "import toIdentifier from \"./toIdentifier\";\n\nexport default function toBindingIdentifierName(name: string): string {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n\n  return name;\n}\n", "import { isIdentifier } from \"../validators/generated\";\nimport { stringLiteral } from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default function toComputedKey(\n  node:\n    | t.ObjectMember\n    | t.ObjectProperty\n    | t.ClassMethod\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.MemberExpression\n    | t.OptionalMemberExpression,\n  // @ts-expect-error todo(flow->ts): maybe check the type of node before accessing .key and .property\n  key: t.Expression | t.PrivateName = node.key || node.property,\n) {\n  if (!node.computed && isIdentifier(key)) key = stringLiteral(key.name);\n\n  return key;\n}\n", "import {\n  isExpression,\n  isFunction,\n  isClass,\n  isExpressionStatement,\n} from \"../validators/generated\";\nimport type * as t from \"..\";\n\nexport default toExpression as {\n  (node: t.Function): t.FunctionExpression;\n  (node: t.Class): t.ClassExpression;\n  (\n    node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n  ): t.Expression;\n};\n\nfunction toExpression(\n  node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n): t.Expression {\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  // return unmodified node\n  // important for things like ArrowFunctions where\n  // type change from ArrowFunction to FunctionExpression\n  // produces bugs like -> `()=>a` to `function () a`\n  // without generating a BlockStatement for it\n  // ref: https://github.com/babel/babili/issues/130\n  if (isExpression(node)) {\n    return node;\n  }\n\n  // convert all classes and functions\n  // ClassDeclaration -> ClassExpression\n  // FunctionDeclaration, ObjectMethod, ClassMethod -> FunctionExpression\n  if (isClass(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"ClassExpression\";\n  } else if (isFunction(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"FunctionExpression\";\n  }\n\n  // if it's still not an expression\n  if (!isExpression(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}\n", "import { VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\n/**\n * A prefix AST traversal implementation meant for simple searching\n * and processing.\n */\nexport default function traverseFast<Options = {}>(\n  node: t.Node | null | undefined,\n  enter: (node: t.Node, opts?: Options) => void,\n  opts?: Options,\n): void {\n  if (!node) return;\n\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  opts = opts || ({} as Options);\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode: t.Node | undefined | null =\n      // @ts-expect-error key must present in node\n      node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}\n", "import { COMMENT_KEYS } from \"../constants\";\nimport type * as t from \"..\";\n\nconst CLEAR_KEYS = [\n  \"tokens\", // only exist in t.File\n  \"start\",\n  \"end\",\n  \"loc\",\n  // Fixme: should be extra.raw / extra.rawValue?\n  \"raw\",\n  \"rawValue\",\n] as const;\n\nconst CLEAR_KEYS_PLUS_COMMENTS = [\n  ...COMMENT_KEYS,\n  \"comments\",\n  ...CLEAR_KEYS,\n] as const;\n\nexport type Options = { preserveComments?: boolean };\n/**\n * Remove all of the _* properties from a node along with the additional metadata\n * properties like location data and raw token data.\n */\nexport default function removeProperties(\n  node: t.Node,\n  opts: Options = {},\n): void {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n  for (const key of map) {\n    // @ts-expect-error tokens only exist in t.File\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    // @ts-expect-error string can not index node\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols: Array<symbol> = Object.getOwnPropertySymbols(node);\n  for (const sym of symbols) {\n    // @ts-expect-error Fixme: document symbol properties\n    node[sym] = null;\n  }\n}\n", "import traverseFast from \"../traverse/traverseFast\";\nimport removeProperties from \"./removeProperties\";\nimport type * as t from \"..\";\n\nexport default function removePropertiesDeep<T extends t.Node>(\n  tree: T,\n  opts?: { preserveComments: boolean } | null,\n): T {\n  traverseFast(tree, removeProperties, opts);\n\n  return tree;\n}\n", "import { isIdentifier, isStringLiteral } from \"../validators/generated\";\nimport cloneNode from \"../clone/cloneNode\";\nimport removePropertiesDeep from \"../modifications/removePropertiesDeep\";\nimport type * as t from \"..\";\n\nexport default function toKeyAlias(\n  node: t.Method | t.Property,\n  key: t.Node = node.key,\n): string {\n  let alias;\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.kind`\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (isIdentifier(key)) {\n    alias = key.name;\n  } else if (isStringLiteral(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify(removePropertiesDeep(cloneNode(key)));\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.computed`\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.static`\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return (toKeyAlias.uid = 0);\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n", "import {\n  isExportDeclaration,\n  isIdentifier,\n  isDeclaration,\n  isFunctionDeclaration,\n  isFunctionExpression,\n  isExportAllDeclaration,\n} from \"../validators/generated\";\nimport type * as t from \"..\";\n\nexport { getBindingIdentifiers as default };\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates: true,\n  outerOnly?: boolean,\n): Record<string, Array<t.Identifier>>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: false,\n  outerOnly?: boolean,\n): Record<string, t.Identifier>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n\n/**\n * Return a list of binding identifiers associated with the input `node`.\n */\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  const search: t.Node[] = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n\n    const keys =\n      // @ts-expect-error getBindingIdentifiers.keys do not cover all AST types\n      getBindingIdentifiers.keys[id.type];\n\n    if (isIdentifier(id)) {\n      if (duplicates) {\n        const _ids = (ids[id.name] = ids[id.name] || []);\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n      continue;\n    }\n\n    if (isExportDeclaration(id) && !isExportAllDeclaration(id)) {\n      if (isDeclaration(id.declaration)) {\n        search.push(id.declaration);\n      }\n      continue;\n    }\n\n    if (outerOnly) {\n      if (isFunctionDeclaration(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if (isFunctionExpression(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes =\n          // @ts-expect-error key must present in id\n          id[key] as t.Node[] | t.Node | undefined | null;\n        if (nodes) {\n          Array.isArray(nodes) ? search.push(...nodes) : search.push(nodes);\n        }\n      }\n    }\n  }\n\n  // $FlowIssue Object.create() seems broken\n  return ids;\n}\n\n/**\n * Mapping of types to their identifier keys.\n */\ngetBindingIdentifiers.keys = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n\n  ObjectProperty: [\"value\"],\n\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"],\n};\n", "import getBindingIdentifiers from \"../retrievers/getBindingIdentifiers\";\nimport {\n  isExpression,\n  isExpressionStatement,\n  isVariableDeclaration,\n  isIfStatement,\n  isBlockStatement,\n  isEmptyStatement,\n} from \"../validators/generated\";\nimport {\n  sequenceExpression,\n  assignmentExpression,\n  conditionalExpression,\n} from \"../builders/generated\";\nimport cloneNode from \"../clone/cloneNode\";\nimport type * as t from \"..\";\nimport type { Scope } from \"@babel/traverse\";\n\nexport type DeclarationInfo = {\n  kind: t.VariableDeclaration[\"kind\"];\n  id: t.Identifier;\n};\n\nexport default function gatherSequenceExpressions(\n  nodes: ReadonlyArray<t.Node>,\n  scope: Scope,\n  declars: Array<DeclarationInfo>,\n) {\n  const exprs: t.Expression[] = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    // if we encounter emptyStatement before a non-emptyStatement\n    // we want to disregard that\n    if (!isEmptyStatement(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if (isExpression(node)) {\n      exprs.push(node);\n    } else if (isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return; // bailed\n\n      for (const declar of node.declarations) {\n        const bindings = getBindingIdentifiers(declar);\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: cloneNode(bindings[key]),\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (isIfStatement(node)) {\n      const consequent = node.consequent\n        ? gatherSequenceExpressions([node.consequent], scope, declars)\n        : scope.buildUndefinedNode();\n      const alternate = node.alternate\n        ? gatherSequenceExpressions([node.alternate], scope, declars)\n        : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return; // bailed\n\n      exprs.push(conditionalExpression(node.test, consequent, alternate));\n    } else if (isBlockStatement(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return; // bailed\n\n      exprs.push(body);\n    } else if (isEmptyStatement(node)) {\n      // empty statement so ensure the last item is undefined if we're last\n      // checks if emptyStatement is first\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      // bailed, we can't turn this statement into an expression\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return sequenceExpression(exprs);\n  }\n}\n", "import gatherSequenceExpressions from \"./gatherSequenceExpressions\";\nimport type * as t from \"..\";\nimport type { DeclarationInfo } from \"./gatherSequenceExpressions\";\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\nexport default function toSequenceExpression(\n  nodes: ReadonlyArray<t.Node>,\n  scope: any,\n): t.SequenceExpression | undefined {\n  if (!nodes?.length) return;\n\n  const declars: DeclarationInfo[] = [];\n  const result = gatherSequenceExpressions(nodes, scope, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  // @ts-expect-error fixme: gatherSequenceExpressions will return an Expression when there are only one element\n  return result;\n}\n", "import {\n  isStatement,\n  isFunction,\n  isClass,\n  isAssignmentExpression,\n} from \"../validators/generated\";\nimport { expressionStatement } from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default toStatement as {\n  (node: t.AssignmentExpression, ignore?: boolean): t.ExpressionStatement;\n\n  <T extends t.Statement>(node: T, ignore: false): T;\n  <T extends t.Statement>(node: T, ignore?: boolean): T | false;\n\n  (node: t.Class, ignore: false): t.ClassDeclaration;\n  (node: t.Class, ignore?: boolean): t.ClassDeclaration | false;\n\n  (node: t.Function, ignore: false): t.FunctionDeclaration;\n  (node: t.Function, ignore?: boolean): t.FunctionDeclaration | false;\n\n  (node: t.Node, ignore: false): t.Statement;\n  (node: t.Node, ignore?: boolean): t.Statement | false;\n};\n\nfunction toStatement(node: t.Node, ignore?: boolean): t.Statement | false {\n  if (isStatement(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if (isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\" as const;\n  } else if (isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\" as const;\n  } else if (isAssignmentExpression(node)) {\n    return expressionStatement(node);\n  }\n\n  // @ts-expect-error todo(flow->ts): node.id might be missing\n  if (mustHaveId && !node.id) {\n    newType = false as false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  // @ts-expect-error manipulating node.type\n  node.type = newType;\n\n  // @ts-expect-error todo(flow->ts) refactor to avoid type unsafe mutations like reassigning node type above\n  return node;\n}\n", "import isValidIdentifier from \"../validators/isValidIdentifier\";\nimport {\n  identifier,\n  booleanLiteral,\n  nullLiteral,\n  stringLiteral,\n  numericLiteral,\n  regExpLiteral,\n  arrayExpression,\n  objectProperty,\n  objectExpression,\n  unaryExpression,\n  binaryExpression,\n} from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default valueToNode as {\n  (value: undefined): t.Identifier; // TODO: This should return \"void 0\"\n  (value: boolean): t.BooleanLiteral;\n  (value: null): t.NullLiteral;\n  (value: string): t.StringLiteral;\n  // Infinities and NaN need to use a BinaryExpression; negative values must be wrapped in UnaryExpression\n  (value: number): t.NumericLiteral | t.BinaryExpression | t.UnaryExpression;\n  (value: RegExp): t.RegExpLiteral;\n  (value: ReadonlyArray<unknown>): t.ArrayExpression;\n\n  // this throws with objects that are not plain objects,\n  // or if there are non-valueToNode-able values\n  (value: object): t.ObjectExpression;\n\n  (value: unknown): t.Expression;\n};\n\n// @ts-expect-error: Object.prototype.toString must return a string\nconst objectToString: (value: unknown) => string = Function.call.bind(\n  Object.prototype.toString,\n);\n\nfunction isRegExp(value: unknown): value is RegExp {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value: unknown): value is object {\n  if (\n    typeof value !== \"object\" ||\n    value === null ||\n    Object.prototype.toString.call(value) !== \"[object Object]\"\n  ) {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(value);\n  // Object.prototype's __proto__ is null. Every other class's __proto__.__proto__ is\n  // not null by default. We cannot check if proto === Object.prototype because it\n  // could come from another realm.\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value: unknown): t.Expression {\n  // undefined\n  if (value === undefined) {\n    return identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return nullLiteral();\n  }\n\n  // strings\n  if (typeof value === \"string\") {\n    return stringLiteral(value);\n  }\n\n  // numbers\n  if (typeof value === \"number\") {\n    let result;\n    if (Number.isFinite(value)) {\n      result = numericLiteral(Math.abs(value));\n    } else {\n      let numerator;\n      if (Number.isNaN(value)) {\n        // NaN\n        numerator = numericLiteral(0);\n      } else {\n        // Infinity / -Infinity\n        numerator = numericLiteral(1);\n      }\n\n      result = binaryExpression(\"/\", numerator, numericLiteral(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = unaryExpression(\"-\", result);\n    }\n\n    return result;\n  }\n\n  // regexes\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return regExpLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return arrayExpression(value.map(valueToNode));\n  }\n\n  // object\n  if (isPlainObject(value)) {\n    const props = [];\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n      if (isValidIdentifier(key)) {\n        nodeKey = identifier(key);\n      } else {\n        nodeKey = stringLiteral(key);\n      }\n      props.push(\n        objectProperty(\n          nodeKey,\n          valueToNode(\n            // @ts-expect-error key must present in value\n            value[key],\n          ),\n        ),\n      );\n    }\n    return objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}\n", "import { memberExpression } from \"../builders/generated\";\nimport type * as t from \"..\";\n\n/**\n * Append a node to a member expression.\n */\nexport default function appendToMemberExpression(\n  member: t.MemberExpression,\n  append: t.MemberExpression[\"property\"],\n  computed: boolean = false,\n): t.MemberExpression {\n  member.object = memberExpression(\n    member.object,\n    member.property,\n    member.computed,\n  );\n  member.property = append;\n  member.computed = !!computed;\n\n  return member;\n}\n", "import { INHERIT_KEYS } from \"../constants\";\nimport inheritsComments from \"../comments/inheritsComments\";\nimport type * as t from \"..\";\n\n/**\n * Inherit all contextual properties from `parent` node to `child` node.\n */\nexport default function inherits<T extends t.Node | null | undefined>(\n  child: T,\n  parent: t.Node | null | undefined,\n): T {\n  if (!child || !parent) return child;\n\n  // optionally inherit specific properties if not null\n  for (const key of INHERIT_KEYS.optional) {\n    // @ts-expect-error Fixme: refine parent types\n    if (child[key] == null) {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit \"private\" properties\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit select properties\n  for (const key of INHERIT_KEYS.force) {\n    // @ts-expect-error Fixme: refine parent types\n    child[key] = parent[key];\n  }\n\n  inheritsComments(child, parent);\n\n  return child;\n}\n", "import { memberExpression } from \"../builders/generated\";\nimport { isSuper } from \"..\";\nimport type * as t from \"..\";\n\n/**\n * Prepend a node to a member expression.\n */\nexport default function prependToMemberExpression<\n  T extends Pick<t.MemberExpression, \"object\" | \"property\">,\n>(member: T, prepend: t.MemberExpression[\"object\"]): T {\n  if (isSuper(member.object)) {\n    throw new Error(\n      \"Cannot prepend node to super property access (`super.foo`).\",\n    );\n  }\n  member.object = memberExpression(prepend, member.object);\n\n  return member;\n}\n", "import getBindingIdentifiers from \"./getBindingIdentifiers\";\nimport type * as t from \"..\";\n\nexport default getOuterBindingIdentifiers as {\n  (node: t.Node, duplicates: true): Record<string, Array<t.Identifier>>;\n  (node: t.Node, duplicates?: false): Record<string, t.Identifier>;\n  (node: t.Node, duplicates?: boolean):\n    | Record<string, t.Identifier>\n    | Record<string, Array<t.Identifier>>;\n};\n\nfunction getOuterBindingIdentifiers(\n  node: t.Node,\n  duplicates: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  return getBindingIdentifiers(node, duplicates, true);\n}\n", "import { VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport type TraversalAncestors = Array<{\n  node: t.Node;\n  key: string;\n  index?: number;\n}>;\n\nexport type TraversalHandler<T> = (\n  this: undefined,\n  node: t.Node,\n  parent: TraversalAncestors,\n  state: T,\n) => void;\n\nexport type TraversalHandlers<T> = {\n  enter?: TraversalHandler<T>;\n  exit?: TraversalHandler<T>;\n};\n\n/**\n * A general AST traversal with both prefix and postfix handlers, and a\n * state object. Exposes ancestry data to each handler so that more complex\n * AST data can be taken into account.\n */\nexport default function traverse<T>(\n  node: t.Node,\n  handlers: TraversalHandler<T> | TraversalHandlers<T>,\n  state?: T,\n): void {\n  if (typeof handlers === \"function\") {\n    handlers = { enter: handlers };\n  }\n\n  const { enter, exit } = handlers as TraversalHandlers<T>;\n\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl<T>(\n  node: any,\n  enter: Function | undefined,\n  exit: Function | undefined,\n  state: T | undefined,\n  ancestors: TraversalAncestors,\n) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n\n        ancestors.push({\n          node,\n          key,\n          index: i,\n        });\n\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key,\n      });\n\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}\n", "import getBindingIdentifiers from \"../retrievers/getBindingIdentifiers\";\nimport type * as t from \"..\";\n/**\n * Check if the input `node` is a binding identifier.\n */\nexport default function isBinding(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  if (\n    grandparent &&\n    node.type === \"Identifier\" &&\n    parent.type === \"ObjectProperty\" &&\n    grandparent.type === \"ObjectExpression\"\n  ) {\n    // We need to special-case this, because getBindingIdentifiers\n    // has an ObjectProperty->value entry for destructuring patterns.\n    return false;\n  }\n\n  const keys =\n    // @ts-expect-error getBindingIdentifiers.keys does not cover all AST types\n    getBindingIdentifiers.keys[parent.type];\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val =\n        // @ts-expect-error key must present in parent\n        parent[key];\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}\n", "import { isVariableDeclaration } from \"./generated\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\nexport default function isLet(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node) &&\n    (node.kind !== \"var\" ||\n      // @ts-expect-error Fixme: document private properties\n      node[BLOCK_SCOPED_SYMBOL])\n  );\n}\n", "import { isClassDeclaration, isFunctionDeclaration } from \"./generated\";\nimport isLet from \"./isLet\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is block scoped.\n */\nexport default function isBlockScoped(node: t.Node): boolean {\n  return isFunctionDeclaration(node) || isClassDeclaration(node) || isLet(node);\n}\n", "import isType from \"./isType\";\nimport { isIdentifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is definitely immutable.\n */\nexport default function isImmutable(node: t.Node): boolean {\n  if (isType(node.type, \"Immutable\")) return true;\n\n  if (isIdentifier(node)) {\n    if (node.name === \"undefined\") {\n      // immutable!\n      return true;\n    } else {\n      // no idea...\n      return false;\n    }\n  }\n\n  return false;\n}\n", "import { NODE_FIELDS, VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\n/**\n * Check if two nodes are equivalent\n */\nexport default function isNodesEquivalent<T extends Partial<t.Node>>(\n  a: T,\n  b: any,\n): b is T {\n  if (\n    typeof a !== \"object\" ||\n    typeof b !== \"object\" ||\n    a == null ||\n    b == null\n  ) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a =\n      // @ts-expect-error field must present in a\n      a[field];\n    const val_b = b[field];\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !visitorKeys?.includes(field)) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import type * as t from \"..\";\n\n/**\n * Check if the input `node` is a reference to a bound variable.\n */\nexport default function isReferenced(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      // parent.value === node\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      // @ts-expect-error todo(flow->ts): Property 'source' does not exist on type 'AnyTypeAnnotation'.\n      if (grandparent?.source) {\n        return false;\n      }\n      return parent.local === node;\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n\n    // yes: type X = { somePropert: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}\n", "import {\n  isFunction,\n  isCatchClause,\n  isBlockStatement,\n  isScopable,\n  isPattern,\n} from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a scope.\n */\nexport default function isScope(node: t.Node, parent: t.Node): boolean {\n  // If a BlockStatement is an immediate descendent of a Function/CatchClause, it must be in the body.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isBlockStatement(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return false;\n  }\n\n  // If a Pattern is an immediate descendent of a Function/CatchClause, it must be in the params.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isPattern(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return true;\n  }\n\n  return isScopable(node);\n}\n", "import { isIdentifier, isImportDefaultSpecifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\nexport default function isSpecifierDefault(\n  specifier: t.ModuleSpecifier,\n): boolean {\n  return (\n    isImportDefaultSpecifier(specifier) ||\n    // @ts-expect-error todo(flow->ts): stricter type for specifier\n    isIdentifier(specifier.imported || specifier.exported, {\n      name: \"default\",\n    })\n  );\n}\n", "import isValidIdentifier from \"./isValidIdentifier\";\n\nconst RESERVED_WORDS_ES3_ONLY: Set<string> = new Set([\n  \"abstract\",\n  \"boolean\",\n  \"byte\",\n  \"char\",\n  \"double\",\n  \"enum\",\n  \"final\",\n  \"float\",\n  \"goto\",\n  \"implements\",\n  \"int\",\n  \"interface\",\n  \"long\",\n  \"native\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"short\",\n  \"static\",\n  \"synchronized\",\n  \"throws\",\n  \"transient\",\n  \"volatile\",\n]);\n\n/**\n * Check if the input `name` is a valid identifier name according to the ES3 specification.\n *\n * Additional ES3 reserved words are\n */\nexport default function isValidES3Identifier(name: string): boolean {\n  return isValidIdentifier(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}\n", "import { isVariableDeclaration } from \"./generated\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a variable declaration.\n */\nexport default function isVar(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node, { kind: \"var\" }) &&\n    !(\n      // @ts-expect-error document private properties\n      node[BLOCK_SCOPED_SYMBOL]\n    )\n  );\n}\n", "\n\n//# sourceMappingURL=index.js.map\n", "import isReactComponent from \"./validators/react/isReactComponent\";\nimport isCompatTag from \"./validators/react/isCompatTag\";\nimport buildChildren from \"./builders/react/buildChildren\";\n\n// asserts\nexport { default as assertNode } from \"./asserts/assertNode\";\nexport * from \"./asserts/generated\";\n\n// builders\nexport { default as createTypeAnnotationBasedOnTypeof } from \"./builders/flow/createTypeAnnotationBasedOnTypeof\";\n/** @deprecated use createFlowUnionType instead */\nexport { default as createUnionTypeAnnotation } from \"./builders/flow/createFlowUnionType\";\nexport { default as createFlowUnionType } from \"./builders/flow/createFlowUnionType\";\nexport { default as createTSUnionType } from \"./builders/typescript/createTSUnionType\";\nexport * from \"./builders/generated\";\nexport * from \"./builders/generated/uppercase\";\n\n// clone\nexport { default as cloneNode } from \"./clone/cloneNode\";\nexport { default as clone } from \"./clone/clone\";\nexport { default as cloneDeep } from \"./clone/cloneDeep\";\nexport { default as cloneDeepWithoutLoc } from \"./clone/cloneDeepWithoutLoc\";\nexport { default as cloneWithoutLoc } from \"./clone/cloneWithoutLoc\";\n\n// comments\nexport { default as addComment } from \"./comments/addComment\";\nexport { default as addComments } from \"./comments/addComments\";\nexport { default as inheritInnerComments } from \"./comments/inheritInnerComments\";\nexport { default as inheritLeadingComments } from \"./comments/inheritLeadingComments\";\nexport { default as inheritsComments } from \"./comments/inheritsComments\";\nexport { default as inheritTrailingComments } from \"./comments/inheritTrailingComments\";\nexport { default as removeComments } from \"./comments/removeComments\";\n\n// constants\nexport * from \"./constants/generated\";\nexport * from \"./constants\";\n\n// converters\nexport { default as ensureBlock } from \"./converters/ensureBlock\";\nexport { default as toBindingIdentifierName } from \"./converters/toBindingIdentifierName\";\nexport { default as toBlock } from \"./converters/toBlock\";\nexport { default as toComputedKey } from \"./converters/toComputedKey\";\nexport { default as toExpression } from \"./converters/toExpression\";\nexport { default as toIdentifier } from \"./converters/toIdentifier\";\nexport { default as toKeyAlias } from \"./converters/toKeyAlias\";\nexport { default as toSequenceExpression } from \"./converters/toSequenceExpression\";\nexport { default as toStatement } from \"./converters/toStatement\";\nexport { default as valueToNode } from \"./converters/valueToNode\";\n\n// definitions\nexport * from \"./definitions\";\n\n// modifications\nexport { default as appendToMemberExpression } from \"./modifications/appendToMemberExpression\";\nexport { default as inherits } from \"./modifications/inherits\";\nexport { default as prependToMemberExpression } from \"./modifications/prependToMemberExpression\";\nexport {\n  default as removeProperties,\n  type Options as RemovePropertiesOptions,\n} from \"./modifications/removeProperties\";\nexport { default as removePropertiesDeep } from \"./modifications/removePropertiesDeep\";\nexport { default as removeTypeDuplicates } from \"./modifications/flow/removeTypeDuplicates\";\n\n// retrievers\nexport { default as getBindingIdentifiers } from \"./retrievers/getBindingIdentifiers\";\nexport { default as getOuterBindingIdentifiers } from \"./retrievers/getOuterBindingIdentifiers\";\n\n// traverse\nexport { default as traverse } from \"./traverse/traverse\";\nexport * from \"./traverse/traverse\";\nexport { default as traverseFast } from \"./traverse/traverseFast\";\n\n// utils\nexport { default as shallowEqual } from \"./utils/shallowEqual\";\n\n// validators\nexport { default as is } from \"./validators/is\";\nexport { default as isBinding } from \"./validators/isBinding\";\nexport { default as isBlockScoped } from \"./validators/isBlockScoped\";\nexport { default as isImmutable } from \"./validators/isImmutable\";\nexport { default as isLet } from \"./validators/isLet\";\nexport { default as isNode } from \"./validators/isNode\";\nexport { default as isNodesEquivalent } from \"./validators/isNodesEquivalent\";\nexport { default as isPlaceholderType } from \"./validators/isPlaceholderType\";\nexport { default as isReferenced } from \"./validators/isReferenced\";\nexport { default as isScope } from \"./validators/isScope\";\nexport { default as isSpecifierDefault } from \"./validators/isSpecifierDefault\";\nexport { default as isType } from \"./validators/isType\";\nexport { default as isValidES3Identifier } from \"./validators/isValidES3Identifier\";\nexport { default as isValidIdentifier } from \"./validators/isValidIdentifier\";\nexport { default as isVar } from \"./validators/isVar\";\nexport { default as matchesPattern } from \"./validators/matchesPattern\";\nexport { default as validate } from \"./validators/validate\";\nexport { default as buildMatchMemberExpression } from \"./validators/buildMatchMemberExpression\";\nexport * from \"./validators/generated\";\n\n// react\nexport const react = {\n  isReactComponent,\n  isCompatTag,\n  buildChildren,\n};\n\nexport * from \"./ast-types/generated\";\n", "\"use strict\";\nexports.__esModule = true;\nfunction binaryOperation(operator, left, right) {\n    switch (operator) {\n        case '+':\n            return left + right;\n        case '-':\n            return left - right;\n        case '/':\n            return left / right;\n        case '%':\n            return left % right;\n        case '*':\n            return left * right;\n        case '**':\n            return Math.pow(left, right);\n        case '&':\n            return left & right;\n        case '|':\n            return left | right;\n        case '>>':\n            return left >> right;\n        case '>>>':\n            return left >>> right;\n        case '<<':\n            return left << right;\n        case '^':\n            return left ^ right;\n        case '==':\n            return left == right;\n        case '===':\n            return left === right;\n        case '!=':\n            return left != right;\n        case '!==':\n            return left !== right;\n        case 'in':\n            return left in right;\n        case 'instanceof':\n            return left instanceof right;\n        case '>':\n            return left > right;\n        case '<':\n            return left < right;\n        case '>=':\n            return left >= right;\n        case '<=':\n            return left <= right;\n    }\n}\nexports[\"default\"] = binaryOperation;\n", "\"use strict\";\nexports.__esModule = true;\nvar parser_1 = require(\"@babel/parser\");\nvar b = require(\"@babel/types\");\nvar binaryOperation_1 = require(\"./binaryOperation\");\nfunction expressionToConstant(expression, options) {\n    if (options === void 0) { options = {}; }\n    var constant = true;\n    function toConstant(expression) {\n        if (!constant)\n            return;\n        if (b.isArrayExpression(expression)) {\n            var result_1 = [];\n            for (var i = 0; constant && i < expression.elements.length; i++) {\n                var element = expression.elements[i];\n                if (b.isSpreadElement(element)) {\n                    var spread = toConstant(element.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        result_1.push.apply(result_1, spread);\n                    }\n                }\n                else if (b.isExpression(element)) {\n                    result_1.push(toConstant(element));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            return result_1;\n        }\n        if (b.isBinaryExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            return constant && binaryOperation_1[\"default\"](expression.operator, left, right);\n        }\n        if (b.isBooleanLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isCallExpression(expression)) {\n            var args = [];\n            for (var i = 0; constant && i < expression.arguments.length; i++) {\n                var arg = expression.arguments[i];\n                if (b.isSpreadElement(arg)) {\n                    var spread = toConstant(arg.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        args.push.apply(args, spread);\n                    }\n                }\n                else if (b.isExpression(arg)) {\n                    args.push(toConstant(arg));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            if (!constant)\n                return;\n            if (b.isMemberExpression(expression.callee)) {\n                var object = toConstant(expression.callee.object);\n                if (!object || !constant) {\n                    constant = false;\n                    return;\n                }\n                var member = expression.callee.computed\n                    ? toConstant(expression.callee.property)\n                    : b.isIdentifier(expression.callee.property)\n                        ? expression.callee.property.name\n                        : undefined;\n                if (member === undefined && !expression.callee.computed) {\n                    constant = false;\n                }\n                if (!constant)\n                    return;\n                if (canCallMethod(object, '' + member)) {\n                    return object[member].apply(object, args);\n                }\n            }\n            else {\n                if (!b.isExpression(expression.callee)) {\n                    constant = false;\n                    return;\n                }\n                var callee = toConstant(expression.callee);\n                if (!constant)\n                    return;\n                return callee.apply(null, args);\n            }\n        }\n        if (b.isConditionalExpression(expression)) {\n            var test = toConstant(expression.test);\n            return test\n                ? toConstant(expression.consequent)\n                : toConstant(expression.alternate);\n        }\n        if (b.isIdentifier(expression)) {\n            if (options.constants &&\n                {}.hasOwnProperty.call(options.constants, expression.name)) {\n                return options.constants[expression.name];\n            }\n        }\n        if (b.isLogicalExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            if (constant && expression.operator === '&&') {\n                return left && right;\n            }\n            if (constant && expression.operator === '||') {\n                return left || right;\n            }\n        }\n        if (b.isMemberExpression(expression)) {\n            var object = toConstant(expression.object);\n            if (!object || !constant) {\n                constant = false;\n                return;\n            }\n            var member = expression.computed\n                ? toConstant(expression.property)\n                : b.isIdentifier(expression.property)\n                    ? expression.property.name\n                    : undefined;\n            if (member === undefined && !expression.computed) {\n                constant = false;\n            }\n            if (!constant)\n                return;\n            if ({}.hasOwnProperty.call(object, '' + member) && member[0] !== '_') {\n                return object[member];\n            }\n        }\n        if (b.isNullLiteral(expression)) {\n            return null;\n        }\n        if (b.isNumericLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isObjectExpression(expression)) {\n            var result_2 = {};\n            for (var i = 0; constant && i < expression.properties.length; i++) {\n                var property = expression.properties[i];\n                if (b.isObjectProperty(property)) {\n                    if (property.shorthand) {\n                        constant = false;\n                        return;\n                    }\n                    var key = property.computed\n                        ? toConstant(property.key)\n                        : b.isIdentifier(property.key)\n                            ? property.key.name\n                            : b.isStringLiteral(property.key)\n                                ? property.key.value\n                                : undefined;\n                    if (!key || key[0] === '_') {\n                        constant = false;\n                    }\n                    if (!constant)\n                        return;\n                    if (b.isExpression(property.value)) {\n                        var value = toConstant(property.value);\n                        if (!constant)\n                            return;\n                        result_2[key] = value;\n                    }\n                    else {\n                        constant = false;\n                    }\n                }\n                else if (b.isObjectMethod(property)) {\n                    constant = false;\n                }\n                else if (b.isSpreadProperty(property)) {\n                    var argument = toConstant(property.argument);\n                    if (!argument)\n                        constant = false;\n                    if (!constant)\n                        return;\n                    Object.assign(result_2, argument);\n                }\n            }\n            return result_2;\n        }\n        if (b.isParenthesizedExpression(expression)) {\n            return toConstant(expression.expression);\n        }\n        if (b.isRegExpLiteral(expression)) {\n            return new RegExp(expression.pattern, expression.flags);\n        }\n        if (b.isSequenceExpression(expression)) {\n            for (var i = 0; i < expression.expressions.length - 1 && constant; i++) {\n                toConstant(expression.expressions[i]);\n            }\n            return toConstant(expression.expressions[expression.expressions.length - 1]);\n        }\n        if (b.isStringLiteral(expression)) {\n            return expression.value;\n        }\n        // TODO: TaggedTemplateExpression\n        if (b.isTemplateLiteral(expression)) {\n            var result_3 = '';\n            for (var i = 0; i < expression.quasis.length; i++) {\n                var quasi = expression.quasis[i];\n                result_3 += quasi.value.cooked;\n                if (i < expression.expressions.length) {\n                    result_3 += '' + toConstant(expression.expressions[i]);\n                }\n            }\n            return result_3;\n        }\n        if (b.isUnaryExpression(expression)) {\n            var argument = toConstant(expression.argument);\n            if (!constant) {\n                return;\n            }\n            switch (expression.operator) {\n                case '-':\n                    return -argument;\n                case '+':\n                    return +argument;\n                case '!':\n                    return !argument;\n                case '~':\n                    return ~argument;\n                case 'typeof':\n                    return typeof argument;\n                case 'void':\n                    return void argument;\n            }\n        }\n        constant = false;\n    }\n    var result = toConstant(expression);\n    return constant ? { constant: true, result: result } : { constant: false };\n}\nexports.expressionToConstant = expressionToConstant;\nfunction isSpreadable(value) {\n    return (typeof value === 'string' ||\n        Array.isArray(value) ||\n        (typeof Set !== 'undefined' && value instanceof Set) ||\n        (typeof Map !== 'undefined' && value instanceof Map));\n}\nfunction shallowEqual(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        for (var key in a) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        for (var key in b) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction canCallMethod(object, member) {\n    switch (typeof object) {\n        case 'boolean':\n            switch (member) {\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'number':\n            switch (member) {\n                case 'toExponential':\n                case 'toFixed':\n                case 'toPrecision':\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'string':\n            switch (member) {\n                case 'charAt':\n                case 'charCodeAt':\n                case 'codePointAt':\n                case 'concat':\n                case 'endsWith':\n                case 'includes':\n                case 'indexOf':\n                case 'lastIndexOf':\n                case 'match':\n                case 'normalize':\n                case 'padEnd':\n                case 'padStart':\n                case 'repeat':\n                case 'replace':\n                case 'search':\n                case 'slice':\n                case 'split':\n                case 'startsWith':\n                case 'substr':\n                case 'substring':\n                case 'toLowerCase':\n                case 'toUpperCase':\n                case 'trim':\n                    return true;\n                default:\n                    return false;\n            }\n        default:\n            if (object instanceof RegExp) {\n                switch (member) {\n                    case 'test':\n                    case 'exec':\n                        return true;\n                    default:\n                        return false;\n                }\n            }\n            return {}.hasOwnProperty.call(object, member) && member[0] !== '_';\n    }\n}\nvar EMPTY_OBJECT = {};\nvar lastSrc = '';\nvar lastConstants = EMPTY_OBJECT;\nvar lastOptions = EMPTY_OBJECT;\nvar lastResult = null;\nvar lastWasConstant = false;\nfunction isConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (lastSrc === src &&\n        shallowEqual(lastConstants, constants) &&\n        shallowEqual(lastOptions, options)) {\n        return lastWasConstant;\n    }\n    lastSrc = src;\n    lastConstants = constants;\n    var ast;\n    try {\n        ast = parser_1.parseExpression(src, options);\n    }\n    catch (ex) {\n        return (lastWasConstant = false);\n    }\n    var _a = expressionToConstant(ast, { constants: constants }), result = _a.result, constant = _a.constant;\n    lastResult = result;\n    return (lastWasConstant = constant);\n}\nexports.isConstant = isConstant;\nfunction toConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (!isConstant(src, constants, options)) {\n        throw new Error(JSON.stringify(src) + ' is not constant.');\n    }\n    return lastResult;\n}\nexports.toConstant = toConstant;\nexports[\"default\"] = isConstant;\nmodule.exports = isConstant;\nmodule.exports[\"default\"] = isConstant;\nmodule.exports.expressionToConstant = expressionToConstant;\nmodule.exports.isConstant = isConstant;\nmodule.exports.toConstant = toConstant;\n", "'use strict';\n\nvar dirname = require('path').dirname;\nvar constantinople = require('constantinople');\nvar walk = require('pug-walk');\nvar error = require('pug-error');\nvar runFilter = require('./run-filter');\n\nmodule.exports = handleFilters;\nfunction handleFilters(ast, filters, options, filterAliases) {\n  options = options || {};\n  walk(\n    ast,\n    function(node) {\n      var dir = node.filename ? dirname(node.filename) : null;\n      if (node.type === 'Filter') {\n        handleNestedFilters(node, filters, options, filterAliases);\n        var text = getBodyAsText(node);\n        var attrs = getAttributes(node, options);\n        attrs.filename = node.filename;\n        node.type = 'Text';\n        node.val = filterWithFallback(node, text, attrs);\n      } else if (node.type === 'RawInclude' && node.filters.length) {\n        var firstFilter = node.filters.pop();\n        var attrs = getAttributes(firstFilter, options);\n        var filename = (attrs.filename = node.file.fullPath);\n        node.type = 'Text';\n        node.val = filterFileWithFallback(\n          firstFilter,\n          filename,\n          node.file,\n          attrs\n        );\n        node.filters\n          .slice()\n          .reverse()\n          .forEach(function(filter) {\n            var attrs = getAttributes(filter, options);\n            attrs.filename = filename;\n            node.val = filterWithFallback(filter, node.val, attrs);\n          });\n        node.filters = undefined;\n        node.file = undefined;\n      }\n\n      function filterWithFallback(filter, text, attrs, funcName) {\n        try {\n          var filterName = getFilterName(filter);\n          if (filters && filters[filterName]) {\n            return filters[filterName](text, attrs);\n          } else {\n            return runFilter(filterName, text, attrs, dir, funcName);\n          }\n        } catch (ex) {\n          if (ex.code === 'UNKNOWN_FILTER') {\n            throw error(ex.code, ex.message, filter);\n          }\n          throw ex;\n        }\n      }\n\n      function filterFileWithFallback(filter, filename, file, attrs) {\n        var filterName = getFilterName(filter);\n        if (filters && filters[filterName]) {\n          if (filters[filterName].renderBuffer) {\n            return filters[filterName].renderBuffer(file.raw, attrs);\n          } else {\n            return filters[filterName](file.str, attrs);\n          }\n        } else {\n          return filterWithFallback(filter, filename, attrs, 'renderFile');\n        }\n      }\n    },\n    {includeDependencies: true}\n  );\n  function getFilterName(filter) {\n    var filterName = filter.name;\n    if (filterAliases && filterAliases[filterName]) {\n      filterName = filterAliases[filterName];\n      if (filterAliases[filterName]) {\n        throw error(\n          'FILTER_ALISE_CHAIN',\n          'The filter \"' +\n            filter.name +\n            '\" is an alias for \"' +\n            filterName +\n            '\", which is an alias for \"' +\n            filterAliases[filterName] +\n            '\".  Pug does not support chains of filter aliases.',\n          filter\n        );\n      }\n    }\n    return filterName;\n  }\n  return ast;\n}\n\nfunction handleNestedFilters(node, filters, options, filterAliases) {\n  if (node.block.nodes[0] && node.block.nodes[0].type === 'Filter') {\n    node.block.nodes[0] = handleFilters(\n      node.block,\n      filters,\n      options,\n      filterAliases\n    ).nodes[0];\n  }\n}\n\nfunction getBodyAsText(node) {\n  return node.block.nodes\n    .map(function(node) {\n      return node.val;\n    })\n    .join('');\n}\n\nfunction getAttributes(node, options) {\n  var attrs = {};\n  node.attrs.forEach(function(attr) {\n    try {\n      attrs[attr.name] =\n        attr.val === true ? true : constantinople.toConstant(attr.val);\n    } catch (ex) {\n      if (/not constant/.test(ex.message)) {\n        throw error(\n          'FILTER_OPTION_NOT_CONSTANT',\n          ex.message +\n            ' All filters are rendered compile-time so filter options must be constants.',\n          node\n        );\n      }\n      throw ex;\n    }\n  });\n  var opts = options[node.name] || {};\n  Object.keys(opts).forEach(function(opt) {\n    if (!attrs.hasOwnProperty(opt)) {\n      attrs[opt] = opts[opt];\n    }\n  });\n  return attrs;\n}\n", "'use strict';\n\nexports.runFilter = require('./lib/run-filter');\nexports.handleFilters = require('./lib/handle-filters');\n", "'use strict';\n\nvar assert = require('assert');\nvar walk = require('pug-walk');\n\nfunction error() {\n  throw require('pug-error').apply(null, arguments);\n}\n\nmodule.exports = link;\nfunction link(ast) {\n  assert(\n    ast.type === 'Block',\n    'The top level element should always be a block'\n  );\n  var extendsNode = null;\n  if (ast.nodes.length) {\n    var hasExtends = ast.nodes[0].type === 'Extends';\n    checkExtendPosition(ast, hasExtends);\n    if (hasExtends) {\n      extendsNode = ast.nodes.shift();\n    }\n  }\n  ast = applyIncludes(ast);\n  ast.declaredBlocks = findDeclaredBlocks(ast);\n  if (extendsNode) {\n    var mixins = [];\n    var expectedBlocks = [];\n    ast.nodes.forEach(function addNode(node) {\n      if (node.type === 'NamedBlock') {\n        expectedBlocks.push(node);\n      } else if (node.type === 'Block') {\n        node.nodes.forEach(addNode);\n      } else if (node.type === 'Mixin' && node.call === false) {\n        mixins.push(node);\n      } else {\n        error(\n          'UNEXPECTED_NODES_IN_EXTENDING_ROOT',\n          'Only named blocks and mixins can appear at the top level of an extending template',\n          node\n        );\n      }\n    });\n    var parent = link(extendsNode.file.ast);\n    extend(parent.declaredBlocks, ast);\n    var foundBlockNames = [];\n    walk(parent, function(node) {\n      if (node.type === 'NamedBlock') {\n        foundBlockNames.push(node.name);\n      }\n    });\n    expectedBlocks.forEach(function(expectedBlock) {\n      if (foundBlockNames.indexOf(expectedBlock.name) === -1) {\n        error(\n          'UNEXPECTED_BLOCK',\n          'Unexpected block ' + expectedBlock.name,\n          expectedBlock\n        );\n      }\n    });\n    Object.keys(ast.declaredBlocks).forEach(function(name) {\n      parent.declaredBlocks[name] = ast.declaredBlocks[name];\n    });\n    parent.nodes = mixins.concat(parent.nodes);\n    parent.hasExtends = true;\n    return parent;\n  }\n  return ast;\n}\n\nfunction findDeclaredBlocks(ast) /*: {[name: string]: Array<BlockNode>}*/ {\n  var definitions = {};\n  walk(ast, function before(node) {\n    if (node.type === 'NamedBlock' && node.mode === 'replace') {\n      definitions[node.name] = definitions[node.name] || [];\n      definitions[node.name].push(node);\n    }\n  });\n  return definitions;\n}\n\nfunction flattenParentBlocks(parentBlocks, accumulator) {\n  accumulator = accumulator || [];\n  parentBlocks.forEach(function(parentBlock) {\n    if (parentBlock.parents) {\n      flattenParentBlocks(parentBlock.parents, accumulator);\n    }\n    accumulator.push(parentBlock);\n  });\n  return accumulator;\n}\n\nfunction extend(parentBlocks, ast) {\n  var stack = {};\n  walk(\n    ast,\n    function before(node) {\n      if (node.type === 'NamedBlock') {\n        if (stack[node.name] === node.name) {\n          return (node.ignore = true);\n        }\n        stack[node.name] = node.name;\n        var parentBlockList = parentBlocks[node.name]\n          ? flattenParentBlocks(parentBlocks[node.name])\n          : [];\n        if (parentBlockList.length) {\n          node.parents = parentBlockList;\n          parentBlockList.forEach(function(parentBlock) {\n            switch (node.mode) {\n              case 'append':\n                parentBlock.nodes = parentBlock.nodes.concat(node.nodes);\n                break;\n              case 'prepend':\n                parentBlock.nodes = node.nodes.concat(parentBlock.nodes);\n                break;\n              case 'replace':\n                parentBlock.nodes = node.nodes;\n                break;\n            }\n          });\n        }\n      }\n    },\n    function after(node) {\n      if (node.type === 'NamedBlock' && !node.ignore) {\n        delete stack[node.name];\n      }\n    }\n  );\n}\n\nfunction applyIncludes(ast, child) {\n  return walk(\n    ast,\n    function before(node, replace) {\n      if (node.type === 'RawInclude') {\n        replace({type: 'Text', val: node.file.str.replace(/\\r/g, '')});\n      }\n    },\n    function after(node, replace) {\n      if (node.type === 'Include') {\n        var childAST = link(node.file.ast);\n        if (childAST.hasExtends) {\n          childAST = removeBlocks(childAST);\n        }\n        replace(applyYield(childAST, node.block));\n      }\n    }\n  );\n}\nfunction removeBlocks(ast) {\n  return walk(ast, function(node, replace) {\n    if (node.type === 'NamedBlock') {\n      replace({\n        type: 'Block',\n        nodes: node.nodes,\n      });\n    }\n  });\n}\n\nfunction applyYield(ast, block) {\n  if (!block || !block.nodes.length) return ast;\n  var replaced = false;\n  ast = walk(ast, null, function(node, replace) {\n    if (node.type === 'YieldBlock') {\n      replaced = true;\n      node.type = 'Block';\n      node.nodes = [block];\n    }\n  });\n  function defaultYieldLocation(node) {\n    var res = node;\n    for (var i = 0; i < node.nodes.length; i++) {\n      if (node.nodes[i].textOnly) continue;\n      if (node.nodes[i].type === 'Block') {\n        res = defaultYieldLocation(node.nodes[i]);\n      } else if (node.nodes[i].block && node.nodes[i].block.nodes.length) {\n        res = defaultYieldLocation(node.nodes[i].block);\n      }\n    }\n    return res;\n  }\n  if (!replaced) {\n    // todo: probably should deprecate this with a warning\n    defaultYieldLocation(ast).nodes.push(block);\n  }\n  return ast;\n}\n\nfunction checkExtendPosition(ast, hasExtends) {\n  var legitExtendsReached = false;\n  walk(ast, function(node) {\n    if (node.type === 'Extends') {\n      if (hasExtends && !legitExtendsReached) {\n        legitExtendsReached = true;\n      } else {\n        error(\n          'EXTENDS_NOT_FIRST',\n          'Declaration of template inheritance (\"extends\") should be the first thing in the file. There can only be one extends statement per file.',\n          node\n        );\n      }\n    }\n  });\n}\n", "'use strict';\n\nmodule.exports = {\n  'html': '<!DOCTYPE html>',\n  'xml': '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\n  'transitional': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">',\n  'strict': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">',\n  'frameset': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">',\n  '1.1': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">',\n  'basic': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\" \"http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd\">',\n  'mobile': '<!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.2//EN\" \"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd\">',\n  'plist': '<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">'\n};\n", "module.exports = {\n  \"has_own_property\": [],\n  \"merge\": [\n    \"style\"\n  ],\n  \"classes_array\": [\n    \"classes\",\n    \"escape\"\n  ],\n  \"classes_object\": [\n    \"has_own_property\"\n  ],\n  \"classes\": [\n    \"classes_array\",\n    \"classes_object\"\n  ],\n  \"style\": [\n    \"has_own_property\"\n  ],\n  \"attr\": [\n    \"escape\"\n  ],\n  \"attrs\": [\n    \"attr\",\n    \"classes\",\n    \"has_own_property\",\n    \"style\"\n  ],\n  \"match_html\": [],\n  \"escape\": [\n    \"match_html\"\n  ],\n  \"rethrow\": []\n}\n", "module.exports = {\n  \"dependencies\": true,\n  \"internals\": true,\n  \"has_own_property\": true,\n  \"classes_array\": true,\n  \"classes_object\": true,\n  \"match_html\": true\n}\n", "module.exports = {\n  \"has_own_property\": \"var pug_has_own_property=Object.prototype.hasOwnProperty;\",\n  \"merge\": \"function pug_merge(e,r){if(1===arguments.length){for(var t=e[0],g=1;g<e.length;g++)t=pug_merge(t,e[g]);return t}for(var l in r)if(\\\"class\\\"===l){var n=e[l]||[];e[l]=(Array.isArray(n)?n:[n]).concat(r[l]||[])}else if(\\\"style\\\"===l){var n=pug_style(e[l]);n=n&&\\\";\\\"!==n[n.length-1]?n+\\\";\\\":n;var a=pug_style(r[l]);a=a&&\\\";\\\"!==a[a.length-1]?a+\\\";\\\":a,e[l]=n+a}else e[l]=r[l];return e}\",\n  \"classes_array\": \"function pug_classes_array(r,a){for(var s,e=\\\"\\\",u=\\\"\\\",c=Array.isArray(a),g=0;g<r.length;g++)(s=pug_classes(r[g]))&&(c&&a[g]&&(s=pug_escape(s)),e=e+u+s,u=\\\" \\\");return e}\",\n  \"classes_object\": \"function pug_classes_object(r){var a=\\\"\\\",n=\\\"\\\";for(var o in r)o&&r[o]&&pug_has_own_property.call(r,o)&&(a=a+n+o,n=\\\" \\\");return a}\",\n  \"classes\": \"function pug_classes(s,r){return Array.isArray(s)?pug_classes_array(s,r):s&&\\\"object\\\"==typeof s?pug_classes_object(s):s||\\\"\\\"}\",\n  \"style\": \"function pug_style(r){if(!r)return\\\"\\\";if(\\\"object\\\"==typeof r){var t=\\\"\\\";for(var e in r)pug_has_own_property.call(r,e)&&(t=t+e+\\\":\\\"+r[e]+\\\";\\\");return t}return r+\\\"\\\"}\",\n  \"attr\": \"function pug_attr(t,e,n,r){if(!1===e||null==e||!e&&(\\\"class\\\"===t||\\\"style\\\"===t))return\\\"\\\";if(!0===e)return\\\" \\\"+(r?t:t+'=\\\"'+t+'\\\"');var f=typeof e;return\\\"object\\\"!==f&&\\\"function\\\"!==f||\\\"function\\\"!=typeof e.toJSON||(e=e.toJSON()),\\\"string\\\"==typeof e||(e=JSON.stringify(e),n||-1===e.indexOf('\\\"'))?(n&&(e=pug_escape(e)),\\\" \\\"+t+'=\\\"'+e+'\\\"'):\\\" \\\"+t+\\\"='\\\"+e.replace(/'/g,\\\"&#39;\\\")+\\\"'\\\"}\",\n  \"attrs\": \"function pug_attrs(t,r){var a=\\\"\\\";for(var s in t)if(pug_has_own_property.call(t,s)){var u=t[s];if(\\\"class\\\"===s){u=pug_classes(u),a=pug_attr(s,u,!1,r)+a;continue}\\\"style\\\"===s&&(u=pug_style(u)),a+=pug_attr(s,u,!1,r)}return a}\",\n  \"match_html\": \"var pug_match_html=/[\\\"&<>]/;\",\n  \"escape\": \"function pug_escape(e){var a=\\\"\\\"+e,t=pug_match_html.exec(a);if(!t)return e;var r,c,n,s=\\\"\\\";for(r=t.index,c=0;r<a.length;r++){switch(a.charCodeAt(r)){case 34:n=\\\"&quot;\\\";break;case 38:n=\\\"&amp;\\\";break;case 60:n=\\\"&lt;\\\";break;case 62:n=\\\"&gt;\\\";break;default:continue}c!==r&&(s+=a.substring(c,r)),c=r+1,s+=n}return c!==r?s+a.substring(c,r):s}\",\n  \"rethrow\": \"function pug_rethrow(e,n,r,t){if(!(e instanceof Error))throw e;if(!(\\\"undefined\\\"==typeof window&&n||t))throw e.message+=\\\" on line \\\"+r,e;var o,a,i,s;try{t=t||require(\\\"fs\\\").readFileSync(n,{encoding:\\\"utf8\\\"}),o=3,a=t.split(\\\"\\\\n\\\"),i=Math.max(r-o,0),s=Math.min(a.length,r+o)}catch(t){return e.message+=\\\" - could not read from \\\"+n+\\\" (\\\"+t.message+\\\")\\\",void pug_rethrow(e,null,r)}o=a.slice(i,s).map(function(e,n){var t=n+i+1;return(t==r?\\\"  > \\\":\\\"    \\\")+t+\\\"| \\\"+e}).join(\\\"\\\\n\\\"),e.path=n;try{e.message=(n||\\\"Pug\\\")+\\\":\\\"+r+\\\"\\\\n\\\"+o+\\\"\\\\n\\\\n\\\"+e.message}catch(e){}throw e}\"\n}\n", "'use strict';\n\nvar fs = require('fs');\nvar dependencies = require('./lib/dependencies.js');\nvar internals = require('./lib/internals.js');\nvar sources = require('./lib/sources.js');\n\nmodule.exports = build;\n\nfunction build(functions) {\n  var fns = [];\n  functions = functions.filter(function(fn) {\n    return !internals[fn];\n  });\n  for (var i = 0; i < functions.length; i++) {\n    if (fns.indexOf(functions[i]) === -1) {\n      fns.push(functions[i]);\n      functions.push.apply(functions, dependencies[functions[i]]);\n    }\n  }\n  return fns\n    .sort()\n    .map(function(name) {\n      return sources[name];\n    })\n    .join('\\n');\n}\n", "'use strict';\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;\n      var valB = pug_style(b[key]);\n      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n}\n\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\nexports.classes = pug_classes;\nfunction pug_classes_array(val, escaping) {\n  var classString = '',\n    className,\n    padding = '',\n    escapeEnabled = Array.isArray(escaping);\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n  return classString;\n}\nfunction pug_classes_object(val) {\n  var classString = '',\n    padding = '';\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n  return classString;\n}\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\nexports.style = pug_style;\nfunction pug_style(val) {\n  if (!val) return '';\n  if (typeof val === 'object') {\n    var out = '';\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n    return out;\n  } else {\n    return val + '';\n  }\n}\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = pug_attr;\nfunction pug_attr(key, val, escaped, terse) {\n  if (\n    val === false ||\n    val == null ||\n    (!val && (key === 'class' || key === 'style'))\n  ) {\n    return '';\n  }\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n  var type = typeof val;\n  if (\n    (type === 'object' || type === 'function') &&\n    typeof val.toJSON === 'function'\n  ) {\n    val = val.toJSON();\n  }\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + \"='\" + val.replace(/'/g, '&#39;') + \"'\";\n    }\n  }\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n}\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\nexports.attrs = pug_attrs;\nfunction pug_attrs(obj, terse) {\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n}\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\nfunction pug_escape(_html) {\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n\n  var result = '';\n  var i, lastIndex, escape;\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34:\n        escape = '&quot;';\n        break;\n      case 38:\n        escape = '&amp;';\n        break;\n      case 60:\n        escape = '&lt;';\n        break;\n      case 62:\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);\n  else return result;\n}\n\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\nexports.rethrow = pug_rethrow;\nfunction pug_rethrow(err, filename, lineno, str) {\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  var context, lines, start, end;\n  try {\n    str = str || require('fs').readFileSync(filename, {encoding: 'utf8'});\n    context = 3;\n    lines = str.split('\\n');\n    start = Math.max(lineno - context, 0);\n    end = Math.min(lines.length, lineno + context);\n  } catch (ex) {\n    err.message +=\n      ' - could not read from ' + filename + ' (' + ex.message + ')';\n    pug_rethrow(err, null, lineno);\n    return;\n  }\n\n  // Error context\n  context = lines\n    .slice(start, end)\n    .map(function(line, i) {\n      var curr = i + start + 1;\n      return (curr == lineno ? '  > ' : '    ') + curr + '| ' + line;\n    })\n    .join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  try {\n    err.message =\n      (filename || 'Pug') +\n      ':' +\n      lineno +\n      '\\n' +\n      context +\n      '\\n\\n' +\n      err.message;\n  } catch (e) {}\n  throw err;\n}\n", "'use strict';\n\nmodule.exports = stringify;\nfunction stringify(obj) {\n  if (obj instanceof Date) {\n    return 'new Date(' + stringify(obj.toISOString()) + ')';\n  }\n  if (obj === undefined) {\n    return 'undefined';\n  }\n  return JSON.stringify(obj)\n             .replace(/\\u2028/g, '\\\\u2028')\n             .replace(/\\u2029/g, '\\\\u2029')\n             .replace(/</g, '\\\\u003C')\n             .replace(/>/g, '\\\\u003E')\n             .replace(/\\//g, '\\\\u002F');\n}\n", "'use strict';\n\nvar assert = require('assert');\nvar constantinople = require('constantinople');\nvar runtime = require('pug-runtime');\nvar stringify = require('js-stringify');\n\nfunction isConstant(src) {\n  return constantinople(src, {pug: runtime, pug_interp: undefined});\n}\nfunction toConstant(src) {\n  return constantinople.toConstant(src, {pug: runtime, pug_interp: undefined});\n}\n\nmodule.exports = compileAttrs;\n/**\n * options:\n *  - terse\n *  - runtime\n *  - format ('html' || 'object')\n */\nfunction compileAttrs(attrs, options) {\n  assert(Array.isArray(attrs), 'Attrs should be an array');\n  assert(\n    attrs.every(function(attr) {\n      return (\n        attr &&\n        typeof attr === 'object' &&\n        typeof attr.name === 'string' &&\n        (typeof attr.val === 'string' || typeof attr.val === 'boolean') &&\n        typeof attr.mustEscape === 'boolean'\n      );\n    }),\n    'All attributes should be supplied as an object of the form {name, val, mustEscape}'\n  );\n  assert(options && typeof options === 'object', 'Options should be an object');\n  assert(\n    typeof options.terse === 'boolean',\n    'Options.terse should be a boolean'\n  );\n  assert(\n    typeof options.runtime === 'function',\n    'Options.runtime should be a function that takes a runtime function name and returns the source code that will evaluate to that function at runtime'\n  );\n  assert(\n    options.format === 'html' || options.format === 'object',\n    'Options.format should be \"html\" or \"object\"'\n  );\n\n  var buf = [];\n  var classes = [];\n  var classEscaping = [];\n\n  function addAttribute(key, val, mustEscape, buf) {\n    if (isConstant(val)) {\n      if (options.format === 'html') {\n        var str = stringify(\n          runtime.attr(key, toConstant(val), mustEscape, options.terse)\n        );\n        var last = buf[buf.length - 1];\n        if (last && last[last.length - 1] === str[0]) {\n          buf[buf.length - 1] = last.substr(0, last.length - 1) + str.substr(1);\n        } else {\n          buf.push(str);\n        }\n      } else {\n        val = toConstant(val);\n        if (mustEscape) {\n          val = runtime.escape(val);\n        }\n        buf.push(stringify(key) + ': ' + stringify(val));\n      }\n    } else {\n      if (options.format === 'html') {\n        buf.push(\n          options.runtime('attr') +\n            '(\"' +\n            key +\n            '\", ' +\n            val +\n            ', ' +\n            stringify(mustEscape) +\n            ', ' +\n            stringify(options.terse) +\n            ')'\n        );\n      } else {\n        if (mustEscape) {\n          val = options.runtime('escape') + '(' + val + ')';\n        }\n        buf.push(stringify(key) + ': ' + val);\n      }\n    }\n  }\n\n  attrs.forEach(function(attr) {\n    var key = attr.name;\n    var val = attr.val;\n    var mustEscape = attr.mustEscape;\n\n    if (key === 'class') {\n      classes.push(val);\n      classEscaping.push(mustEscape);\n    } else {\n      if (key === 'style') {\n        if (isConstant(val)) {\n          val = stringify(runtime.style(toConstant(val)));\n        } else {\n          val = options.runtime('style') + '(' + val + ')';\n        }\n      }\n      addAttribute(key, val, mustEscape, buf);\n    }\n  });\n  var classesBuf = [];\n  if (classes.length) {\n    if (classes.every(isConstant)) {\n      addAttribute(\n        'class',\n        stringify(runtime.classes(classes.map(toConstant), classEscaping)),\n        false,\n        classesBuf\n      );\n    } else {\n      classes = classes.map(function(cls, i) {\n        if (isConstant(cls)) {\n          cls = stringify(\n            classEscaping[i] ? runtime.escape(toConstant(cls)) : toConstant(cls)\n          );\n          classEscaping[i] = false;\n        }\n        return cls;\n      });\n      addAttribute(\n        'class',\n        options.runtime('classes') +\n          '([' +\n          classes.join(',') +\n          '], ' +\n          stringify(classEscaping) +\n          ')',\n        false,\n        classesBuf\n      );\n    }\n  }\n  buf = classesBuf.concat(buf);\n  if (options.format === 'html') return buf.length ? buf.join('+') : '\"\"';\n  else return '{' + buf.join(',') + '}';\n}\n", "/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper function for exhaustive checks of discriminated unions.\n * https://basarat.gitbooks.io/typescript/docs/types/discriminated-unions.html\n *\n * @example\n *\n *    type A = {type: 'a'};\n *    type B = {type: 'b'};\n *    type Union = A | B;\n *\n *    function doSomething(arg: Union) {\n *      if (arg.type === 'a') {\n *        return something;\n *      }\n *\n *      if (arg.type === 'b') {\n *        return somethingElse;\n *      }\n *\n *      // TS will error if there are other types in the union\n *      // Will throw an Error when called at runtime.\n *      // Use `assertNever(arg, true)` instead to fail silently.\n *      return assertNever(arg);\n *    }\n */\nfunction assertNever(value, noThrow) {\n    if (noThrow) {\n        return value;\n    }\n    throw new Error(\"Unhandled discriminated union member: \" + JSON.stringify(value));\n}\nexports.assertNever = assertNever;\nexports.default = assertNever;\n", "import * as t from '@babel/types';\n\nexport default function isReferenced(node: t.Node, parent: t.Node) {\n  switch (parent.type) {\n    // yes: { [NODE]: '' }\n    // yes: { NODE }\n    // no: { NODE: '' }\n    case 'ObjectProperty':\n      return parent.value === node || parent.computed;\n\n    // no: break NODE;\n    // no: continue NODE;\n    case 'BreakStatement':\n    case 'ContinueStatement':\n      return false;\n\n    // yes: left = NODE;\n    // yes: NODE = right;\n    case 'AssignmentExpression':\n      return true;\n  }\n\n  return t.isReferenced(node, parent);\n}\n", "import assertNever from 'assert-never';\nimport {ancestor as walk} from 'babel-walk';\nimport * as t from '@babel/types';\nimport isReferenced from './reference';\n\nconst isScope = (node: t.Node) => t.isFunctionParent(node) || t.isProgram(node);\nconst isBlockScope = (node: t.Node) =>\n  t.isBlockStatement(node) || isScope(node);\n\nconst declaresArguments = (node: t.Node) =>\n  t.isFunction(node) && !t.isArrowFunctionExpression(node);\n\nconst declaresThis = declaresArguments;\n\nconst LOCALS_SYMBOL = Symbol('locals');\n\nconst getLocals = (node: t.Node): Set<string> | undefined =>\n  (node as any)[LOCALS_SYMBOL];\nconst declareLocals = (node: t.Node): Set<string> =>\n  ((node as any)[LOCALS_SYMBOL] = (node as any)[LOCALS_SYMBOL] || new Set());\n\nconst setLocal = (node: t.Node, name: string) => declareLocals(node).add(name);\n\n// First pass\n\nfunction declareFunction(node: t.Function) {\n  for (const param of node.params) {\n    declarePattern(param, node);\n  }\n  const id = (node as t.FunctionDeclaration).id;\n  if (id) {\n    setLocal(node, id.name);\n  }\n}\n\nfunction declarePattern(node: t.LVal, parent: t.Node) {\n  switch (node.type) {\n    case 'Identifier':\n      setLocal(parent, node.name);\n      break;\n    case 'ObjectPattern':\n      for (const prop of node.properties) {\n        switch (prop.type) {\n          case 'RestElement':\n            declarePattern(prop.argument, parent);\n            break;\n          case 'ObjectProperty':\n            declarePattern(prop.value as t.LVal, parent);\n            break;\n          default:\n            assertNever(prop);\n            break;\n        }\n      }\n      break;\n    case 'ArrayPattern':\n      for (const element of node.elements) {\n        if (element) declarePattern(element, parent);\n      }\n      break;\n    case 'RestElement':\n      declarePattern(node.argument, parent);\n      break;\n    case 'AssignmentPattern':\n      declarePattern(node.left, parent);\n      break;\n    // istanbul ignore next\n    default:\n      throw new Error('Unrecognized pattern type: ' + node.type);\n  }\n}\n\nfunction declareModuleSpecifier(\n  node:\n    | t.ImportSpecifier\n    | t.ImportDefaultSpecifier\n    | t.ImportNamespaceSpecifier,\n  _state: unknown,\n  parents: t.Node[],\n) {\n  for (let i = parents.length - 2; i >= 0; i--) {\n    if (isScope(parents[i])) {\n      setLocal(parents[i], node.local.name);\n      return;\n    }\n  }\n}\n\nconst firstPass = walk({\n  VariableDeclaration(node, _state, parents) {\n    for (let i = parents.length - 2; i >= 0; i--) {\n      if (\n        node.kind === 'var'\n          ? t.isFunctionParent(parents[i])\n          : isBlockScope(parents[i])\n      ) {\n        for (const declaration of node.declarations) {\n          declarePattern(declaration.id, parents[i]);\n        }\n        return;\n      }\n    }\n  },\n  FunctionDeclaration(node, _state, parents) {\n    if (node.id) {\n      for (let i = parents.length - 2; i >= 0; i--) {\n        if (isScope(parents[i])) {\n          setLocal(parents[i], node.id.name);\n          return;\n        }\n      }\n    }\n  },\n  Function: declareFunction,\n  ClassDeclaration(node, _state, parents) {\n    for (let i = parents.length - 2; i >= 0; i--) {\n      if (isScope(parents[i])) {\n        setLocal(parents[i], node.id.name);\n        return;\n      }\n    }\n  },\n  TryStatement(node) {\n    if (node.handler === null) return;\n    if (node.handler.param === null) return;\n    declarePattern(node.handler.param, node.handler);\n  },\n  ImportDefaultSpecifier: declareModuleSpecifier,\n  ImportSpecifier: declareModuleSpecifier,\n  ImportNamespaceSpecifier: declareModuleSpecifier,\n});\n\n// Second pass\n\nconst secondPass = walk<{\n  globals: (t.Identifier | t.ThisExpression)[];\n}>({\n  Identifier(node, state, parents) {\n    const name = node.name;\n    if (name === 'undefined') return;\n\n    const lastParent = parents[parents.length - 2];\n    if (lastParent) {\n      if (!isReferenced(node, lastParent)) return;\n\n      for (const parent of parents) {\n        if (name === 'arguments' && declaresArguments(parent)) {\n          return;\n        }\n        if (getLocals(parent)?.has(name)) {\n          return;\n        }\n      }\n    }\n\n    state.globals.push(node);\n  },\n\n  ThisExpression(node, state, parents) {\n    for (const parent of parents) {\n      if (declaresThis(parent)) {\n        return;\n      }\n    }\n\n    state.globals.push(node);\n  },\n});\n\nexport default function findGlobals(ast: t.Node) {\n  const globals: (t.Identifier | t.ThisExpression)[] = [];\n\n  // istanbul ignore if\n  if (!t.isNode(ast)) {\n    throw new TypeError('Source must be a Babylon AST');\n  }\n\n  firstPass(ast, undefined);\n  secondPass(ast, {globals});\n\n  const groupedGlobals = new Map<string, (t.Identifier | t.ThisExpression)[]>();\n  for (const node of globals) {\n    const name: string = node.type === 'ThisExpression' ? 'this' : node.name;\n    const existing = groupedGlobals.get(name);\n    if (existing) {\n      existing.push(node);\n    } else {\n      groupedGlobals.set(name, [node]);\n    }\n  }\n\n  return [...groupedGlobals]\n    .map(([name, nodes]) => ({name, nodes}))\n    .sort((a, b) => (a.name < b.name ? -1 : 1));\n}\n", "import {parse} from '@babel/parser';\nimport {recursive as walk} from 'babel-walk';\nimport * as t from '@babel/types';\nimport detect from './globals';\n\nconst parseOptions = {\n  allowReturnOutsideFunction: true,\n  allowImportExportEverywhere: true,\n};\n\n/**\n * Mimic `with` as far as possible but at compile time\n *\n * @param obj The object part of a with expression\n * @param src The body of the with expression\n * @param exclude A list of variable names to explicitly exclude\n */\nexport default function addWith(\n  obj: string,\n  src: string,\n  exclude: string[] = [],\n) {\n  // tslint:disable-next-line: no-parameter-reassignment\n  obj = obj + '';\n  // tslint:disable-next-line: no-parameter-reassignment\n  src = src + '';\n\n  let ast;\n  try {\n    ast = parse(src, parseOptions);\n  } catch (e) {\n    throw Object.assign(\n      new Error('Error parsing body of the with expression'),\n      {\n        component: 'src',\n        babylonError: e,\n      },\n    );\n  }\n  let objAst;\n  try {\n    objAst = parse(obj, parseOptions);\n  } catch (e) {\n    throw Object.assign(\n      new Error('Error parsing object part of the with expression'),\n      {\n        component: 'obj',\n        babylonError: e,\n      },\n    );\n  }\n  const excludeSet = new Set([\n    'undefined',\n    'this',\n    ...exclude,\n    ...detect(objAst).map((g) => g.name),\n  ]);\n\n  const vars = new Set(\n    detect(ast)\n      .map((global) => global.name)\n      .filter((v) => !excludeSet.has(v)),\n  );\n\n  if (vars.size === 0) return src;\n\n  let declareLocal = '';\n  let local = 'locals_for_with';\n  let result = 'result_of_with';\n  if (t.isValidIdentifier(obj)) {\n    local = obj;\n  } else {\n    while (vars.has(local) || excludeSet.has(local)) {\n      local += '_';\n    }\n    declareLocal = `var ${local} = (${obj});`;\n  }\n  while (vars.has(result) || excludeSet.has(result)) {\n    result += '_';\n  }\n\n  const args = [\n    'this',\n    ...Array.from(vars).map(\n      (v) =>\n        `${JSON.stringify(v)} in ${local} ?\n        ${local}.${v} :\n        typeof ${v} !== 'undefined' ? ${v} : undefined`,\n    ),\n  ];\n\n  const unwrapped = unwrapReturns(ast, src, result);\n\n  return `;\n    ${declareLocal}\n    ${unwrapped.before}\n    (function (${Array.from(vars).join(', ')}) {\n      ${unwrapped.body}\n    }.call(${args.join(', ')}));\n    ${unwrapped.after};`;\n}\n\ninterface UnwrapReturnsState {\n  hasReturn: boolean;\n  source(node: t.Node): string;\n  replace(node: t.Node, str: string): void;\n}\nconst unwrapReturnsVisitors = walk<UnwrapReturnsState>({\n  Function(_node, _state, _c) {\n    // returns in these functions are not applicable\n  },\n\n  ReturnStatement(node, state) {\n    state.hasReturn = true;\n    let value = '';\n    if (node.argument) {\n      value = `value: (${state.source(node.argument)})`;\n    }\n    state.replace(node, `return {${value}};`);\n  },\n});\n\n/**\n * Take a self calling function, and unwrap it such that return inside the function\n * results in return outside the function\n *\n * @param src    Some JavaScript code representing a self-calling function\n * @param result A temporary variable to store the result in\n */\nfunction unwrapReturns(ast: t.Node, src: string, result: string) {\n  const charArray = src.split('');\n\n  const state: UnwrapReturnsState = {\n    hasReturn: false,\n    source(node) {\n      return src.slice(node.start!, node.end!);\n    },\n    replace(node, str) {\n      charArray.fill('', node.start!, node.end!);\n      charArray[node.start!] = str;\n    },\n  };\n\n  unwrapReturnsVisitors(ast, state);\n\n  return {\n    before: state.hasReturn ? `var ${result} = ` : '',\n    body: charArray.join(''),\n    after: state.hasReturn ? `;if (${result}) return ${result}.value` : '',\n  };\n}\n\nmodule.exports = addWith;\nmodule.exports.default = addWith;\n", "'use strict';\n\nvar doctypes = require('doctypes');\nvar makeError = require('pug-error');\nvar buildRuntime = require('pug-runtime/build');\nvar runtime = require('pug-runtime');\nvar compileAttrs = require('pug-attrs');\nvar selfClosing = require('void-elements');\nvar constantinople = require('constantinople');\nvar stringify = require('js-stringify');\nvar addWith = require('with');\n\n// This is used to prevent pretty printing inside certain tags\nvar WHITE_SPACE_SENSITIVE_TAGS = {\n  pre: true,\n  textarea: true,\n};\n\nvar INTERNAL_VARIABLES = [\n  'pug',\n  'pug_mixins',\n  'pug_interp',\n  'pug_debug_filename',\n  'pug_debug_line',\n  'pug_debug_sources',\n  'pug_html',\n];\n\nmodule.exports = generateCode;\nmodule.exports.CodeGenerator = Compiler;\nfunction generateCode(ast, options) {\n  return new Compiler(ast, options).compile();\n}\n\nfunction isConstant(src) {\n  return constantinople(src, {pug: runtime, pug_interp: undefined});\n}\nfunction toConstant(src) {\n  return constantinople.toConstant(src, {pug: runtime, pug_interp: undefined});\n}\n\n/**\n * Initialize `Compiler` with the given `node`.\n *\n * @param {Node} node\n * @param {Object} options\n * @api public\n */\n\nfunction Compiler(node, options) {\n  this.options = options = options || {};\n  this.node = node;\n  this.bufferedConcatenationCount = 0;\n  this.hasCompiledDoctype = false;\n  this.hasCompiledTag = false;\n  this.pp = options.pretty || false;\n  if (this.pp && typeof this.pp !== 'string') {\n    this.pp = '  ';\n  }\n  if (this.pp && !/^\\s+$/.test(this.pp)) {\n    throw new Error(\n      'The pretty parameter should either be a boolean or whitespace only string'\n    );\n  }\n  this.debug = false !== options.compileDebug;\n  this.indents = 0;\n  this.parentIndents = 0;\n  this.terse = false;\n  this.mixins = {};\n  this.dynamicMixins = false;\n  this.eachCount = 0;\n  if (options.doctype) this.setDoctype(options.doctype);\n  this.runtimeFunctionsUsed = [];\n  this.inlineRuntimeFunctions = options.inlineRuntimeFunctions || false;\n  if (this.debug && this.inlineRuntimeFunctions) {\n    this.runtimeFunctionsUsed.push('rethrow');\n  }\n}\n\n/**\n * Compiler prototype.\n */\n\nCompiler.prototype = {\n  runtime: function(name) {\n    if (this.inlineRuntimeFunctions) {\n      this.runtimeFunctionsUsed.push(name);\n      return 'pug_' + name;\n    } else {\n      return 'pug.' + name;\n    }\n  },\n\n  error: function(message, code, node) {\n    var err = makeError(code, message, {\n      line: node.line,\n      column: node.column,\n      filename: node.filename,\n    });\n    throw err;\n  },\n\n  /**\n   * Compile parse tree to JavaScript.\n   *\n   * @api public\n   */\n\n  compile: function() {\n    this.buf = [];\n    if (this.pp) this.buf.push('var pug_indent = [];');\n    this.lastBufferedIdx = -1;\n    this.visit(this.node);\n    if (!this.dynamicMixins) {\n      // if there are no dynamic mixins we can remove any un-used mixins\n      var mixinNames = Object.keys(this.mixins);\n      for (var i = 0; i < mixinNames.length; i++) {\n        var mixin = this.mixins[mixinNames[i]];\n        if (!mixin.used) {\n          for (var x = 0; x < mixin.instances.length; x++) {\n            for (\n              var y = mixin.instances[x].start;\n              y < mixin.instances[x].end;\n              y++\n            ) {\n              this.buf[y] = '';\n            }\n          }\n        }\n      }\n    }\n    var js = this.buf.join('\\n');\n    var globals = this.options.globals\n      ? this.options.globals.concat(INTERNAL_VARIABLES)\n      : INTERNAL_VARIABLES;\n    if (this.options.self) {\n      js = 'var self = locals || {};' + js;\n    } else {\n      js = addWith(\n        'locals || {}',\n        js,\n        globals.concat(\n          this.runtimeFunctionsUsed.map(function(name) {\n            return 'pug_' + name;\n          })\n        )\n      );\n    }\n    if (this.debug) {\n      if (this.options.includeSources) {\n        js =\n          'var pug_debug_sources = ' +\n          stringify(this.options.includeSources) +\n          ';\\n' +\n          js;\n      }\n      js =\n        'var pug_debug_filename, pug_debug_line;' +\n        'try {' +\n        js +\n        '} catch (err) {' +\n        (this.inlineRuntimeFunctions ? 'pug_rethrow' : 'pug.rethrow') +\n        '(err, pug_debug_filename, pug_debug_line' +\n        (this.options.includeSources\n          ? ', pug_debug_sources[pug_debug_filename]'\n          : '') +\n        ');' +\n        '}';\n    }\n    return (\n      buildRuntime(this.runtimeFunctionsUsed) +\n      'function ' +\n      (this.options.templateName || 'template') +\n      '(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;' +\n      js +\n      ';return pug_html;}'\n    );\n  },\n\n  /**\n   * Sets the default doctype `name`. Sets terse mode to `true` when\n   * html 5 is used, causing self-closing tags to end with \">\" vs \"/>\",\n   * and boolean attributes are not mirrored.\n   *\n   * @param {string} name\n   * @api public\n   */\n\n  setDoctype: function(name) {\n    this.doctype = doctypes[name.toLowerCase()] || '<!DOCTYPE ' + name + '>';\n    this.terse = this.doctype.toLowerCase() == '<!doctype html>';\n    this.xml = 0 == this.doctype.indexOf('<?xml');\n  },\n\n  /**\n   * Buffer the given `str` exactly as is or with interpolation\n   *\n   * @param {String} str\n   * @param {Boolean} interpolate\n   * @api public\n   */\n\n  buffer: function(str) {\n    var self = this;\n\n    str = stringify(str);\n    str = str.substr(1, str.length - 2);\n\n    if (\n      this.lastBufferedIdx == this.buf.length &&\n      this.bufferedConcatenationCount < 100\n    ) {\n      if (this.lastBufferedType === 'code') {\n        this.lastBuffered += ' + \"';\n        this.bufferedConcatenationCount++;\n      }\n      this.lastBufferedType = 'text';\n      this.lastBuffered += str;\n      this.buf[this.lastBufferedIdx - 1] =\n        'pug_html = pug_html + ' +\n        this.bufferStartChar +\n        this.lastBuffered +\n        '\";';\n    } else {\n      this.bufferedConcatenationCount = 0;\n      this.buf.push('pug_html = pug_html + \"' + str + '\";');\n      this.lastBufferedType = 'text';\n      this.bufferStartChar = '\"';\n      this.lastBuffered = str;\n      this.lastBufferedIdx = this.buf.length;\n    }\n  },\n\n  /**\n   * Buffer the given `src` so it is evaluated at run time\n   *\n   * @param {String} src\n   * @api public\n   */\n\n  bufferExpression: function(src) {\n    if (isConstant(src)) {\n      return this.buffer(toConstant(src) + '');\n    }\n    if (\n      this.lastBufferedIdx == this.buf.length &&\n      this.bufferedConcatenationCount < 100\n    ) {\n      this.bufferedConcatenationCount++;\n      if (this.lastBufferedType === 'text') this.lastBuffered += '\"';\n      this.lastBufferedType = 'code';\n      this.lastBuffered += ' + (' + src + ')';\n      this.buf[this.lastBufferedIdx - 1] =\n        'pug_html = pug_html + (' +\n        this.bufferStartChar +\n        this.lastBuffered +\n        ');';\n    } else {\n      this.bufferedConcatenationCount = 0;\n      this.buf.push('pug_html = pug_html + (' + src + ');');\n      this.lastBufferedType = 'code';\n      this.bufferStartChar = '';\n      this.lastBuffered = '(' + src + ')';\n      this.lastBufferedIdx = this.buf.length;\n    }\n  },\n\n  /**\n   * Buffer an indent based on the current `indent`\n   * property and an additional `offset`.\n   *\n   * @param {Number} offset\n   * @param {Boolean} newline\n   * @api public\n   */\n\n  prettyIndent: function(offset, newline) {\n    offset = offset || 0;\n    newline = newline ? '\\n' : '';\n    this.buffer(newline + Array(this.indents + offset).join(this.pp));\n    if (this.parentIndents)\n      this.buf.push('pug_html = pug_html + pug_indent.join(\"\");');\n  },\n\n  /**\n   * Visit `node`.\n   *\n   * @param {Node} node\n   * @api public\n   */\n\n  visit: function(node, parent) {\n    var debug = this.debug;\n\n    if (!node) {\n      var msg;\n      if (parent) {\n        msg =\n          'A child of ' +\n          parent.type +\n          ' (' +\n          (parent.filename || 'Pug') +\n          ':' +\n          parent.line +\n          ')';\n      } else {\n        msg = 'A top-level node';\n      }\n      msg += ' is ' + node + ', expected a Pug AST Node.';\n      throw new TypeError(msg);\n    }\n\n    if (debug && node.debug !== false && node.type !== 'Block') {\n      if (node.line) {\n        var js = ';pug_debug_line = ' + node.line;\n        if (node.filename)\n          js += ';pug_debug_filename = ' + stringify(node.filename);\n        this.buf.push(js + ';');\n      }\n    }\n\n    if (!this['visit' + node.type]) {\n      var msg;\n      if (parent) {\n        msg = 'A child of ' + parent.type;\n      } else {\n        msg = 'A top-level node';\n      }\n      msg +=\n        ' (' +\n        (node.filename || 'Pug') +\n        ':' +\n        node.line +\n        ')' +\n        ' is of type ' +\n        node.type +\n        ',' +\n        ' which is not supported by pug-code-gen.';\n      switch (node.type) {\n        case 'Filter':\n          msg += ' Please use pug-filters to preprocess this AST.';\n          break;\n        case 'Extends':\n        case 'Include':\n        case 'NamedBlock':\n        case 'FileReference': // unlikely but for the sake of completeness\n          msg += ' Please use pug-linker to preprocess this AST.';\n          break;\n      }\n      throw new TypeError(msg);\n    }\n\n    this.visitNode(node);\n  },\n\n  /**\n   * Visit `node`.\n   *\n   * @param {Node} node\n   * @api public\n   */\n\n  visitNode: function(node) {\n    return this['visit' + node.type](node);\n  },\n\n  /**\n   * Visit case `node`.\n   *\n   * @param {Literal} node\n   * @api public\n   */\n\n  visitCase: function(node) {\n    this.buf.push('switch (' + node.expr + '){');\n    this.visit(node.block, node);\n    this.buf.push('}');\n  },\n\n  /**\n   * Visit when `node`.\n   *\n   * @param {Literal} node\n   * @api public\n   */\n\n  visitWhen: function(node) {\n    if ('default' == node.expr) {\n      this.buf.push('default:');\n    } else {\n      this.buf.push('case ' + node.expr + ':');\n    }\n    if (node.block) {\n      this.visit(node.block, node);\n      this.buf.push('  break;');\n    }\n  },\n\n  /**\n   * Visit literal `node`.\n   *\n   * @param {Literal} node\n   * @api public\n   */\n\n  visitLiteral: function(node) {\n    this.buffer(node.str);\n  },\n\n  visitNamedBlock: function(block) {\n    return this.visitBlock(block);\n  },\n  /**\n   * Visit all nodes in `block`.\n   *\n   * @param {Block} block\n   * @api public\n   */\n\n  visitBlock: function(block) {\n    var escapePrettyMode = this.escapePrettyMode;\n    var pp = this.pp;\n\n    // Pretty print multi-line text\n    if (\n      pp &&\n      block.nodes.length > 1 &&\n      !escapePrettyMode &&\n      block.nodes[0].type === 'Text' &&\n      block.nodes[1].type === 'Text'\n    ) {\n      this.prettyIndent(1, true);\n    }\n    for (var i = 0; i < block.nodes.length; ++i) {\n      // Pretty print text\n      if (\n        pp &&\n        i > 0 &&\n        !escapePrettyMode &&\n        block.nodes[i].type === 'Text' &&\n        block.nodes[i - 1].type === 'Text' &&\n        /\\n$/.test(block.nodes[i - 1].val)\n      ) {\n        this.prettyIndent(1, false);\n      }\n      this.visit(block.nodes[i], block);\n    }\n  },\n\n  /**\n   * Visit a mixin's `block` keyword.\n   *\n   * @param {MixinBlock} block\n   * @api public\n   */\n\n  visitMixinBlock: function(block) {\n    if (this.pp)\n      this.buf.push(\n        'pug_indent.push(' +\n          stringify(Array(this.indents + 1).join(this.pp)) +\n          ');'\n      );\n    this.buf.push('block && block();');\n    if (this.pp) this.buf.push('pug_indent.pop();');\n  },\n\n  /**\n   * Visit `doctype`. Sets terse mode to `true` when html 5\n   * is used, causing self-closing tags to end with \">\" vs \"/>\",\n   * and boolean attributes are not mirrored.\n   *\n   * @param {Doctype} doctype\n   * @api public\n   */\n\n  visitDoctype: function(doctype) {\n    if (doctype && (doctype.val || !this.doctype)) {\n      this.setDoctype(doctype.val || 'html');\n    }\n\n    if (this.doctype) this.buffer(this.doctype);\n    this.hasCompiledDoctype = true;\n  },\n\n  /**\n   * Visit `mixin`, generating a function that\n   * may be called within the template.\n   *\n   * @param {Mixin} mixin\n   * @api public\n   */\n\n  visitMixin: function(mixin) {\n    var name = 'pug_mixins[';\n    var args = mixin.args || '';\n    var block = mixin.block;\n    var attrs = mixin.attrs;\n    var attrsBlocks = this.attributeBlocks(mixin.attributeBlocks);\n    var pp = this.pp;\n    var dynamic = mixin.name[0] === '#';\n    var key = mixin.name;\n    if (dynamic) this.dynamicMixins = true;\n    name +=\n      (dynamic\n        ? mixin.name.substr(2, mixin.name.length - 3)\n        : '\"' + mixin.name + '\"') + ']';\n\n    this.mixins[key] = this.mixins[key] || {used: false, instances: []};\n    if (mixin.call) {\n      this.mixins[key].used = true;\n      if (pp)\n        this.buf.push(\n          'pug_indent.push(' +\n            stringify(Array(this.indents + 1).join(pp)) +\n            ');'\n        );\n      if (block || attrs.length || attrsBlocks.length) {\n        this.buf.push(name + '.call({');\n\n        if (block) {\n          this.buf.push('block: function(){');\n\n          // Render block with no indents, dynamically added when rendered\n          this.parentIndents++;\n          var _indents = this.indents;\n          this.indents = 0;\n          this.visit(mixin.block, mixin);\n          this.indents = _indents;\n          this.parentIndents--;\n\n          if (attrs.length || attrsBlocks.length) {\n            this.buf.push('},');\n          } else {\n            this.buf.push('}');\n          }\n        }\n\n        if (attrsBlocks.length) {\n          if (attrs.length) {\n            var val = this.attrs(attrs);\n            attrsBlocks.unshift(val);\n          }\n          if (attrsBlocks.length > 1) {\n            this.buf.push(\n              'attributes: ' +\n                this.runtime('merge') +\n                '([' +\n                attrsBlocks.join(',') +\n                '])'\n            );\n          } else {\n            this.buf.push('attributes: ' + attrsBlocks[0]);\n          }\n        } else if (attrs.length) {\n          var val = this.attrs(attrs);\n          this.buf.push('attributes: ' + val);\n        }\n\n        if (args) {\n          this.buf.push('}, ' + args + ');');\n        } else {\n          this.buf.push('});');\n        }\n      } else {\n        this.buf.push(name + '(' + args + ');');\n      }\n      if (pp) this.buf.push('pug_indent.pop();');\n    } else {\n      var mixin_start = this.buf.length;\n      args = args ? args.split(',') : [];\n      var rest;\n      if (args.length && /^\\.\\.\\./.test(args[args.length - 1].trim())) {\n        rest = args\n          .pop()\n          .trim()\n          .replace(/^\\.\\.\\./, '');\n      }\n      // we need use pug_interp here for v8: https://code.google.com/p/v8/issues/detail?id=4165\n      // once fixed, use this: this.buf.push(name + ' = function(' + args.join(',') + '){');\n      this.buf.push(name + ' = pug_interp = function(' + args.join(',') + '){');\n      this.buf.push(\n        'var block = (this && this.block), attributes = (this && this.attributes) || {};'\n      );\n      if (rest) {\n        this.buf.push('var ' + rest + ' = [];');\n        this.buf.push(\n          'for (pug_interp = ' +\n            args.length +\n            '; pug_interp < arguments.length; pug_interp++) {'\n        );\n        this.buf.push('  ' + rest + '.push(arguments[pug_interp]);');\n        this.buf.push('}');\n      }\n      this.parentIndents++;\n      this.visit(block, mixin);\n      this.parentIndents--;\n      this.buf.push('};');\n      var mixin_end = this.buf.length;\n      this.mixins[key].instances.push({start: mixin_start, end: mixin_end});\n    }\n  },\n\n  /**\n   * Visit `tag` buffering tag markup, generating\n   * attributes, visiting the `tag`'s code and block.\n   *\n   * @param {Tag} tag\n   * @param {boolean} interpolated\n   * @api public\n   */\n\n  visitTag: function(tag, interpolated) {\n    this.indents++;\n    var name = tag.name,\n      pp = this.pp,\n      self = this;\n\n    function bufferName() {\n      if (interpolated) self.bufferExpression(tag.expr);\n      else self.buffer(name);\n    }\n\n    if (WHITE_SPACE_SENSITIVE_TAGS[tag.name] === true)\n      this.escapePrettyMode = true;\n\n    if (!this.hasCompiledTag) {\n      if (!this.hasCompiledDoctype && 'html' == name) {\n        this.visitDoctype();\n      }\n      this.hasCompiledTag = true;\n    }\n\n    // pretty print\n    if (pp && !tag.isInline) this.prettyIndent(0, true);\n    if (tag.selfClosing || (!this.xml && selfClosing[tag.name])) {\n      this.buffer('<');\n      bufferName();\n      this.visitAttributes(\n        tag.attrs,\n        this.attributeBlocks(tag.attributeBlocks)\n      );\n      if (this.terse && !tag.selfClosing) {\n        this.buffer('>');\n      } else {\n        this.buffer('/>');\n      }\n      // if it is non-empty throw an error\n      if (\n        tag.code ||\n        (tag.block &&\n          !(tag.block.type === 'Block' && tag.block.nodes.length === 0) &&\n          tag.block.nodes.some(function(tag) {\n            return tag.type !== 'Text' || !/^\\s*$/.test(tag.val);\n          }))\n      ) {\n        this.error(\n          name +\n            ' is a self closing element: <' +\n            name +\n            '/> but contains nested content.',\n          'SELF_CLOSING_CONTENT',\n          tag\n        );\n      }\n    } else {\n      // Optimize attributes buffering\n      this.buffer('<');\n      bufferName();\n      this.visitAttributes(\n        tag.attrs,\n        this.attributeBlocks(tag.attributeBlocks)\n      );\n      this.buffer('>');\n      if (tag.code) this.visitCode(tag.code);\n      this.visit(tag.block, tag);\n\n      // pretty print\n      if (\n        pp &&\n        !tag.isInline &&\n        WHITE_SPACE_SENSITIVE_TAGS[tag.name] !== true &&\n        !tagCanInline(tag)\n      )\n        this.prettyIndent(0, true);\n\n      this.buffer('</');\n      bufferName();\n      this.buffer('>');\n    }\n\n    if (WHITE_SPACE_SENSITIVE_TAGS[tag.name] === true)\n      this.escapePrettyMode = false;\n\n    this.indents--;\n  },\n\n  /**\n   * Visit InterpolatedTag.\n   *\n   * @param {InterpolatedTag} tag\n   * @api public\n   */\n\n  visitInterpolatedTag: function(tag) {\n    return this.visitTag(tag, true);\n  },\n\n  /**\n   * Visit `text` node.\n   *\n   * @param {Text} text\n   * @api public\n   */\n\n  visitText: function(text) {\n    this.buffer(text.val);\n  },\n\n  /**\n   * Visit a `comment`, only buffering when the buffer flag is set.\n   *\n   * @param {Comment} comment\n   * @api public\n   */\n\n  visitComment: function(comment) {\n    if (!comment.buffer) return;\n    if (this.pp) this.prettyIndent(1, true);\n    this.buffer('<!--' + comment.val + '-->');\n  },\n\n  /**\n   * Visit a `YieldBlock`.\n   *\n   * This is necessary since we allow compiling a file with `yield`.\n   *\n   * @param {YieldBlock} block\n   * @api public\n   */\n\n  visitYieldBlock: function(block) {},\n\n  /**\n   * Visit a `BlockComment`.\n   *\n   * @param {Comment} comment\n   * @api public\n   */\n\n  visitBlockComment: function(comment) {\n    if (!comment.buffer) return;\n    if (this.pp) this.prettyIndent(1, true);\n    this.buffer('<!--' + (comment.val || ''));\n    this.visit(comment.block, comment);\n    if (this.pp) this.prettyIndent(1, true);\n    this.buffer('-->');\n  },\n\n  /**\n   * Visit `code`, respecting buffer / escape flags.\n   * If the code is followed by a block, wrap it in\n   * a self-calling function.\n   *\n   * @param {Code} code\n   * @api public\n   */\n\n  visitCode: function(code) {\n    // Wrap code blocks with {}.\n    // we only wrap unbuffered code blocks ATM\n    // since they are usually flow control\n\n    // Buffer code\n    if (code.buffer) {\n      var val = code.val.trim();\n      val = 'null == (pug_interp = ' + val + ') ? \"\" : pug_interp';\n      if (code.mustEscape !== false)\n        val = this.runtime('escape') + '(' + val + ')';\n      this.bufferExpression(val);\n    } else {\n      this.buf.push(code.val);\n    }\n\n    // Block support\n    if (code.block) {\n      if (!code.buffer) this.buf.push('{');\n      this.visit(code.block, code);\n      if (!code.buffer) this.buf.push('}');\n    }\n  },\n\n  /**\n   * Visit `Conditional`.\n   *\n   * @param {Conditional} cond\n   * @api public\n   */\n\n  visitConditional: function(cond) {\n    var test = cond.test;\n    this.buf.push('if (' + test + ') {');\n    this.visit(cond.consequent, cond);\n    this.buf.push('}');\n    if (cond.alternate) {\n      if (cond.alternate.type === 'Conditional') {\n        this.buf.push('else');\n        this.visitConditional(cond.alternate);\n      } else {\n        this.buf.push('else {');\n        this.visit(cond.alternate, cond);\n        this.buf.push('}');\n      }\n    }\n  },\n\n  /**\n   * Visit `While`.\n   *\n   * @param {While} loop\n   * @api public\n   */\n\n  visitWhile: function(loop) {\n    var test = loop.test;\n    this.buf.push('while (' + test + ') {');\n    this.visit(loop.block, loop);\n    this.buf.push('}');\n  },\n\n  /**\n   * Visit `each` block.\n   *\n   * @param {Each} each\n   * @api public\n   */\n\n  visitEach: function(each) {\n    var indexVarName = each.key || 'pug_index' + this.eachCount;\n    this.eachCount++;\n\n    this.buf.push(\n      '' +\n        '// iterate ' +\n        each.obj +\n        '\\n' +\n        ';(function(){\\n' +\n        '  var $$obj = ' +\n        each.obj +\n        ';\\n' +\n        \"  if ('number' == typeof $$obj.length) {\"\n    );\n\n    if (each.alternate) {\n      this.buf.push('    if ($$obj.length) {');\n    }\n\n    this.buf.push(\n      '' +\n        '      for (var ' +\n        indexVarName +\n        ' = 0, $$l = $$obj.length; ' +\n        indexVarName +\n        ' < $$l; ' +\n        indexVarName +\n        '++) {\\n' +\n        '        var ' +\n        each.val +\n        ' = $$obj[' +\n        indexVarName +\n        '];'\n    );\n\n    this.visit(each.block, each);\n\n    this.buf.push('      }');\n\n    if (each.alternate) {\n      this.buf.push('    } else {');\n      this.visit(each.alternate, each);\n      this.buf.push('    }');\n    }\n\n    this.buf.push(\n      '' +\n        '  } else {\\n' +\n        '    var $$l = 0;\\n' +\n        '    for (var ' +\n        indexVarName +\n        ' in $$obj) {\\n' +\n        '      $$l++;\\n' +\n        '      var ' +\n        each.val +\n        ' = $$obj[' +\n        indexVarName +\n        '];'\n    );\n\n    this.visit(each.block, each);\n\n    this.buf.push('    }');\n    if (each.alternate) {\n      this.buf.push('    if ($$l === 0) {');\n      this.visit(each.alternate, each);\n      this.buf.push('    }');\n    }\n    this.buf.push('  }\\n}).call(this);\\n');\n  },\n\n  visitEachOf: function(each) {\n    this.buf.push(\n      '' +\n        '// iterate ' +\n        each.obj +\n        '\\n' +\n        'for (const ' +\n        each.val +\n        ' of ' +\n        each.obj +\n        ') {\\n'\n    );\n\n    this.visit(each.block, each);\n\n    this.buf.push('}\\n');\n  },\n\n  /**\n   * Visit `attrs`.\n   *\n   * @param {Array} attrs\n   * @api public\n   */\n\n  visitAttributes: function(attrs, attributeBlocks) {\n    if (attributeBlocks.length) {\n      if (attrs.length) {\n        var val = this.attrs(attrs);\n        attributeBlocks.unshift(val);\n      }\n      if (attributeBlocks.length > 1) {\n        this.bufferExpression(\n          this.runtime('attrs') +\n            '(' +\n            this.runtime('merge') +\n            '([' +\n            attributeBlocks.join(',') +\n            ']), ' +\n            stringify(this.terse) +\n            ')'\n        );\n      } else {\n        this.bufferExpression(\n          this.runtime('attrs') +\n            '(' +\n            attributeBlocks[0] +\n            ', ' +\n            stringify(this.terse) +\n            ')'\n        );\n      }\n    } else if (attrs.length) {\n      this.attrs(attrs, true);\n    }\n  },\n\n  /**\n   * Compile attributes.\n   */\n\n  attrs: function(attrs, buffer) {\n    var res = compileAttrs(attrs, {\n      terse: this.terse,\n      format: buffer ? 'html' : 'object',\n      runtime: this.runtime.bind(this),\n    });\n    if (buffer) {\n      this.bufferExpression(res);\n    }\n    return res;\n  },\n\n  /**\n   * Compile attribute blocks.\n   */\n\n  attributeBlocks: function(attributeBlocks) {\n    return (\n      attributeBlocks &&\n      attributeBlocks.slice().map(function(attrBlock) {\n        return attrBlock.val;\n      })\n    );\n  },\n};\n\nfunction tagCanInline(tag) {\n  function isInline(node) {\n    // Recurse if the node is a block\n    if (node.type === 'Block') return node.nodes.every(isInline);\n    // When there is a YieldBlock here, it is an indication that the file is\n    // expected to be included but is not. If this is the case, the block\n    // must be empty.\n    if (node.type === 'YieldBlock') return true;\n    return (node.type === 'Text' && !/\\n/.test(node.val)) || node.isInline;\n  }\n\n  return tag.block.nodes.every(isInline);\n}\n", "var runtime = require('./');\n\nmodule.exports = wrap;\nfunction wrap(template, templateName) {\n  templateName = templateName || 'template';\n  return Function(\n    'pug',\n    template + '\\n' + 'return ' + templateName + ';'\n  )(runtime);\n}\n", "'use strict';\n\n/*!\n * Pug\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar path = require('path');\nvar lex = require('pug-lexer');\nvar stripComments = require('pug-strip-comments');\nvar parse = require('pug-parser');\nvar load = require('pug-load');\nvar filters = require('pug-filters');\nvar link = require('pug-linker');\nvar generateCode = require('pug-code-gen');\nvar runtime = require('pug-runtime');\nvar runtimeWrap = require('pug-runtime/wrap');\n\n/**\n * Name for detection\n */\n\nexports.name = 'Pug';\n\n/**\n * Pug runtime helpers.\n */\n\nexports.runtime = runtime;\n\n/**\n * Template function cache.\n */\n\nexports.cache = {};\n\nfunction applyPlugins(value, options, plugins, name) {\n  return plugins.reduce(function(value, plugin) {\n    return plugin[name] ? plugin[name](value, options) : value;\n  }, value);\n}\n\nfunction findReplacementFunc(plugins, name) {\n  var eligiblePlugins = plugins.filter(function(plugin) {\n    return plugin[name];\n  });\n\n  if (eligiblePlugins.length > 1) {\n    throw new Error('Two or more plugins all implement ' + name + ' method.');\n  } else if (eligiblePlugins.length) {\n    return eligiblePlugins[0][name].bind(eligiblePlugins[0]);\n  }\n  return null;\n}\n\n/**\n * Object for global custom filters.  Note that you can also just pass a `filters`\n * option to any other method.\n */\nexports.filters = {};\n\n/**\n * Compile the given `str` of pug and return a function body.\n *\n * @param {String} str\n * @param {Object} options\n * @return {Object}\n * @api private\n */\n\nfunction compileBody(str, options) {\n  var debug_sources = {};\n  debug_sources[options.filename] = str;\n  var dependencies = [];\n  var plugins = options.plugins || [];\n  var ast = load.string(str, {\n    filename: options.filename,\n    basedir: options.basedir,\n    lex: function(str, options) {\n      var lexOptions = {};\n      Object.keys(options).forEach(function(key) {\n        lexOptions[key] = options[key];\n      });\n      lexOptions.plugins = plugins\n        .filter(function(plugin) {\n          return !!plugin.lex;\n        })\n        .map(function(plugin) {\n          return plugin.lex;\n        });\n      var contents = applyPlugins(\n        str,\n        {filename: options.filename},\n        plugins,\n        'preLex'\n      );\n      return applyPlugins(\n        lex(contents, lexOptions),\n        options,\n        plugins,\n        'postLex'\n      );\n    },\n    parse: function(tokens, options) {\n      tokens = tokens.map(function(token) {\n        if (token.type === 'path' && path.extname(token.val) === '') {\n          return {\n            type: 'path',\n            loc: token.loc,\n            val: token.val + '.pug',\n          };\n        }\n        return token;\n      });\n      tokens = stripComments(tokens, options);\n      tokens = applyPlugins(tokens, options, plugins, 'preParse');\n      var parseOptions = {};\n      Object.keys(options).forEach(function(key) {\n        parseOptions[key] = options[key];\n      });\n      parseOptions.plugins = plugins\n        .filter(function(plugin) {\n          return !!plugin.parse;\n        })\n        .map(function(plugin) {\n          return plugin.parse;\n        });\n\n      return applyPlugins(\n        applyPlugins(\n          parse(tokens, parseOptions),\n          options,\n          plugins,\n          'postParse'\n        ),\n        options,\n        plugins,\n        'preLoad'\n      );\n    },\n    resolve: function(filename, source, loadOptions) {\n      var replacementFunc = findReplacementFunc(plugins, 'resolve');\n      if (replacementFunc) {\n        return replacementFunc(filename, source, options);\n      }\n\n      return load.resolve(filename, source, loadOptions);\n    },\n    read: function(filename, loadOptions) {\n      dependencies.push(filename);\n\n      var contents;\n\n      var replacementFunc = findReplacementFunc(plugins, 'read');\n      if (replacementFunc) {\n        contents = replacementFunc(filename, options);\n      } else {\n        contents = load.read(filename, loadOptions);\n      }\n\n      debug_sources[filename] = Buffer.isBuffer(contents)\n        ? contents.toString('utf8')\n        : contents;\n      return contents;\n    },\n  });\n  ast = applyPlugins(ast, options, plugins, 'postLoad');\n  ast = applyPlugins(ast, options, plugins, 'preFilters');\n\n  var filtersSet = {};\n  Object.keys(exports.filters).forEach(function(key) {\n    filtersSet[key] = exports.filters[key];\n  });\n  if (options.filters) {\n    Object.keys(options.filters).forEach(function(key) {\n      filtersSet[key] = options.filters[key];\n    });\n  }\n  ast = filters.handleFilters(\n    ast,\n    filtersSet,\n    options.filterOptions,\n    options.filterAliases\n  );\n\n  ast = applyPlugins(ast, options, plugins, 'postFilters');\n  ast = applyPlugins(ast, options, plugins, 'preLink');\n  ast = link(ast);\n  ast = applyPlugins(ast, options, plugins, 'postLink');\n\n  // Compile\n  ast = applyPlugins(ast, options, plugins, 'preCodeGen');\n  var js = (findReplacementFunc(plugins, 'generateCode') || generateCode)(ast, {\n    pretty: options.pretty,\n    compileDebug: options.compileDebug,\n    doctype: options.doctype,\n    inlineRuntimeFunctions: options.inlineRuntimeFunctions,\n    globals: options.globals,\n    self: options.self,\n    includeSources: options.includeSources ? debug_sources : false,\n    templateName: options.templateName,\n  });\n  js = applyPlugins(js, options, plugins, 'postCodeGen');\n\n  // Debug compiler\n  if (options.debug) {\n    console.error(\n      '\\nCompiled Function:\\n\\n\\u001b[90m%s\\u001b[0m',\n      js.replace(/^/gm, '  ')\n    );\n  }\n\n  return {body: js, dependencies: dependencies};\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `str` is not set, the file specified in `options.filename` will be read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @param {Object} options\n * @param {String=} str\n * @return {Function}\n * @api private\n */\nfunction handleTemplateCache(options, str) {\n  var key = options.filename;\n  if (options.cache && exports.cache[key]) {\n    return exports.cache[key];\n  } else {\n    if (str === undefined) str = fs.readFileSync(options.filename, 'utf8');\n    var templ = exports.compile(str, options);\n    if (options.cache) exports.cache[key] = templ;\n    return templ;\n  }\n}\n\n/**\n * Compile a `Function` representation of the given pug `str`.\n *\n * Options:\n *\n *   - `compileDebug` when `false` debugging code is stripped from the compiled\n       template, when it is explicitly `true`, the source code is included in\n       the compiled template for better accuracy.\n *   - `filename` used to improve errors when `compileDebug` is not `false` and to resolve imports/extends\n *\n * @param {String} str\n * @param {Options} options\n * @return {Function}\n * @api public\n */\n\nexports.compile = function(str, options) {\n  var options = options || {};\n\n  str = String(str);\n\n  var parsed = compileBody(str, {\n    compileDebug: options.compileDebug !== false,\n    filename: options.filename,\n    basedir: options.basedir,\n    pretty: options.pretty,\n    doctype: options.doctype,\n    inlineRuntimeFunctions: options.inlineRuntimeFunctions,\n    globals: options.globals,\n    self: options.self,\n    includeSources: options.compileDebug === true,\n    debug: options.debug,\n    templateName: 'template',\n    filters: options.filters,\n    filterOptions: options.filterOptions,\n    filterAliases: options.filterAliases,\n    plugins: options.plugins,\n  });\n\n  var res = options.inlineRuntimeFunctions\n    ? new Function('', parsed.body + ';return template;')()\n    : runtimeWrap(parsed.body);\n\n  res.dependencies = parsed.dependencies;\n\n  return res;\n};\n\n/**\n * Compile a JavaScript source representation of the given pug `str`.\n *\n * Options:\n *\n *   - `compileDebug` When it is `true`, the source code is included in\n *     the compiled template for better error messages.\n *   - `filename` used to improve errors when `compileDebug` is not `true` and to resolve imports/extends\n *   - `name` the name of the resulting function (defaults to \"template\")\n *   - `module` when it is explicitly `true`, the source code include export module syntax\n *\n * @param {String} str\n * @param {Options} options\n * @return {Object}\n * @api public\n */\n\nexports.compileClientWithDependenciesTracked = function(str, options) {\n  var options = options || {};\n\n  str = String(str);\n  var parsed = compileBody(str, {\n    compileDebug: options.compileDebug,\n    filename: options.filename,\n    basedir: options.basedir,\n    pretty: options.pretty,\n    doctype: options.doctype,\n    inlineRuntimeFunctions: options.inlineRuntimeFunctions !== false,\n    globals: options.globals,\n    self: options.self,\n    includeSources: options.compileDebug,\n    debug: options.debug,\n    templateName: options.name || 'template',\n    filters: options.filters,\n    filterOptions: options.filterOptions,\n    filterAliases: options.filterAliases,\n    plugins: options.plugins,\n  });\n\n  var body = parsed.body;\n\n  if (options.module) {\n    if (options.inlineRuntimeFunctions === false) {\n      body = 'var pug = require(\"pug-runtime\");' + body;\n    }\n    body += ' module.exports = ' + (options.name || 'template') + ';';\n  }\n\n  return {body: body, dependencies: parsed.dependencies};\n};\n\n/**\n * Compile a JavaScript source representation of the given pug `str`.\n *\n * Options:\n *\n *   - `compileDebug` When it is `true`, the source code is included in\n *     the compiled template for better error messages.\n *   - `filename` used to improve errors when `compileDebug` is not `true` and to resolve imports/extends\n *   - `name` the name of the resulting function (defaults to \"template\")\n *\n * @param {String} str\n * @param {Options} options\n * @return {String}\n * @api public\n */\nexports.compileClient = function(str, options) {\n  return exports.compileClientWithDependenciesTracked(str, options).body;\n};\n\n/**\n * Compile a `Function` representation of the given pug file.\n *\n * Options:\n *\n *   - `compileDebug` when `false` debugging code is stripped from the compiled\n       template, when it is explicitly `true`, the source code is included in\n       the compiled template for better accuracy.\n *\n * @param {String} path\n * @param {Options} options\n * @return {Function}\n * @api public\n */\nexports.compileFile = function(path, options) {\n  options = options || {};\n  options.filename = path;\n  return handleTemplateCache(options);\n};\n\n/**\n * Render the given `str` of pug.\n *\n * Options:\n *\n *   - `cache` enable template caching\n *   - `filename` filename required for `include` / `extends` and caching\n *\n * @param {String} str\n * @param {Object|Function} options or fn\n * @param {Function|undefined} fn\n * @returns {String}\n * @api public\n */\n\nexports.render = function(str, options, fn) {\n  // support callback API\n  if ('function' == typeof options) {\n    (fn = options), (options = undefined);\n  }\n  if (typeof fn === 'function') {\n    var res;\n    try {\n      res = exports.render(str, options);\n    } catch (ex) {\n      return fn(ex);\n    }\n    return fn(null, res);\n  }\n\n  options = options || {};\n\n  // cache requires .filename\n  if (options.cache && !options.filename) {\n    throw new Error('the \"filename\" option is required for caching');\n  }\n\n  return handleTemplateCache(options, str)(options);\n};\n\n/**\n * Render a Pug file at the given `path`.\n *\n * @param {String} path\n * @param {Object|Function} options or callback\n * @param {Function|undefined} fn\n * @returns {String}\n * @api public\n */\n\nexports.renderFile = function(path, options, fn) {\n  // support callback API\n  if ('function' == typeof options) {\n    (fn = options), (options = undefined);\n  }\n  if (typeof fn === 'function') {\n    var res;\n    try {\n      res = exports.renderFile(path, options);\n    } catch (ex) {\n      return fn(ex);\n    }\n    return fn(null, res);\n  }\n\n  options = options || {};\n\n  options.filename = path;\n  return handleTemplateCache(options)(options);\n};\n\n/**\n * Compile a Pug file at the given `path` for use on the client.\n *\n * @param {String} path\n * @param {Object} options\n * @returns {String}\n * @api public\n */\n\nexports.compileFileClient = function(path, options) {\n  var key = path + ':client';\n  options = options || {};\n\n  options.filename = path;\n\n  if (options.cache && exports.cache[key]) {\n    return exports.cache[key];\n  }\n\n  var str = fs.readFileSync(options.filename, 'utf8');\n  var out = exports.compileClient(str, options);\n  if (options.cache) exports.cache[key] = out;\n  return out;\n};\n\n/**\n * Express support.\n */\n\nexports.__express = function(path, options, fn) {\n  if (\n    options.compileDebug == undefined &&\n    process.env.NODE_ENV === 'production'\n  ) {\n    options.compileDebug = false;\n  }\n  exports.renderFile(path, options, fn);\n};\n", null, "/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it\u2019s part of a tag or an\n\t\t// unquoted attribute value. We\u2019re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer \u2264 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// \u201COtherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.\u201D\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they\u2019re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we\u2019re still here, `if ($7)` is implied; it\u2019s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar he_1 = require(\"he\");\n/**\n * Node Class as base class for TextNode and HTMLElement.\n */\nvar Node = /** @class */ (function () {\n    function Node(parentNode, range) {\n        if (parentNode === void 0) { parentNode = null; }\n        this.parentNode = parentNode;\n        this.childNodes = [];\n        Object.defineProperty(this, 'range', {\n            enumerable: false,\n            writable: true,\n            configurable: true,\n            value: range !== null && range !== void 0 ? range : [-1, -1]\n        });\n    }\n    /**\n     * Remove current node\n     */\n    Node.prototype.remove = function () {\n        var _this = this;\n        if (this.parentNode) {\n            var children = this.parentNode.childNodes;\n            this.parentNode.childNodes = children.filter(function (child) {\n                return _this !== child;\n            });\n            this.parentNode = null;\n        }\n        return this;\n    };\n    Object.defineProperty(Node.prototype, \"innerText\", {\n        get: function () {\n            return this.rawText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"textContent\", {\n        get: function () {\n            return (0, he_1.decode)(this.rawText);\n        },\n        set: function (val) {\n            this.rawText = (0, he_1.encode)(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Node;\n}());\nexports.default = Node;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n})(NodeType || (NodeType = {}));\nexports.default = NodeType;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_1 = __importDefault(require(\"./node\"));\nvar type_1 = __importDefault(require(\"./type\"));\nvar CommentNode = /** @class */ (function (_super) {\n    __extends(CommentNode, _super);\n    function CommentNode(rawText, parentNode, range) {\n        var _this = _super.call(this, parentNode, range) || this;\n        _this.rawText = rawText;\n        /**\n         * Node Type declaration.\n         * @type {Number}\n         */\n        _this.nodeType = type_1.default.COMMENT_NODE;\n        return _this;\n    }\n    CommentNode.prototype.clone = function () {\n        return new CommentNode(this.rawText, null);\n    };\n    Object.defineProperty(CommentNode.prototype, \"text\", {\n        /**\n         * Get unescaped text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            return this.rawText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CommentNode.prototype.toString = function () {\n        return \"<!--\".concat(this.rawText, \"-->\");\n    };\n    return CommentNode;\n}(node_1.default));\nexports.default = CommentNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0;\n/** Types of elements found in htmlparser2's DOM */\nvar ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType = exports.ElementType || (exports.ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\nexports.isTag = isTag;\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexports.Root = ElementType.Root;\n/** Type for Text */\nexports.Text = ElementType.Text;\n/** Type for <? ... ?> */\nexports.Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexports.Comment = ElementType.Comment;\n/** Type for <script> tags */\nexports.Script = ElementType.Script;\n/** Type for <style> tags */\nexports.Style = ElementType.Style;\n/** Type for Any tag */\nexports.Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexports.CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexports.Doctype = ElementType.Doctype;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\nvar domelementtype_1 = require(\"domelementtype\");\nvar nodeTypes = new Map([\n    [domelementtype_1.ElementType.Tag, 1],\n    [domelementtype_1.ElementType.Script, 1],\n    [domelementtype_1.ElementType.Style, 1],\n    [domelementtype_1.ElementType.Directive, 1],\n    [domelementtype_1.ElementType.Text, 3],\n    [domelementtype_1.ElementType.CDATA, 4],\n    [domelementtype_1.ElementType.Comment, 8],\n    [domelementtype_1.ElementType.Root, 9],\n]);\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nvar Node = /** @class */ (function () {\n    /**\n     *\n     * @param type The type of the node.\n     */\n    function Node(type) {\n        this.type = type;\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    Object.defineProperty(Node.prototype, \"nodeType\", {\n        // Read-only aliases\n        /**\n         * [DOM spec](https://dom.spec.whatwg.org/#dom-node-nodetype)-compatible\n         * node {@link type}.\n         */\n        get: function () {\n            var _a;\n            return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"parentNode\", {\n        // Read-write aliases for properties\n        /**\n         * Same as {@link parent}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.parent;\n        },\n        set: function (parent) {\n            this.parent = parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"previousSibling\", {\n        /**\n         * Same as {@link prev}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.prev;\n        },\n        set: function (prev) {\n            this.prev = prev;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"nextSibling\", {\n        /**\n         * Same as {@link next}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.next;\n        },\n        set: function (next) {\n            this.next = next;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    Node.prototype.cloneNode = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return cloneNode(this, recursive);\n    };\n    return Node;\n}());\nexports.Node = Node;\n/**\n * A node that contains some data.\n */\nvar DataNode = /** @class */ (function (_super) {\n    __extends(DataNode, _super);\n    /**\n     * @param type The type of the node\n     * @param data The content of the data node\n     */\n    function DataNode(type, data) {\n        var _this = _super.call(this, type) || this;\n        _this.data = data;\n        return _this;\n    }\n    Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n        /**\n         * Same as {@link data}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (data) {\n            this.data = data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DataNode;\n}(Node));\nexports.DataNode = DataNode;\n/**\n * Text within the document.\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text(data) {\n        return _super.call(this, domelementtype_1.ElementType.Text, data) || this;\n    }\n    return Text;\n}(DataNode));\nexports.Text = Text;\n/**\n * Comments within the document.\n */\nvar Comment = /** @class */ (function (_super) {\n    __extends(Comment, _super);\n    function Comment(data) {\n        return _super.call(this, domelementtype_1.ElementType.Comment, data) || this;\n    }\n    return Comment;\n}(DataNode));\nexports.Comment = Comment;\n/**\n * Processing instructions, including doc types.\n */\nvar ProcessingInstruction = /** @class */ (function (_super) {\n    __extends(ProcessingInstruction, _super);\n    function ProcessingInstruction(name, data) {\n        var _this = _super.call(this, domelementtype_1.ElementType.Directive, data) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ProcessingInstruction;\n}(DataNode));\nexports.ProcessingInstruction = ProcessingInstruction;\n/**\n * A `Node` that can have children.\n */\nvar NodeWithChildren = /** @class */ (function (_super) {\n    __extends(NodeWithChildren, _super);\n    /**\n     * @param type Type of the node.\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    function NodeWithChildren(type, children) {\n        var _this = _super.call(this, type) || this;\n        _this.children = children;\n        return _this;\n    }\n    Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n        // Aliases\n        /** First child of the node. */\n        get: function () {\n            var _a;\n            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n        /** Last child of the node. */\n        get: function () {\n            return this.children.length > 0\n                ? this.children[this.children.length - 1]\n                : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n        /**\n         * Same as {@link children}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.children;\n        },\n        set: function (children) {\n            this.children = children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NodeWithChildren;\n}(Node));\nexports.NodeWithChildren = NodeWithChildren;\n/**\n * The root node of the document.\n */\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document(children) {\n        return _super.call(this, domelementtype_1.ElementType.Root, children) || this;\n    }\n    return Document;\n}(NodeWithChildren));\nexports.Document = Document;\n/**\n * An element within the DOM.\n */\nvar Element = /** @class */ (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    function Element(name, attribs, children, type) {\n        if (children === void 0) { children = []; }\n        if (type === void 0) { type = name === \"script\"\n            ? domelementtype_1.ElementType.Script\n            : name === \"style\"\n                ? domelementtype_1.ElementType.Style\n                : domelementtype_1.ElementType.Tag; }\n        var _this = _super.call(this, type, children) || this;\n        _this.name = name;\n        _this.attribs = attribs;\n        return _this;\n    }\n    Object.defineProperty(Element.prototype, \"tagName\", {\n        // DOM Level 1 aliases\n        /**\n         * Same as {@link name}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.name;\n        },\n        set: function (name) {\n            this.name = name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"attributes\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.attribs).map(function (name) {\n                var _a, _b;\n                return ({\n                    name: name,\n                    value: _this.attribs[name],\n                    namespace: (_a = _this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                    prefix: (_b = _this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n                });\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Element;\n}(NodeWithChildren));\nexports.Element = Element;\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nfunction isTag(node) {\n    return (0, domelementtype_1.isTag)(node);\n}\nexports.isTag = isTag;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nfunction isCDATA(node) {\n    return node.type === domelementtype_1.ElementType.CDATA;\n}\nexports.isCDATA = isCDATA;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nfunction isText(node) {\n    return node.type === domelementtype_1.ElementType.Text;\n}\nexports.isText = isText;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nfunction isComment(node) {\n    return node.type === domelementtype_1.ElementType.Comment;\n}\nexports.isComment = isComment;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDirective(node) {\n    return node.type === domelementtype_1.ElementType.Directive;\n}\nexports.isDirective = isDirective;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDocument(node) {\n    return node.type === domelementtype_1.ElementType.Root;\n}\nexports.isDocument = isDocument;\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `NodeWithChildren` (has children), `false` otherwise.\n */\nfunction hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\nexports.hasChildren = hasChildren;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive) {\n    if (recursive === void 0) { recursive = false; }\n    var result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_1 = new Element(node.name, __assign({}, node.attribs), children);\n        children.forEach(function (child) { return (child.parent = clone_1); });\n        if (node.namespace != null) {\n            clone_1.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone_1[\"x-attribsNamespace\"] = __assign({}, node[\"x-attribsNamespace\"]);\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone_1[\"x-attribsPrefix\"] = __assign({}, node[\"x-attribsPrefix\"]);\n        }\n        result = clone_1;\n    }\n    else if (isCDATA(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_2 = new NodeWithChildren(domelementtype_1.ElementType.CDATA, children);\n        children.forEach(function (child) { return (child.parent = clone_2); });\n        result = clone_2;\n    }\n    else if (isDocument(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_3 = new Document(children);\n        children.forEach(function (child) { return (child.parent = clone_3); });\n        if (node[\"x-mode\"]) {\n            clone_3[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone_3;\n    }\n    else if (isDirective(node)) {\n        var instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(\"Not implemented yet: \".concat(node.type));\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nexports.cloneNode = cloneNode;\nfunction cloneChildren(childs) {\n    var children = childs.map(function (child) { return cloneNode(child, true); });\n    for (var i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DomHandler = void 0;\nvar domelementtype_1 = require(\"domelementtype\");\nvar node_1 = require(\"./node\");\n__exportStar(require(\"./node\"), exports);\nvar reWhitespace = /\\s+/g;\n// Default options\nvar defaultOpts = {\n    normalizeWhitespace: false,\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nvar DomHandler = /** @class */ (function () {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    function DomHandler(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new node_1.Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    DomHandler.prototype.onparserinit = function (parser) {\n        this.parser = parser;\n    };\n    // Resets the handler back to starting state\n    DomHandler.prototype.onreset = function () {\n        this.dom = [];\n        this.root = new node_1.Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    };\n    // Signals the handler that parsing is done\n    DomHandler.prototype.onend = function () {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    };\n    DomHandler.prototype.onerror = function (error) {\n        this.handleCallback(error);\n    };\n    DomHandler.prototype.onclosetag = function () {\n        this.lastNode = null;\n        var elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    };\n    DomHandler.prototype.onopentag = function (name, attribs) {\n        var type = this.options.xmlMode ? domelementtype_1.ElementType.Tag : undefined;\n        var element = new node_1.Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    };\n    DomHandler.prototype.ontext = function (data) {\n        var normalizeWhitespace = this.options.normalizeWhitespace;\n        var lastNode = this.lastNode;\n        if (lastNode && lastNode.type === domelementtype_1.ElementType.Text) {\n            if (normalizeWhitespace) {\n                lastNode.data = (lastNode.data + data).replace(reWhitespace, \" \");\n            }\n            else {\n                lastNode.data += data;\n            }\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            if (normalizeWhitespace) {\n                data = data.replace(reWhitespace, \" \");\n            }\n            var node = new node_1.Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    };\n    DomHandler.prototype.oncomment = function (data) {\n        if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        var node = new node_1.Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    };\n    DomHandler.prototype.oncommentend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.oncdatastart = function () {\n        var text = new node_1.Text(\"\");\n        var node = new node_1.NodeWithChildren(domelementtype_1.ElementType.CDATA, [text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    };\n    DomHandler.prototype.oncdataend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.onprocessinginstruction = function (name, data) {\n        var node = new node_1.ProcessingInstruction(name, data);\n        this.addNode(node);\n    };\n    DomHandler.prototype.handleCallback = function (error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    };\n    DomHandler.prototype.addNode = function (node) {\n        var parent = this.tagStack[this.tagStack.length - 1];\n        var previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    };\n    return DomHandler;\n}());\nexports.DomHandler = DomHandler;\nexports.default = DomHandler;\n", "{\"Aacute\":\"\u00C1\",\"aacute\":\"\u00E1\",\"Abreve\":\"\u0102\",\"abreve\":\"\u0103\",\"ac\":\"\u223E\",\"acd\":\"\u223F\",\"acE\":\"\u223E\u0333\",\"Acirc\":\"\u00C2\",\"acirc\":\"\u00E2\",\"acute\":\"\u00B4\",\"Acy\":\"\u0410\",\"acy\":\"\u0430\",\"AElig\":\"\u00C6\",\"aelig\":\"\u00E6\",\"af\":\"\u2061\",\"Afr\":\"\uD835\uDD04\",\"afr\":\"\uD835\uDD1E\",\"Agrave\":\"\u00C0\",\"agrave\":\"\u00E0\",\"alefsym\":\"\u2135\",\"aleph\":\"\u2135\",\"Alpha\":\"\u0391\",\"alpha\":\"\u03B1\",\"Amacr\":\"\u0100\",\"amacr\":\"\u0101\",\"amalg\":\"\u2A3F\",\"amp\":\"&\",\"AMP\":\"&\",\"andand\":\"\u2A55\",\"And\":\"\u2A53\",\"and\":\"\u2227\",\"andd\":\"\u2A5C\",\"andslope\":\"\u2A58\",\"andv\":\"\u2A5A\",\"ang\":\"\u2220\",\"ange\":\"\u29A4\",\"angle\":\"\u2220\",\"angmsdaa\":\"\u29A8\",\"angmsdab\":\"\u29A9\",\"angmsdac\":\"\u29AA\",\"angmsdad\":\"\u29AB\",\"angmsdae\":\"\u29AC\",\"angmsdaf\":\"\u29AD\",\"angmsdag\":\"\u29AE\",\"angmsdah\":\"\u29AF\",\"angmsd\":\"\u2221\",\"angrt\":\"\u221F\",\"angrtvb\":\"\u22BE\",\"angrtvbd\":\"\u299D\",\"angsph\":\"\u2222\",\"angst\":\"\u00C5\",\"angzarr\":\"\u237C\",\"Aogon\":\"\u0104\",\"aogon\":\"\u0105\",\"Aopf\":\"\uD835\uDD38\",\"aopf\":\"\uD835\uDD52\",\"apacir\":\"\u2A6F\",\"ap\":\"\u2248\",\"apE\":\"\u2A70\",\"ape\":\"\u224A\",\"apid\":\"\u224B\",\"apos\":\"'\",\"ApplyFunction\":\"\u2061\",\"approx\":\"\u2248\",\"approxeq\":\"\u224A\",\"Aring\":\"\u00C5\",\"aring\":\"\u00E5\",\"Ascr\":\"\uD835\uDC9C\",\"ascr\":\"\uD835\uDCB6\",\"Assign\":\"\u2254\",\"ast\":\"*\",\"asymp\":\"\u2248\",\"asympeq\":\"\u224D\",\"Atilde\":\"\u00C3\",\"atilde\":\"\u00E3\",\"Auml\":\"\u00C4\",\"auml\":\"\u00E4\",\"awconint\":\"\u2233\",\"awint\":\"\u2A11\",\"backcong\":\"\u224C\",\"backepsilon\":\"\u03F6\",\"backprime\":\"\u2035\",\"backsim\":\"\u223D\",\"backsimeq\":\"\u22CD\",\"Backslash\":\"\u2216\",\"Barv\":\"\u2AE7\",\"barvee\":\"\u22BD\",\"barwed\":\"\u2305\",\"Barwed\":\"\u2306\",\"barwedge\":\"\u2305\",\"bbrk\":\"\u23B5\",\"bbrktbrk\":\"\u23B6\",\"bcong\":\"\u224C\",\"Bcy\":\"\u0411\",\"bcy\":\"\u0431\",\"bdquo\":\"\u201E\",\"becaus\":\"\u2235\",\"because\":\"\u2235\",\"Because\":\"\u2235\",\"bemptyv\":\"\u29B0\",\"bepsi\":\"\u03F6\",\"bernou\":\"\u212C\",\"Bernoullis\":\"\u212C\",\"Beta\":\"\u0392\",\"beta\":\"\u03B2\",\"beth\":\"\u2136\",\"between\":\"\u226C\",\"Bfr\":\"\uD835\uDD05\",\"bfr\":\"\uD835\uDD1F\",\"bigcap\":\"\u22C2\",\"bigcirc\":\"\u25EF\",\"bigcup\":\"\u22C3\",\"bigodot\":\"\u2A00\",\"bigoplus\":\"\u2A01\",\"bigotimes\":\"\u2A02\",\"bigsqcup\":\"\u2A06\",\"bigstar\":\"\u2605\",\"bigtriangledown\":\"\u25BD\",\"bigtriangleup\":\"\u25B3\",\"biguplus\":\"\u2A04\",\"bigvee\":\"\u22C1\",\"bigwedge\":\"\u22C0\",\"bkarow\":\"\u290D\",\"blacklozenge\":\"\u29EB\",\"blacksquare\":\"\u25AA\",\"blacktriangle\":\"\u25B4\",\"blacktriangledown\":\"\u25BE\",\"blacktriangleleft\":\"\u25C2\",\"blacktriangleright\":\"\u25B8\",\"blank\":\"\u2423\",\"blk12\":\"\u2592\",\"blk14\":\"\u2591\",\"blk34\":\"\u2593\",\"block\":\"\u2588\",\"bne\":\"=\u20E5\",\"bnequiv\":\"\u2261\u20E5\",\"bNot\":\"\u2AED\",\"bnot\":\"\u2310\",\"Bopf\":\"\uD835\uDD39\",\"bopf\":\"\uD835\uDD53\",\"bot\":\"\u22A5\",\"bottom\":\"\u22A5\",\"bowtie\":\"\u22C8\",\"boxbox\":\"\u29C9\",\"boxdl\":\"\u2510\",\"boxdL\":\"\u2555\",\"boxDl\":\"\u2556\",\"boxDL\":\"\u2557\",\"boxdr\":\"\u250C\",\"boxdR\":\"\u2552\",\"boxDr\":\"\u2553\",\"boxDR\":\"\u2554\",\"boxh\":\"\u2500\",\"boxH\":\"\u2550\",\"boxhd\":\"\u252C\",\"boxHd\":\"\u2564\",\"boxhD\":\"\u2565\",\"boxHD\":\"\u2566\",\"boxhu\":\"\u2534\",\"boxHu\":\"\u2567\",\"boxhU\":\"\u2568\",\"boxHU\":\"\u2569\",\"boxminus\":\"\u229F\",\"boxplus\":\"\u229E\",\"boxtimes\":\"\u22A0\",\"boxul\":\"\u2518\",\"boxuL\":\"\u255B\",\"boxUl\":\"\u255C\",\"boxUL\":\"\u255D\",\"boxur\":\"\u2514\",\"boxuR\":\"\u2558\",\"boxUr\":\"\u2559\",\"boxUR\":\"\u255A\",\"boxv\":\"\u2502\",\"boxV\":\"\u2551\",\"boxvh\":\"\u253C\",\"boxvH\":\"\u256A\",\"boxVh\":\"\u256B\",\"boxVH\":\"\u256C\",\"boxvl\":\"\u2524\",\"boxvL\":\"\u2561\",\"boxVl\":\"\u2562\",\"boxVL\":\"\u2563\",\"boxvr\":\"\u251C\",\"boxvR\":\"\u255E\",\"boxVr\":\"\u255F\",\"boxVR\":\"\u2560\",\"bprime\":\"\u2035\",\"breve\":\"\u02D8\",\"Breve\":\"\u02D8\",\"brvbar\":\"\u00A6\",\"bscr\":\"\uD835\uDCB7\",\"Bscr\":\"\u212C\",\"bsemi\":\"\u204F\",\"bsim\":\"\u223D\",\"bsime\":\"\u22CD\",\"bsolb\":\"\u29C5\",\"bsol\":\"\\\\\",\"bsolhsub\":\"\u27C8\",\"bull\":\"\u2022\",\"bullet\":\"\u2022\",\"bump\":\"\u224E\",\"bumpE\":\"\u2AAE\",\"bumpe\":\"\u224F\",\"Bumpeq\":\"\u224E\",\"bumpeq\":\"\u224F\",\"Cacute\":\"\u0106\",\"cacute\":\"\u0107\",\"capand\":\"\u2A44\",\"capbrcup\":\"\u2A49\",\"capcap\":\"\u2A4B\",\"cap\":\"\u2229\",\"Cap\":\"\u22D2\",\"capcup\":\"\u2A47\",\"capdot\":\"\u2A40\",\"CapitalDifferentialD\":\"\u2145\",\"caps\":\"\u2229\uFE00\",\"caret\":\"\u2041\",\"caron\":\"\u02C7\",\"Cayleys\":\"\u212D\",\"ccaps\":\"\u2A4D\",\"Ccaron\":\"\u010C\",\"ccaron\":\"\u010D\",\"Ccedil\":\"\u00C7\",\"ccedil\":\"\u00E7\",\"Ccirc\":\"\u0108\",\"ccirc\":\"\u0109\",\"Cconint\":\"\u2230\",\"ccups\":\"\u2A4C\",\"ccupssm\":\"\u2A50\",\"Cdot\":\"\u010A\",\"cdot\":\"\u010B\",\"cedil\":\"\u00B8\",\"Cedilla\":\"\u00B8\",\"cemptyv\":\"\u29B2\",\"cent\":\"\u00A2\",\"centerdot\":\"\u00B7\",\"CenterDot\":\"\u00B7\",\"cfr\":\"\uD835\uDD20\",\"Cfr\":\"\u212D\",\"CHcy\":\"\u0427\",\"chcy\":\"\u0447\",\"check\":\"\u2713\",\"checkmark\":\"\u2713\",\"Chi\":\"\u03A7\",\"chi\":\"\u03C7\",\"circ\":\"\u02C6\",\"circeq\":\"\u2257\",\"circlearrowleft\":\"\u21BA\",\"circlearrowright\":\"\u21BB\",\"circledast\":\"\u229B\",\"circledcirc\":\"\u229A\",\"circleddash\":\"\u229D\",\"CircleDot\":\"\u2299\",\"circledR\":\"\u00AE\",\"circledS\":\"\u24C8\",\"CircleMinus\":\"\u2296\",\"CirclePlus\":\"\u2295\",\"CircleTimes\":\"\u2297\",\"cir\":\"\u25CB\",\"cirE\":\"\u29C3\",\"cire\":\"\u2257\",\"cirfnint\":\"\u2A10\",\"cirmid\":\"\u2AEF\",\"cirscir\":\"\u29C2\",\"ClockwiseContourIntegral\":\"\u2232\",\"CloseCurlyDoubleQuote\":\"\u201D\",\"CloseCurlyQuote\":\"\u2019\",\"clubs\":\"\u2663\",\"clubsuit\":\"\u2663\",\"colon\":\":\",\"Colon\":\"\u2237\",\"Colone\":\"\u2A74\",\"colone\":\"\u2254\",\"coloneq\":\"\u2254\",\"comma\":\",\",\"commat\":\"@\",\"comp\":\"\u2201\",\"compfn\":\"\u2218\",\"complement\":\"\u2201\",\"complexes\":\"\u2102\",\"cong\":\"\u2245\",\"congdot\":\"\u2A6D\",\"Congruent\":\"\u2261\",\"conint\":\"\u222E\",\"Conint\":\"\u222F\",\"ContourIntegral\":\"\u222E\",\"copf\":\"\uD835\uDD54\",\"Copf\":\"\u2102\",\"coprod\":\"\u2210\",\"Coproduct\":\"\u2210\",\"copy\":\"\u00A9\",\"COPY\":\"\u00A9\",\"copysr\":\"\u2117\",\"CounterClockwiseContourIntegral\":\"\u2233\",\"crarr\":\"\u21B5\",\"cross\":\"\u2717\",\"Cross\":\"\u2A2F\",\"Cscr\":\"\uD835\uDC9E\",\"cscr\":\"\uD835\uDCB8\",\"csub\":\"\u2ACF\",\"csube\":\"\u2AD1\",\"csup\":\"\u2AD0\",\"csupe\":\"\u2AD2\",\"ctdot\":\"\u22EF\",\"cudarrl\":\"\u2938\",\"cudarrr\":\"\u2935\",\"cuepr\":\"\u22DE\",\"cuesc\":\"\u22DF\",\"cularr\":\"\u21B6\",\"cularrp\":\"\u293D\",\"cupbrcap\":\"\u2A48\",\"cupcap\":\"\u2A46\",\"CupCap\":\"\u224D\",\"cup\":\"\u222A\",\"Cup\":\"\u22D3\",\"cupcup\":\"\u2A4A\",\"cupdot\":\"\u228D\",\"cupor\":\"\u2A45\",\"cups\":\"\u222A\uFE00\",\"curarr\":\"\u21B7\",\"curarrm\":\"\u293C\",\"curlyeqprec\":\"\u22DE\",\"curlyeqsucc\":\"\u22DF\",\"curlyvee\":\"\u22CE\",\"curlywedge\":\"\u22CF\",\"curren\":\"\u00A4\",\"curvearrowleft\":\"\u21B6\",\"curvearrowright\":\"\u21B7\",\"cuvee\":\"\u22CE\",\"cuwed\":\"\u22CF\",\"cwconint\":\"\u2232\",\"cwint\":\"\u2231\",\"cylcty\":\"\u232D\",\"dagger\":\"\u2020\",\"Dagger\":\"\u2021\",\"daleth\":\"\u2138\",\"darr\":\"\u2193\",\"Darr\":\"\u21A1\",\"dArr\":\"\u21D3\",\"dash\":\"\u2010\",\"Dashv\":\"\u2AE4\",\"dashv\":\"\u22A3\",\"dbkarow\":\"\u290F\",\"dblac\":\"\u02DD\",\"Dcaron\":\"\u010E\",\"dcaron\":\"\u010F\",\"Dcy\":\"\u0414\",\"dcy\":\"\u0434\",\"ddagger\":\"\u2021\",\"ddarr\":\"\u21CA\",\"DD\":\"\u2145\",\"dd\":\"\u2146\",\"DDotrahd\":\"\u2911\",\"ddotseq\":\"\u2A77\",\"deg\":\"\u00B0\",\"Del\":\"\u2207\",\"Delta\":\"\u0394\",\"delta\":\"\u03B4\",\"demptyv\":\"\u29B1\",\"dfisht\":\"\u297F\",\"Dfr\":\"\uD835\uDD07\",\"dfr\":\"\uD835\uDD21\",\"dHar\":\"\u2965\",\"dharl\":\"\u21C3\",\"dharr\":\"\u21C2\",\"DiacriticalAcute\":\"\u00B4\",\"DiacriticalDot\":\"\u02D9\",\"DiacriticalDoubleAcute\":\"\u02DD\",\"DiacriticalGrave\":\"`\",\"DiacriticalTilde\":\"\u02DC\",\"diam\":\"\u22C4\",\"diamond\":\"\u22C4\",\"Diamond\":\"\u22C4\",\"diamondsuit\":\"\u2666\",\"diams\":\"\u2666\",\"die\":\"\u00A8\",\"DifferentialD\":\"\u2146\",\"digamma\":\"\u03DD\",\"disin\":\"\u22F2\",\"div\":\"\u00F7\",\"divide\":\"\u00F7\",\"divideontimes\":\"\u22C7\",\"divonx\":\"\u22C7\",\"DJcy\":\"\u0402\",\"djcy\":\"\u0452\",\"dlcorn\":\"\u231E\",\"dlcrop\":\"\u230D\",\"dollar\":\"$\",\"Dopf\":\"\uD835\uDD3B\",\"dopf\":\"\uD835\uDD55\",\"Dot\":\"\u00A8\",\"dot\":\"\u02D9\",\"DotDot\":\"\u20DC\",\"doteq\":\"\u2250\",\"doteqdot\":\"\u2251\",\"DotEqual\":\"\u2250\",\"dotminus\":\"\u2238\",\"dotplus\":\"\u2214\",\"dotsquare\":\"\u22A1\",\"doublebarwedge\":\"\u2306\",\"DoubleContourIntegral\":\"\u222F\",\"DoubleDot\":\"\u00A8\",\"DoubleDownArrow\":\"\u21D3\",\"DoubleLeftArrow\":\"\u21D0\",\"DoubleLeftRightArrow\":\"\u21D4\",\"DoubleLeftTee\":\"\u2AE4\",\"DoubleLongLeftArrow\":\"\u27F8\",\"DoubleLongLeftRightArrow\":\"\u27FA\",\"DoubleLongRightArrow\":\"\u27F9\",\"DoubleRightArrow\":\"\u21D2\",\"DoubleRightTee\":\"\u22A8\",\"DoubleUpArrow\":\"\u21D1\",\"DoubleUpDownArrow\":\"\u21D5\",\"DoubleVerticalBar\":\"\u2225\",\"DownArrowBar\":\"\u2913\",\"downarrow\":\"\u2193\",\"DownArrow\":\"\u2193\",\"Downarrow\":\"\u21D3\",\"DownArrowUpArrow\":\"\u21F5\",\"DownBreve\":\"\u0311\",\"downdownarrows\":\"\u21CA\",\"downharpoonleft\":\"\u21C3\",\"downharpoonright\":\"\u21C2\",\"DownLeftRightVector\":\"\u2950\",\"DownLeftTeeVector\":\"\u295E\",\"DownLeftVectorBar\":\"\u2956\",\"DownLeftVector\":\"\u21BD\",\"DownRightTeeVector\":\"\u295F\",\"DownRightVectorBar\":\"\u2957\",\"DownRightVector\":\"\u21C1\",\"DownTeeArrow\":\"\u21A7\",\"DownTee\":\"\u22A4\",\"drbkarow\":\"\u2910\",\"drcorn\":\"\u231F\",\"drcrop\":\"\u230C\",\"Dscr\":\"\uD835\uDC9F\",\"dscr\":\"\uD835\uDCB9\",\"DScy\":\"\u0405\",\"dscy\":\"\u0455\",\"dsol\":\"\u29F6\",\"Dstrok\":\"\u0110\",\"dstrok\":\"\u0111\",\"dtdot\":\"\u22F1\",\"dtri\":\"\u25BF\",\"dtrif\":\"\u25BE\",\"duarr\":\"\u21F5\",\"duhar\":\"\u296F\",\"dwangle\":\"\u29A6\",\"DZcy\":\"\u040F\",\"dzcy\":\"\u045F\",\"dzigrarr\":\"\u27FF\",\"Eacute\":\"\u00C9\",\"eacute\":\"\u00E9\",\"easter\":\"\u2A6E\",\"Ecaron\":\"\u011A\",\"ecaron\":\"\u011B\",\"Ecirc\":\"\u00CA\",\"ecirc\":\"\u00EA\",\"ecir\":\"\u2256\",\"ecolon\":\"\u2255\",\"Ecy\":\"\u042D\",\"ecy\":\"\u044D\",\"eDDot\":\"\u2A77\",\"Edot\":\"\u0116\",\"edot\":\"\u0117\",\"eDot\":\"\u2251\",\"ee\":\"\u2147\",\"efDot\":\"\u2252\",\"Efr\":\"\uD835\uDD08\",\"efr\":\"\uD835\uDD22\",\"eg\":\"\u2A9A\",\"Egrave\":\"\u00C8\",\"egrave\":\"\u00E8\",\"egs\":\"\u2A96\",\"egsdot\":\"\u2A98\",\"el\":\"\u2A99\",\"Element\":\"\u2208\",\"elinters\":\"\u23E7\",\"ell\":\"\u2113\",\"els\":\"\u2A95\",\"elsdot\":\"\u2A97\",\"Emacr\":\"\u0112\",\"emacr\":\"\u0113\",\"empty\":\"\u2205\",\"emptyset\":\"\u2205\",\"EmptySmallSquare\":\"\u25FB\",\"emptyv\":\"\u2205\",\"EmptyVerySmallSquare\":\"\u25AB\",\"emsp13\":\"\u2004\",\"emsp14\":\"\u2005\",\"emsp\":\"\u2003\",\"ENG\":\"\u014A\",\"eng\":\"\u014B\",\"ensp\":\"\u2002\",\"Eogon\":\"\u0118\",\"eogon\":\"\u0119\",\"Eopf\":\"\uD835\uDD3C\",\"eopf\":\"\uD835\uDD56\",\"epar\":\"\u22D5\",\"eparsl\":\"\u29E3\",\"eplus\":\"\u2A71\",\"epsi\":\"\u03B5\",\"Epsilon\":\"\u0395\",\"epsilon\":\"\u03B5\",\"epsiv\":\"\u03F5\",\"eqcirc\":\"\u2256\",\"eqcolon\":\"\u2255\",\"eqsim\":\"\u2242\",\"eqslantgtr\":\"\u2A96\",\"eqslantless\":\"\u2A95\",\"Equal\":\"\u2A75\",\"equals\":\"=\",\"EqualTilde\":\"\u2242\",\"equest\":\"\u225F\",\"Equilibrium\":\"\u21CC\",\"equiv\":\"\u2261\",\"equivDD\":\"\u2A78\",\"eqvparsl\":\"\u29E5\",\"erarr\":\"\u2971\",\"erDot\":\"\u2253\",\"escr\":\"\u212F\",\"Escr\":\"\u2130\",\"esdot\":\"\u2250\",\"Esim\":\"\u2A73\",\"esim\":\"\u2242\",\"Eta\":\"\u0397\",\"eta\":\"\u03B7\",\"ETH\":\"\u00D0\",\"eth\":\"\u00F0\",\"Euml\":\"\u00CB\",\"euml\":\"\u00EB\",\"euro\":\"\u20AC\",\"excl\":\"!\",\"exist\":\"\u2203\",\"Exists\":\"\u2203\",\"expectation\":\"\u2130\",\"exponentiale\":\"\u2147\",\"ExponentialE\":\"\u2147\",\"fallingdotseq\":\"\u2252\",\"Fcy\":\"\u0424\",\"fcy\":\"\u0444\",\"female\":\"\u2640\",\"ffilig\":\"\uFB03\",\"fflig\":\"\uFB00\",\"ffllig\":\"\uFB04\",\"Ffr\":\"\uD835\uDD09\",\"ffr\":\"\uD835\uDD23\",\"filig\":\"\uFB01\",\"FilledSmallSquare\":\"\u25FC\",\"FilledVerySmallSquare\":\"\u25AA\",\"fjlig\":\"fj\",\"flat\":\"\u266D\",\"fllig\":\"\uFB02\",\"fltns\":\"\u25B1\",\"fnof\":\"\u0192\",\"Fopf\":\"\uD835\uDD3D\",\"fopf\":\"\uD835\uDD57\",\"forall\":\"\u2200\",\"ForAll\":\"\u2200\",\"fork\":\"\u22D4\",\"forkv\":\"\u2AD9\",\"Fouriertrf\":\"\u2131\",\"fpartint\":\"\u2A0D\",\"frac12\":\"\u00BD\",\"frac13\":\"\u2153\",\"frac14\":\"\u00BC\",\"frac15\":\"\u2155\",\"frac16\":\"\u2159\",\"frac18\":\"\u215B\",\"frac23\":\"\u2154\",\"frac25\":\"\u2156\",\"frac34\":\"\u00BE\",\"frac35\":\"\u2157\",\"frac38\":\"\u215C\",\"frac45\":\"\u2158\",\"frac56\":\"\u215A\",\"frac58\":\"\u215D\",\"frac78\":\"\u215E\",\"frasl\":\"\u2044\",\"frown\":\"\u2322\",\"fscr\":\"\uD835\uDCBB\",\"Fscr\":\"\u2131\",\"gacute\":\"\u01F5\",\"Gamma\":\"\u0393\",\"gamma\":\"\u03B3\",\"Gammad\":\"\u03DC\",\"gammad\":\"\u03DD\",\"gap\":\"\u2A86\",\"Gbreve\":\"\u011E\",\"gbreve\":\"\u011F\",\"Gcedil\":\"\u0122\",\"Gcirc\":\"\u011C\",\"gcirc\":\"\u011D\",\"Gcy\":\"\u0413\",\"gcy\":\"\u0433\",\"Gdot\":\"\u0120\",\"gdot\":\"\u0121\",\"ge\":\"\u2265\",\"gE\":\"\u2267\",\"gEl\":\"\u2A8C\",\"gel\":\"\u22DB\",\"geq\":\"\u2265\",\"geqq\":\"\u2267\",\"geqslant\":\"\u2A7E\",\"gescc\":\"\u2AA9\",\"ges\":\"\u2A7E\",\"gesdot\":\"\u2A80\",\"gesdoto\":\"\u2A82\",\"gesdotol\":\"\u2A84\",\"gesl\":\"\u22DB\uFE00\",\"gesles\":\"\u2A94\",\"Gfr\":\"\uD835\uDD0A\",\"gfr\":\"\uD835\uDD24\",\"gg\":\"\u226B\",\"Gg\":\"\u22D9\",\"ggg\":\"\u22D9\",\"gimel\":\"\u2137\",\"GJcy\":\"\u0403\",\"gjcy\":\"\u0453\",\"gla\":\"\u2AA5\",\"gl\":\"\u2277\",\"glE\":\"\u2A92\",\"glj\":\"\u2AA4\",\"gnap\":\"\u2A8A\",\"gnapprox\":\"\u2A8A\",\"gne\":\"\u2A88\",\"gnE\":\"\u2269\",\"gneq\":\"\u2A88\",\"gneqq\":\"\u2269\",\"gnsim\":\"\u22E7\",\"Gopf\":\"\uD835\uDD3E\",\"gopf\":\"\uD835\uDD58\",\"grave\":\"`\",\"GreaterEqual\":\"\u2265\",\"GreaterEqualLess\":\"\u22DB\",\"GreaterFullEqual\":\"\u2267\",\"GreaterGreater\":\"\u2AA2\",\"GreaterLess\":\"\u2277\",\"GreaterSlantEqual\":\"\u2A7E\",\"GreaterTilde\":\"\u2273\",\"Gscr\":\"\uD835\uDCA2\",\"gscr\":\"\u210A\",\"gsim\":\"\u2273\",\"gsime\":\"\u2A8E\",\"gsiml\":\"\u2A90\",\"gtcc\":\"\u2AA7\",\"gtcir\":\"\u2A7A\",\"gt\":\">\",\"GT\":\">\",\"Gt\":\"\u226B\",\"gtdot\":\"\u22D7\",\"gtlPar\":\"\u2995\",\"gtquest\":\"\u2A7C\",\"gtrapprox\":\"\u2A86\",\"gtrarr\":\"\u2978\",\"gtrdot\":\"\u22D7\",\"gtreqless\":\"\u22DB\",\"gtreqqless\":\"\u2A8C\",\"gtrless\":\"\u2277\",\"gtrsim\":\"\u2273\",\"gvertneqq\":\"\u2269\uFE00\",\"gvnE\":\"\u2269\uFE00\",\"Hacek\":\"\u02C7\",\"hairsp\":\"\u200A\",\"half\":\"\u00BD\",\"hamilt\":\"\u210B\",\"HARDcy\":\"\u042A\",\"hardcy\":\"\u044A\",\"harrcir\":\"\u2948\",\"harr\":\"\u2194\",\"hArr\":\"\u21D4\",\"harrw\":\"\u21AD\",\"Hat\":\"^\",\"hbar\":\"\u210F\",\"Hcirc\":\"\u0124\",\"hcirc\":\"\u0125\",\"hearts\":\"\u2665\",\"heartsuit\":\"\u2665\",\"hellip\":\"\u2026\",\"hercon\":\"\u22B9\",\"hfr\":\"\uD835\uDD25\",\"Hfr\":\"\u210C\",\"HilbertSpace\":\"\u210B\",\"hksearow\":\"\u2925\",\"hkswarow\":\"\u2926\",\"hoarr\":\"\u21FF\",\"homtht\":\"\u223B\",\"hookleftarrow\":\"\u21A9\",\"hookrightarrow\":\"\u21AA\",\"hopf\":\"\uD835\uDD59\",\"Hopf\":\"\u210D\",\"horbar\":\"\u2015\",\"HorizontalLine\":\"\u2500\",\"hscr\":\"\uD835\uDCBD\",\"Hscr\":\"\u210B\",\"hslash\":\"\u210F\",\"Hstrok\":\"\u0126\",\"hstrok\":\"\u0127\",\"HumpDownHump\":\"\u224E\",\"HumpEqual\":\"\u224F\",\"hybull\":\"\u2043\",\"hyphen\":\"\u2010\",\"Iacute\":\"\u00CD\",\"iacute\":\"\u00ED\",\"ic\":\"\u2063\",\"Icirc\":\"\u00CE\",\"icirc\":\"\u00EE\",\"Icy\":\"\u0418\",\"icy\":\"\u0438\",\"Idot\":\"\u0130\",\"IEcy\":\"\u0415\",\"iecy\":\"\u0435\",\"iexcl\":\"\u00A1\",\"iff\":\"\u21D4\",\"ifr\":\"\uD835\uDD26\",\"Ifr\":\"\u2111\",\"Igrave\":\"\u00CC\",\"igrave\":\"\u00EC\",\"ii\":\"\u2148\",\"iiiint\":\"\u2A0C\",\"iiint\":\"\u222D\",\"iinfin\":\"\u29DC\",\"iiota\":\"\u2129\",\"IJlig\":\"\u0132\",\"ijlig\":\"\u0133\",\"Imacr\":\"\u012A\",\"imacr\":\"\u012B\",\"image\":\"\u2111\",\"ImaginaryI\":\"\u2148\",\"imagline\":\"\u2110\",\"imagpart\":\"\u2111\",\"imath\":\"\u0131\",\"Im\":\"\u2111\",\"imof\":\"\u22B7\",\"imped\":\"\u01B5\",\"Implies\":\"\u21D2\",\"incare\":\"\u2105\",\"in\":\"\u2208\",\"infin\":\"\u221E\",\"infintie\":\"\u29DD\",\"inodot\":\"\u0131\",\"intcal\":\"\u22BA\",\"int\":\"\u222B\",\"Int\":\"\u222C\",\"integers\":\"\u2124\",\"Integral\":\"\u222B\",\"intercal\":\"\u22BA\",\"Intersection\":\"\u22C2\",\"intlarhk\":\"\u2A17\",\"intprod\":\"\u2A3C\",\"InvisibleComma\":\"\u2063\",\"InvisibleTimes\":\"\u2062\",\"IOcy\":\"\u0401\",\"iocy\":\"\u0451\",\"Iogon\":\"\u012E\",\"iogon\":\"\u012F\",\"Iopf\":\"\uD835\uDD40\",\"iopf\":\"\uD835\uDD5A\",\"Iota\":\"\u0399\",\"iota\":\"\u03B9\",\"iprod\":\"\u2A3C\",\"iquest\":\"\u00BF\",\"iscr\":\"\uD835\uDCBE\",\"Iscr\":\"\u2110\",\"isin\":\"\u2208\",\"isindot\":\"\u22F5\",\"isinE\":\"\u22F9\",\"isins\":\"\u22F4\",\"isinsv\":\"\u22F3\",\"isinv\":\"\u2208\",\"it\":\"\u2062\",\"Itilde\":\"\u0128\",\"itilde\":\"\u0129\",\"Iukcy\":\"\u0406\",\"iukcy\":\"\u0456\",\"Iuml\":\"\u00CF\",\"iuml\":\"\u00EF\",\"Jcirc\":\"\u0134\",\"jcirc\":\"\u0135\",\"Jcy\":\"\u0419\",\"jcy\":\"\u0439\",\"Jfr\":\"\uD835\uDD0D\",\"jfr\":\"\uD835\uDD27\",\"jmath\":\"\u0237\",\"Jopf\":\"\uD835\uDD41\",\"jopf\":\"\uD835\uDD5B\",\"Jscr\":\"\uD835\uDCA5\",\"jscr\":\"\uD835\uDCBF\",\"Jsercy\":\"\u0408\",\"jsercy\":\"\u0458\",\"Jukcy\":\"\u0404\",\"jukcy\":\"\u0454\",\"Kappa\":\"\u039A\",\"kappa\":\"\u03BA\",\"kappav\":\"\u03F0\",\"Kcedil\":\"\u0136\",\"kcedil\":\"\u0137\",\"Kcy\":\"\u041A\",\"kcy\":\"\u043A\",\"Kfr\":\"\uD835\uDD0E\",\"kfr\":\"\uD835\uDD28\",\"kgreen\":\"\u0138\",\"KHcy\":\"\u0425\",\"khcy\":\"\u0445\",\"KJcy\":\"\u040C\",\"kjcy\":\"\u045C\",\"Kopf\":\"\uD835\uDD42\",\"kopf\":\"\uD835\uDD5C\",\"Kscr\":\"\uD835\uDCA6\",\"kscr\":\"\uD835\uDCC0\",\"lAarr\":\"\u21DA\",\"Lacute\":\"\u0139\",\"lacute\":\"\u013A\",\"laemptyv\":\"\u29B4\",\"lagran\":\"\u2112\",\"Lambda\":\"\u039B\",\"lambda\":\"\u03BB\",\"lang\":\"\u27E8\",\"Lang\":\"\u27EA\",\"langd\":\"\u2991\",\"langle\":\"\u27E8\",\"lap\":\"\u2A85\",\"Laplacetrf\":\"\u2112\",\"laquo\":\"\u00AB\",\"larrb\":\"\u21E4\",\"larrbfs\":\"\u291F\",\"larr\":\"\u2190\",\"Larr\":\"\u219E\",\"lArr\":\"\u21D0\",\"larrfs\":\"\u291D\",\"larrhk\":\"\u21A9\",\"larrlp\":\"\u21AB\",\"larrpl\":\"\u2939\",\"larrsim\":\"\u2973\",\"larrtl\":\"\u21A2\",\"latail\":\"\u2919\",\"lAtail\":\"\u291B\",\"lat\":\"\u2AAB\",\"late\":\"\u2AAD\",\"lates\":\"\u2AAD\uFE00\",\"lbarr\":\"\u290C\",\"lBarr\":\"\u290E\",\"lbbrk\":\"\u2772\",\"lbrace\":\"{\",\"lbrack\":\"[\",\"lbrke\":\"\u298B\",\"lbrksld\":\"\u298F\",\"lbrkslu\":\"\u298D\",\"Lcaron\":\"\u013D\",\"lcaron\":\"\u013E\",\"Lcedil\":\"\u013B\",\"lcedil\":\"\u013C\",\"lceil\":\"\u2308\",\"lcub\":\"{\",\"Lcy\":\"\u041B\",\"lcy\":\"\u043B\",\"ldca\":\"\u2936\",\"ldquo\":\"\u201C\",\"ldquor\":\"\u201E\",\"ldrdhar\":\"\u2967\",\"ldrushar\":\"\u294B\",\"ldsh\":\"\u21B2\",\"le\":\"\u2264\",\"lE\":\"\u2266\",\"LeftAngleBracket\":\"\u27E8\",\"LeftArrowBar\":\"\u21E4\",\"leftarrow\":\"\u2190\",\"LeftArrow\":\"\u2190\",\"Leftarrow\":\"\u21D0\",\"LeftArrowRightArrow\":\"\u21C6\",\"leftarrowtail\":\"\u21A2\",\"LeftCeiling\":\"\u2308\",\"LeftDoubleBracket\":\"\u27E6\",\"LeftDownTeeVector\":\"\u2961\",\"LeftDownVectorBar\":\"\u2959\",\"LeftDownVector\":\"\u21C3\",\"LeftFloor\":\"\u230A\",\"leftharpoondown\":\"\u21BD\",\"leftharpoonup\":\"\u21BC\",\"leftleftarrows\":\"\u21C7\",\"leftrightarrow\":\"\u2194\",\"LeftRightArrow\":\"\u2194\",\"Leftrightarrow\":\"\u21D4\",\"leftrightarrows\":\"\u21C6\",\"leftrightharpoons\":\"\u21CB\",\"leftrightsquigarrow\":\"\u21AD\",\"LeftRightVector\":\"\u294E\",\"LeftTeeArrow\":\"\u21A4\",\"LeftTee\":\"\u22A3\",\"LeftTeeVector\":\"\u295A\",\"leftthreetimes\":\"\u22CB\",\"LeftTriangleBar\":\"\u29CF\",\"LeftTriangle\":\"\u22B2\",\"LeftTriangleEqual\":\"\u22B4\",\"LeftUpDownVector\":\"\u2951\",\"LeftUpTeeVector\":\"\u2960\",\"LeftUpVectorBar\":\"\u2958\",\"LeftUpVector\":\"\u21BF\",\"LeftVectorBar\":\"\u2952\",\"LeftVector\":\"\u21BC\",\"lEg\":\"\u2A8B\",\"leg\":\"\u22DA\",\"leq\":\"\u2264\",\"leqq\":\"\u2266\",\"leqslant\":\"\u2A7D\",\"lescc\":\"\u2AA8\",\"les\":\"\u2A7D\",\"lesdot\":\"\u2A7F\",\"lesdoto\":\"\u2A81\",\"lesdotor\":\"\u2A83\",\"lesg\":\"\u22DA\uFE00\",\"lesges\":\"\u2A93\",\"lessapprox\":\"\u2A85\",\"lessdot\":\"\u22D6\",\"lesseqgtr\":\"\u22DA\",\"lesseqqgtr\":\"\u2A8B\",\"LessEqualGreater\":\"\u22DA\",\"LessFullEqual\":\"\u2266\",\"LessGreater\":\"\u2276\",\"lessgtr\":\"\u2276\",\"LessLess\":\"\u2AA1\",\"lesssim\":\"\u2272\",\"LessSlantEqual\":\"\u2A7D\",\"LessTilde\":\"\u2272\",\"lfisht\":\"\u297C\",\"lfloor\":\"\u230A\",\"Lfr\":\"\uD835\uDD0F\",\"lfr\":\"\uD835\uDD29\",\"lg\":\"\u2276\",\"lgE\":\"\u2A91\",\"lHar\":\"\u2962\",\"lhard\":\"\u21BD\",\"lharu\":\"\u21BC\",\"lharul\":\"\u296A\",\"lhblk\":\"\u2584\",\"LJcy\":\"\u0409\",\"ljcy\":\"\u0459\",\"llarr\":\"\u21C7\",\"ll\":\"\u226A\",\"Ll\":\"\u22D8\",\"llcorner\":\"\u231E\",\"Lleftarrow\":\"\u21DA\",\"llhard\":\"\u296B\",\"lltri\":\"\u25FA\",\"Lmidot\":\"\u013F\",\"lmidot\":\"\u0140\",\"lmoustache\":\"\u23B0\",\"lmoust\":\"\u23B0\",\"lnap\":\"\u2A89\",\"lnapprox\":\"\u2A89\",\"lne\":\"\u2A87\",\"lnE\":\"\u2268\",\"lneq\":\"\u2A87\",\"lneqq\":\"\u2268\",\"lnsim\":\"\u22E6\",\"loang\":\"\u27EC\",\"loarr\":\"\u21FD\",\"lobrk\":\"\u27E6\",\"longleftarrow\":\"\u27F5\",\"LongLeftArrow\":\"\u27F5\",\"Longleftarrow\":\"\u27F8\",\"longleftrightarrow\":\"\u27F7\",\"LongLeftRightArrow\":\"\u27F7\",\"Longleftrightarrow\":\"\u27FA\",\"longmapsto\":\"\u27FC\",\"longrightarrow\":\"\u27F6\",\"LongRightArrow\":\"\u27F6\",\"Longrightarrow\":\"\u27F9\",\"looparrowleft\":\"\u21AB\",\"looparrowright\":\"\u21AC\",\"lopar\":\"\u2985\",\"Lopf\":\"\uD835\uDD43\",\"lopf\":\"\uD835\uDD5D\",\"loplus\":\"\u2A2D\",\"lotimes\":\"\u2A34\",\"lowast\":\"\u2217\",\"lowbar\":\"_\",\"LowerLeftArrow\":\"\u2199\",\"LowerRightArrow\":\"\u2198\",\"loz\":\"\u25CA\",\"lozenge\":\"\u25CA\",\"lozf\":\"\u29EB\",\"lpar\":\"(\",\"lparlt\":\"\u2993\",\"lrarr\":\"\u21C6\",\"lrcorner\":\"\u231F\",\"lrhar\":\"\u21CB\",\"lrhard\":\"\u296D\",\"lrm\":\"\u200E\",\"lrtri\":\"\u22BF\",\"lsaquo\":\"\u2039\",\"lscr\":\"\uD835\uDCC1\",\"Lscr\":\"\u2112\",\"lsh\":\"\u21B0\",\"Lsh\":\"\u21B0\",\"lsim\":\"\u2272\",\"lsime\":\"\u2A8D\",\"lsimg\":\"\u2A8F\",\"lsqb\":\"[\",\"lsquo\":\"\u2018\",\"lsquor\":\"\u201A\",\"Lstrok\":\"\u0141\",\"lstrok\":\"\u0142\",\"ltcc\":\"\u2AA6\",\"ltcir\":\"\u2A79\",\"lt\":\"<\",\"LT\":\"<\",\"Lt\":\"\u226A\",\"ltdot\":\"\u22D6\",\"lthree\":\"\u22CB\",\"ltimes\":\"\u22C9\",\"ltlarr\":\"\u2976\",\"ltquest\":\"\u2A7B\",\"ltri\":\"\u25C3\",\"ltrie\":\"\u22B4\",\"ltrif\":\"\u25C2\",\"ltrPar\":\"\u2996\",\"lurdshar\":\"\u294A\",\"luruhar\":\"\u2966\",\"lvertneqq\":\"\u2268\uFE00\",\"lvnE\":\"\u2268\uFE00\",\"macr\":\"\u00AF\",\"male\":\"\u2642\",\"malt\":\"\u2720\",\"maltese\":\"\u2720\",\"Map\":\"\u2905\",\"map\":\"\u21A6\",\"mapsto\":\"\u21A6\",\"mapstodown\":\"\u21A7\",\"mapstoleft\":\"\u21A4\",\"mapstoup\":\"\u21A5\",\"marker\":\"\u25AE\",\"mcomma\":\"\u2A29\",\"Mcy\":\"\u041C\",\"mcy\":\"\u043C\",\"mdash\":\"\u2014\",\"mDDot\":\"\u223A\",\"measuredangle\":\"\u2221\",\"MediumSpace\":\"\u205F\",\"Mellintrf\":\"\u2133\",\"Mfr\":\"\uD835\uDD10\",\"mfr\":\"\uD835\uDD2A\",\"mho\":\"\u2127\",\"micro\":\"\u00B5\",\"midast\":\"*\",\"midcir\":\"\u2AF0\",\"mid\":\"\u2223\",\"middot\":\"\u00B7\",\"minusb\":\"\u229F\",\"minus\":\"\u2212\",\"minusd\":\"\u2238\",\"minusdu\":\"\u2A2A\",\"MinusPlus\":\"\u2213\",\"mlcp\":\"\u2ADB\",\"mldr\":\"\u2026\",\"mnplus\":\"\u2213\",\"models\":\"\u22A7\",\"Mopf\":\"\uD835\uDD44\",\"mopf\":\"\uD835\uDD5E\",\"mp\":\"\u2213\",\"mscr\":\"\uD835\uDCC2\",\"Mscr\":\"\u2133\",\"mstpos\":\"\u223E\",\"Mu\":\"\u039C\",\"mu\":\"\u03BC\",\"multimap\":\"\u22B8\",\"mumap\":\"\u22B8\",\"nabla\":\"\u2207\",\"Nacute\":\"\u0143\",\"nacute\":\"\u0144\",\"nang\":\"\u2220\u20D2\",\"nap\":\"\u2249\",\"napE\":\"\u2A70\u0338\",\"napid\":\"\u224B\u0338\",\"napos\":\"\u0149\",\"napprox\":\"\u2249\",\"natural\":\"\u266E\",\"naturals\":\"\u2115\",\"natur\":\"\u266E\",\"nbsp\":\"\u00A0\",\"nbump\":\"\u224E\u0338\",\"nbumpe\":\"\u224F\u0338\",\"ncap\":\"\u2A43\",\"Ncaron\":\"\u0147\",\"ncaron\":\"\u0148\",\"Ncedil\":\"\u0145\",\"ncedil\":\"\u0146\",\"ncong\":\"\u2247\",\"ncongdot\":\"\u2A6D\u0338\",\"ncup\":\"\u2A42\",\"Ncy\":\"\u041D\",\"ncy\":\"\u043D\",\"ndash\":\"\u2013\",\"nearhk\":\"\u2924\",\"nearr\":\"\u2197\",\"neArr\":\"\u21D7\",\"nearrow\":\"\u2197\",\"ne\":\"\u2260\",\"nedot\":\"\u2250\u0338\",\"NegativeMediumSpace\":\"\u200B\",\"NegativeThickSpace\":\"\u200B\",\"NegativeThinSpace\":\"\u200B\",\"NegativeVeryThinSpace\":\"\u200B\",\"nequiv\":\"\u2262\",\"nesear\":\"\u2928\",\"nesim\":\"\u2242\u0338\",\"NestedGreaterGreater\":\"\u226B\",\"NestedLessLess\":\"\u226A\",\"NewLine\":\"\\n\",\"nexist\":\"\u2204\",\"nexists\":\"\u2204\",\"Nfr\":\"\uD835\uDD11\",\"nfr\":\"\uD835\uDD2B\",\"ngE\":\"\u2267\u0338\",\"nge\":\"\u2271\",\"ngeq\":\"\u2271\",\"ngeqq\":\"\u2267\u0338\",\"ngeqslant\":\"\u2A7E\u0338\",\"nges\":\"\u2A7E\u0338\",\"nGg\":\"\u22D9\u0338\",\"ngsim\":\"\u2275\",\"nGt\":\"\u226B\u20D2\",\"ngt\":\"\u226F\",\"ngtr\":\"\u226F\",\"nGtv\":\"\u226B\u0338\",\"nharr\":\"\u21AE\",\"nhArr\":\"\u21CE\",\"nhpar\":\"\u2AF2\",\"ni\":\"\u220B\",\"nis\":\"\u22FC\",\"nisd\":\"\u22FA\",\"niv\":\"\u220B\",\"NJcy\":\"\u040A\",\"njcy\":\"\u045A\",\"nlarr\":\"\u219A\",\"nlArr\":\"\u21CD\",\"nldr\":\"\u2025\",\"nlE\":\"\u2266\u0338\",\"nle\":\"\u2270\",\"nleftarrow\":\"\u219A\",\"nLeftarrow\":\"\u21CD\",\"nleftrightarrow\":\"\u21AE\",\"nLeftrightarrow\":\"\u21CE\",\"nleq\":\"\u2270\",\"nleqq\":\"\u2266\u0338\",\"nleqslant\":\"\u2A7D\u0338\",\"nles\":\"\u2A7D\u0338\",\"nless\":\"\u226E\",\"nLl\":\"\u22D8\u0338\",\"nlsim\":\"\u2274\",\"nLt\":\"\u226A\u20D2\",\"nlt\":\"\u226E\",\"nltri\":\"\u22EA\",\"nltrie\":\"\u22EC\",\"nLtv\":\"\u226A\u0338\",\"nmid\":\"\u2224\",\"NoBreak\":\"\u2060\",\"NonBreakingSpace\":\"\u00A0\",\"nopf\":\"\uD835\uDD5F\",\"Nopf\":\"\u2115\",\"Not\":\"\u2AEC\",\"not\":\"\u00AC\",\"NotCongruent\":\"\u2262\",\"NotCupCap\":\"\u226D\",\"NotDoubleVerticalBar\":\"\u2226\",\"NotElement\":\"\u2209\",\"NotEqual\":\"\u2260\",\"NotEqualTilde\":\"\u2242\u0338\",\"NotExists\":\"\u2204\",\"NotGreater\":\"\u226F\",\"NotGreaterEqual\":\"\u2271\",\"NotGreaterFullEqual\":\"\u2267\u0338\",\"NotGreaterGreater\":\"\u226B\u0338\",\"NotGreaterLess\":\"\u2279\",\"NotGreaterSlantEqual\":\"\u2A7E\u0338\",\"NotGreaterTilde\":\"\u2275\",\"NotHumpDownHump\":\"\u224E\u0338\",\"NotHumpEqual\":\"\u224F\u0338\",\"notin\":\"\u2209\",\"notindot\":\"\u22F5\u0338\",\"notinE\":\"\u22F9\u0338\",\"notinva\":\"\u2209\",\"notinvb\":\"\u22F7\",\"notinvc\":\"\u22F6\",\"NotLeftTriangleBar\":\"\u29CF\u0338\",\"NotLeftTriangle\":\"\u22EA\",\"NotLeftTriangleEqual\":\"\u22EC\",\"NotLess\":\"\u226E\",\"NotLessEqual\":\"\u2270\",\"NotLessGreater\":\"\u2278\",\"NotLessLess\":\"\u226A\u0338\",\"NotLessSlantEqual\":\"\u2A7D\u0338\",\"NotLessTilde\":\"\u2274\",\"NotNestedGreaterGreater\":\"\u2AA2\u0338\",\"NotNestedLessLess\":\"\u2AA1\u0338\",\"notni\":\"\u220C\",\"notniva\":\"\u220C\",\"notnivb\":\"\u22FE\",\"notnivc\":\"\u22FD\",\"NotPrecedes\":\"\u2280\",\"NotPrecedesEqual\":\"\u2AAF\u0338\",\"NotPrecedesSlantEqual\":\"\u22E0\",\"NotReverseElement\":\"\u220C\",\"NotRightTriangleBar\":\"\u29D0\u0338\",\"NotRightTriangle\":\"\u22EB\",\"NotRightTriangleEqual\":\"\u22ED\",\"NotSquareSubset\":\"\u228F\u0338\",\"NotSquareSubsetEqual\":\"\u22E2\",\"NotSquareSuperset\":\"\u2290\u0338\",\"NotSquareSupersetEqual\":\"\u22E3\",\"NotSubset\":\"\u2282\u20D2\",\"NotSubsetEqual\":\"\u2288\",\"NotSucceeds\":\"\u2281\",\"NotSucceedsEqual\":\"\u2AB0\u0338\",\"NotSucceedsSlantEqual\":\"\u22E1\",\"NotSucceedsTilde\":\"\u227F\u0338\",\"NotSuperset\":\"\u2283\u20D2\",\"NotSupersetEqual\":\"\u2289\",\"NotTilde\":\"\u2241\",\"NotTildeEqual\":\"\u2244\",\"NotTildeFullEqual\":\"\u2247\",\"NotTildeTilde\":\"\u2249\",\"NotVerticalBar\":\"\u2224\",\"nparallel\":\"\u2226\",\"npar\":\"\u2226\",\"nparsl\":\"\u2AFD\u20E5\",\"npart\":\"\u2202\u0338\",\"npolint\":\"\u2A14\",\"npr\":\"\u2280\",\"nprcue\":\"\u22E0\",\"nprec\":\"\u2280\",\"npreceq\":\"\u2AAF\u0338\",\"npre\":\"\u2AAF\u0338\",\"nrarrc\":\"\u2933\u0338\",\"nrarr\":\"\u219B\",\"nrArr\":\"\u21CF\",\"nrarrw\":\"\u219D\u0338\",\"nrightarrow\":\"\u219B\",\"nRightarrow\":\"\u21CF\",\"nrtri\":\"\u22EB\",\"nrtrie\":\"\u22ED\",\"nsc\":\"\u2281\",\"nsccue\":\"\u22E1\",\"nsce\":\"\u2AB0\u0338\",\"Nscr\":\"\uD835\uDCA9\",\"nscr\":\"\uD835\uDCC3\",\"nshortmid\":\"\u2224\",\"nshortparallel\":\"\u2226\",\"nsim\":\"\u2241\",\"nsime\":\"\u2244\",\"nsimeq\":\"\u2244\",\"nsmid\":\"\u2224\",\"nspar\":\"\u2226\",\"nsqsube\":\"\u22E2\",\"nsqsupe\":\"\u22E3\",\"nsub\":\"\u2284\",\"nsubE\":\"\u2AC5\u0338\",\"nsube\":\"\u2288\",\"nsubset\":\"\u2282\u20D2\",\"nsubseteq\":\"\u2288\",\"nsubseteqq\":\"\u2AC5\u0338\",\"nsucc\":\"\u2281\",\"nsucceq\":\"\u2AB0\u0338\",\"nsup\":\"\u2285\",\"nsupE\":\"\u2AC6\u0338\",\"nsupe\":\"\u2289\",\"nsupset\":\"\u2283\u20D2\",\"nsupseteq\":\"\u2289\",\"nsupseteqq\":\"\u2AC6\u0338\",\"ntgl\":\"\u2279\",\"Ntilde\":\"\u00D1\",\"ntilde\":\"\u00F1\",\"ntlg\":\"\u2278\",\"ntriangleleft\":\"\u22EA\",\"ntrianglelefteq\":\"\u22EC\",\"ntriangleright\":\"\u22EB\",\"ntrianglerighteq\":\"\u22ED\",\"Nu\":\"\u039D\",\"nu\":\"\u03BD\",\"num\":\"#\",\"numero\":\"\u2116\",\"numsp\":\"\u2007\",\"nvap\":\"\u224D\u20D2\",\"nvdash\":\"\u22AC\",\"nvDash\":\"\u22AD\",\"nVdash\":\"\u22AE\",\"nVDash\":\"\u22AF\",\"nvge\":\"\u2265\u20D2\",\"nvgt\":\">\u20D2\",\"nvHarr\":\"\u2904\",\"nvinfin\":\"\u29DE\",\"nvlArr\":\"\u2902\",\"nvle\":\"\u2264\u20D2\",\"nvlt\":\"<\u20D2\",\"nvltrie\":\"\u22B4\u20D2\",\"nvrArr\":\"\u2903\",\"nvrtrie\":\"\u22B5\u20D2\",\"nvsim\":\"\u223C\u20D2\",\"nwarhk\":\"\u2923\",\"nwarr\":\"\u2196\",\"nwArr\":\"\u21D6\",\"nwarrow\":\"\u2196\",\"nwnear\":\"\u2927\",\"Oacute\":\"\u00D3\",\"oacute\":\"\u00F3\",\"oast\":\"\u229B\",\"Ocirc\":\"\u00D4\",\"ocirc\":\"\u00F4\",\"ocir\":\"\u229A\",\"Ocy\":\"\u041E\",\"ocy\":\"\u043E\",\"odash\":\"\u229D\",\"Odblac\":\"\u0150\",\"odblac\":\"\u0151\",\"odiv\":\"\u2A38\",\"odot\":\"\u2299\",\"odsold\":\"\u29BC\",\"OElig\":\"\u0152\",\"oelig\":\"\u0153\",\"ofcir\":\"\u29BF\",\"Ofr\":\"\uD835\uDD12\",\"ofr\":\"\uD835\uDD2C\",\"ogon\":\"\u02DB\",\"Ograve\":\"\u00D2\",\"ograve\":\"\u00F2\",\"ogt\":\"\u29C1\",\"ohbar\":\"\u29B5\",\"ohm\":\"\u03A9\",\"oint\":\"\u222E\",\"olarr\":\"\u21BA\",\"olcir\":\"\u29BE\",\"olcross\":\"\u29BB\",\"oline\":\"\u203E\",\"olt\":\"\u29C0\",\"Omacr\":\"\u014C\",\"omacr\":\"\u014D\",\"Omega\":\"\u03A9\",\"omega\":\"\u03C9\",\"Omicron\":\"\u039F\",\"omicron\":\"\u03BF\",\"omid\":\"\u29B6\",\"ominus\":\"\u2296\",\"Oopf\":\"\uD835\uDD46\",\"oopf\":\"\uD835\uDD60\",\"opar\":\"\u29B7\",\"OpenCurlyDoubleQuote\":\"\u201C\",\"OpenCurlyQuote\":\"\u2018\",\"operp\":\"\u29B9\",\"oplus\":\"\u2295\",\"orarr\":\"\u21BB\",\"Or\":\"\u2A54\",\"or\":\"\u2228\",\"ord\":\"\u2A5D\",\"order\":\"\u2134\",\"orderof\":\"\u2134\",\"ordf\":\"\u00AA\",\"ordm\":\"\u00BA\",\"origof\":\"\u22B6\",\"oror\":\"\u2A56\",\"orslope\":\"\u2A57\",\"orv\":\"\u2A5B\",\"oS\":\"\u24C8\",\"Oscr\":\"\uD835\uDCAA\",\"oscr\":\"\u2134\",\"Oslash\":\"\u00D8\",\"oslash\":\"\u00F8\",\"osol\":\"\u2298\",\"Otilde\":\"\u00D5\",\"otilde\":\"\u00F5\",\"otimesas\":\"\u2A36\",\"Otimes\":\"\u2A37\",\"otimes\":\"\u2297\",\"Ouml\":\"\u00D6\",\"ouml\":\"\u00F6\",\"ovbar\":\"\u233D\",\"OverBar\":\"\u203E\",\"OverBrace\":\"\u23DE\",\"OverBracket\":\"\u23B4\",\"OverParenthesis\":\"\u23DC\",\"para\":\"\u00B6\",\"parallel\":\"\u2225\",\"par\":\"\u2225\",\"parsim\":\"\u2AF3\",\"parsl\":\"\u2AFD\",\"part\":\"\u2202\",\"PartialD\":\"\u2202\",\"Pcy\":\"\u041F\",\"pcy\":\"\u043F\",\"percnt\":\"%\",\"period\":\".\",\"permil\":\"\u2030\",\"perp\":\"\u22A5\",\"pertenk\":\"\u2031\",\"Pfr\":\"\uD835\uDD13\",\"pfr\":\"\uD835\uDD2D\",\"Phi\":\"\u03A6\",\"phi\":\"\u03C6\",\"phiv\":\"\u03D5\",\"phmmat\":\"\u2133\",\"phone\":\"\u260E\",\"Pi\":\"\u03A0\",\"pi\":\"\u03C0\",\"pitchfork\":\"\u22D4\",\"piv\":\"\u03D6\",\"planck\":\"\u210F\",\"planckh\":\"\u210E\",\"plankv\":\"\u210F\",\"plusacir\":\"\u2A23\",\"plusb\":\"\u229E\",\"pluscir\":\"\u2A22\",\"plus\":\"+\",\"plusdo\":\"\u2214\",\"plusdu\":\"\u2A25\",\"pluse\":\"\u2A72\",\"PlusMinus\":\"\u00B1\",\"plusmn\":\"\u00B1\",\"plussim\":\"\u2A26\",\"plustwo\":\"\u2A27\",\"pm\":\"\u00B1\",\"Poincareplane\":\"\u210C\",\"pointint\":\"\u2A15\",\"popf\":\"\uD835\uDD61\",\"Popf\":\"\u2119\",\"pound\":\"\u00A3\",\"prap\":\"\u2AB7\",\"Pr\":\"\u2ABB\",\"pr\":\"\u227A\",\"prcue\":\"\u227C\",\"precapprox\":\"\u2AB7\",\"prec\":\"\u227A\",\"preccurlyeq\":\"\u227C\",\"Precedes\":\"\u227A\",\"PrecedesEqual\":\"\u2AAF\",\"PrecedesSlantEqual\":\"\u227C\",\"PrecedesTilde\":\"\u227E\",\"preceq\":\"\u2AAF\",\"precnapprox\":\"\u2AB9\",\"precneqq\":\"\u2AB5\",\"precnsim\":\"\u22E8\",\"pre\":\"\u2AAF\",\"prE\":\"\u2AB3\",\"precsim\":\"\u227E\",\"prime\":\"\u2032\",\"Prime\":\"\u2033\",\"primes\":\"\u2119\",\"prnap\":\"\u2AB9\",\"prnE\":\"\u2AB5\",\"prnsim\":\"\u22E8\",\"prod\":\"\u220F\",\"Product\":\"\u220F\",\"profalar\":\"\u232E\",\"profline\":\"\u2312\",\"profsurf\":\"\u2313\",\"prop\":\"\u221D\",\"Proportional\":\"\u221D\",\"Proportion\":\"\u2237\",\"propto\":\"\u221D\",\"prsim\":\"\u227E\",\"prurel\":\"\u22B0\",\"Pscr\":\"\uD835\uDCAB\",\"pscr\":\"\uD835\uDCC5\",\"Psi\":\"\u03A8\",\"psi\":\"\u03C8\",\"puncsp\":\"\u2008\",\"Qfr\":\"\uD835\uDD14\",\"qfr\":\"\uD835\uDD2E\",\"qint\":\"\u2A0C\",\"qopf\":\"\uD835\uDD62\",\"Qopf\":\"\u211A\",\"qprime\":\"\u2057\",\"Qscr\":\"\uD835\uDCAC\",\"qscr\":\"\uD835\uDCC6\",\"quaternions\":\"\u210D\",\"quatint\":\"\u2A16\",\"quest\":\"?\",\"questeq\":\"\u225F\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"rAarr\":\"\u21DB\",\"race\":\"\u223D\u0331\",\"Racute\":\"\u0154\",\"racute\":\"\u0155\",\"radic\":\"\u221A\",\"raemptyv\":\"\u29B3\",\"rang\":\"\u27E9\",\"Rang\":\"\u27EB\",\"rangd\":\"\u2992\",\"range\":\"\u29A5\",\"rangle\":\"\u27E9\",\"raquo\":\"\u00BB\",\"rarrap\":\"\u2975\",\"rarrb\":\"\u21E5\",\"rarrbfs\":\"\u2920\",\"rarrc\":\"\u2933\",\"rarr\":\"\u2192\",\"Rarr\":\"\u21A0\",\"rArr\":\"\u21D2\",\"rarrfs\":\"\u291E\",\"rarrhk\":\"\u21AA\",\"rarrlp\":\"\u21AC\",\"rarrpl\":\"\u2945\",\"rarrsim\":\"\u2974\",\"Rarrtl\":\"\u2916\",\"rarrtl\":\"\u21A3\",\"rarrw\":\"\u219D\",\"ratail\":\"\u291A\",\"rAtail\":\"\u291C\",\"ratio\":\"\u2236\",\"rationals\":\"\u211A\",\"rbarr\":\"\u290D\",\"rBarr\":\"\u290F\",\"RBarr\":\"\u2910\",\"rbbrk\":\"\u2773\",\"rbrace\":\"}\",\"rbrack\":\"]\",\"rbrke\":\"\u298C\",\"rbrksld\":\"\u298E\",\"rbrkslu\":\"\u2990\",\"Rcaron\":\"\u0158\",\"rcaron\":\"\u0159\",\"Rcedil\":\"\u0156\",\"rcedil\":\"\u0157\",\"rceil\":\"\u2309\",\"rcub\":\"}\",\"Rcy\":\"\u0420\",\"rcy\":\"\u0440\",\"rdca\":\"\u2937\",\"rdldhar\":\"\u2969\",\"rdquo\":\"\u201D\",\"rdquor\":\"\u201D\",\"rdsh\":\"\u21B3\",\"real\":\"\u211C\",\"realine\":\"\u211B\",\"realpart\":\"\u211C\",\"reals\":\"\u211D\",\"Re\":\"\u211C\",\"rect\":\"\u25AD\",\"reg\":\"\u00AE\",\"REG\":\"\u00AE\",\"ReverseElement\":\"\u220B\",\"ReverseEquilibrium\":\"\u21CB\",\"ReverseUpEquilibrium\":\"\u296F\",\"rfisht\":\"\u297D\",\"rfloor\":\"\u230B\",\"rfr\":\"\uD835\uDD2F\",\"Rfr\":\"\u211C\",\"rHar\":\"\u2964\",\"rhard\":\"\u21C1\",\"rharu\":\"\u21C0\",\"rharul\":\"\u296C\",\"Rho\":\"\u03A1\",\"rho\":\"\u03C1\",\"rhov\":\"\u03F1\",\"RightAngleBracket\":\"\u27E9\",\"RightArrowBar\":\"\u21E5\",\"rightarrow\":\"\u2192\",\"RightArrow\":\"\u2192\",\"Rightarrow\":\"\u21D2\",\"RightArrowLeftArrow\":\"\u21C4\",\"rightarrowtail\":\"\u21A3\",\"RightCeiling\":\"\u2309\",\"RightDoubleBracket\":\"\u27E7\",\"RightDownTeeVector\":\"\u295D\",\"RightDownVectorBar\":\"\u2955\",\"RightDownVector\":\"\u21C2\",\"RightFloor\":\"\u230B\",\"rightharpoondown\":\"\u21C1\",\"rightharpoonup\":\"\u21C0\",\"rightleftarrows\":\"\u21C4\",\"rightleftharpoons\":\"\u21CC\",\"rightrightarrows\":\"\u21C9\",\"rightsquigarrow\":\"\u219D\",\"RightTeeArrow\":\"\u21A6\",\"RightTee\":\"\u22A2\",\"RightTeeVector\":\"\u295B\",\"rightthreetimes\":\"\u22CC\",\"RightTriangleBar\":\"\u29D0\",\"RightTriangle\":\"\u22B3\",\"RightTriangleEqual\":\"\u22B5\",\"RightUpDownVector\":\"\u294F\",\"RightUpTeeVector\":\"\u295C\",\"RightUpVectorBar\":\"\u2954\",\"RightUpVector\":\"\u21BE\",\"RightVectorBar\":\"\u2953\",\"RightVector\":\"\u21C0\",\"ring\":\"\u02DA\",\"risingdotseq\":\"\u2253\",\"rlarr\":\"\u21C4\",\"rlhar\":\"\u21CC\",\"rlm\":\"\u200F\",\"rmoustache\":\"\u23B1\",\"rmoust\":\"\u23B1\",\"rnmid\":\"\u2AEE\",\"roang\":\"\u27ED\",\"roarr\":\"\u21FE\",\"robrk\":\"\u27E7\",\"ropar\":\"\u2986\",\"ropf\":\"\uD835\uDD63\",\"Ropf\":\"\u211D\",\"roplus\":\"\u2A2E\",\"rotimes\":\"\u2A35\",\"RoundImplies\":\"\u2970\",\"rpar\":\")\",\"rpargt\":\"\u2994\",\"rppolint\":\"\u2A12\",\"rrarr\":\"\u21C9\",\"Rrightarrow\":\"\u21DB\",\"rsaquo\":\"\u203A\",\"rscr\":\"\uD835\uDCC7\",\"Rscr\":\"\u211B\",\"rsh\":\"\u21B1\",\"Rsh\":\"\u21B1\",\"rsqb\":\"]\",\"rsquo\":\"\u2019\",\"rsquor\":\"\u2019\",\"rthree\":\"\u22CC\",\"rtimes\":\"\u22CA\",\"rtri\":\"\u25B9\",\"rtrie\":\"\u22B5\",\"rtrif\":\"\u25B8\",\"rtriltri\":\"\u29CE\",\"RuleDelayed\":\"\u29F4\",\"ruluhar\":\"\u2968\",\"rx\":\"\u211E\",\"Sacute\":\"\u015A\",\"sacute\":\"\u015B\",\"sbquo\":\"\u201A\",\"scap\":\"\u2AB8\",\"Scaron\":\"\u0160\",\"scaron\":\"\u0161\",\"Sc\":\"\u2ABC\",\"sc\":\"\u227B\",\"sccue\":\"\u227D\",\"sce\":\"\u2AB0\",\"scE\":\"\u2AB4\",\"Scedil\":\"\u015E\",\"scedil\":\"\u015F\",\"Scirc\":\"\u015C\",\"scirc\":\"\u015D\",\"scnap\":\"\u2ABA\",\"scnE\":\"\u2AB6\",\"scnsim\":\"\u22E9\",\"scpolint\":\"\u2A13\",\"scsim\":\"\u227F\",\"Scy\":\"\u0421\",\"scy\":\"\u0441\",\"sdotb\":\"\u22A1\",\"sdot\":\"\u22C5\",\"sdote\":\"\u2A66\",\"searhk\":\"\u2925\",\"searr\":\"\u2198\",\"seArr\":\"\u21D8\",\"searrow\":\"\u2198\",\"sect\":\"\u00A7\",\"semi\":\";\",\"seswar\":\"\u2929\",\"setminus\":\"\u2216\",\"setmn\":\"\u2216\",\"sext\":\"\u2736\",\"Sfr\":\"\uD835\uDD16\",\"sfr\":\"\uD835\uDD30\",\"sfrown\":\"\u2322\",\"sharp\":\"\u266F\",\"SHCHcy\":\"\u0429\",\"shchcy\":\"\u0449\",\"SHcy\":\"\u0428\",\"shcy\":\"\u0448\",\"ShortDownArrow\":\"\u2193\",\"ShortLeftArrow\":\"\u2190\",\"shortmid\":\"\u2223\",\"shortparallel\":\"\u2225\",\"ShortRightArrow\":\"\u2192\",\"ShortUpArrow\":\"\u2191\",\"shy\":\"\u00AD\",\"Sigma\":\"\u03A3\",\"sigma\":\"\u03C3\",\"sigmaf\":\"\u03C2\",\"sigmav\":\"\u03C2\",\"sim\":\"\u223C\",\"simdot\":\"\u2A6A\",\"sime\":\"\u2243\",\"simeq\":\"\u2243\",\"simg\":\"\u2A9E\",\"simgE\":\"\u2AA0\",\"siml\":\"\u2A9D\",\"simlE\":\"\u2A9F\",\"simne\":\"\u2246\",\"simplus\":\"\u2A24\",\"simrarr\":\"\u2972\",\"slarr\":\"\u2190\",\"SmallCircle\":\"\u2218\",\"smallsetminus\":\"\u2216\",\"smashp\":\"\u2A33\",\"smeparsl\":\"\u29E4\",\"smid\":\"\u2223\",\"smile\":\"\u2323\",\"smt\":\"\u2AAA\",\"smte\":\"\u2AAC\",\"smtes\":\"\u2AAC\uFE00\",\"SOFTcy\":\"\u042C\",\"softcy\":\"\u044C\",\"solbar\":\"\u233F\",\"solb\":\"\u29C4\",\"sol\":\"/\",\"Sopf\":\"\uD835\uDD4A\",\"sopf\":\"\uD835\uDD64\",\"spades\":\"\u2660\",\"spadesuit\":\"\u2660\",\"spar\":\"\u2225\",\"sqcap\":\"\u2293\",\"sqcaps\":\"\u2293\uFE00\",\"sqcup\":\"\u2294\",\"sqcups\":\"\u2294\uFE00\",\"Sqrt\":\"\u221A\",\"sqsub\":\"\u228F\",\"sqsube\":\"\u2291\",\"sqsubset\":\"\u228F\",\"sqsubseteq\":\"\u2291\",\"sqsup\":\"\u2290\",\"sqsupe\":\"\u2292\",\"sqsupset\":\"\u2290\",\"sqsupseteq\":\"\u2292\",\"square\":\"\u25A1\",\"Square\":\"\u25A1\",\"SquareIntersection\":\"\u2293\",\"SquareSubset\":\"\u228F\",\"SquareSubsetEqual\":\"\u2291\",\"SquareSuperset\":\"\u2290\",\"SquareSupersetEqual\":\"\u2292\",\"SquareUnion\":\"\u2294\",\"squarf\":\"\u25AA\",\"squ\":\"\u25A1\",\"squf\":\"\u25AA\",\"srarr\":\"\u2192\",\"Sscr\":\"\uD835\uDCAE\",\"sscr\":\"\uD835\uDCC8\",\"ssetmn\":\"\u2216\",\"ssmile\":\"\u2323\",\"sstarf\":\"\u22C6\",\"Star\":\"\u22C6\",\"star\":\"\u2606\",\"starf\":\"\u2605\",\"straightepsilon\":\"\u03F5\",\"straightphi\":\"\u03D5\",\"strns\":\"\u00AF\",\"sub\":\"\u2282\",\"Sub\":\"\u22D0\",\"subdot\":\"\u2ABD\",\"subE\":\"\u2AC5\",\"sube\":\"\u2286\",\"subedot\":\"\u2AC3\",\"submult\":\"\u2AC1\",\"subnE\":\"\u2ACB\",\"subne\":\"\u228A\",\"subplus\":\"\u2ABF\",\"subrarr\":\"\u2979\",\"subset\":\"\u2282\",\"Subset\":\"\u22D0\",\"subseteq\":\"\u2286\",\"subseteqq\":\"\u2AC5\",\"SubsetEqual\":\"\u2286\",\"subsetneq\":\"\u228A\",\"subsetneqq\":\"\u2ACB\",\"subsim\":\"\u2AC7\",\"subsub\":\"\u2AD5\",\"subsup\":\"\u2AD3\",\"succapprox\":\"\u2AB8\",\"succ\":\"\u227B\",\"succcurlyeq\":\"\u227D\",\"Succeeds\":\"\u227B\",\"SucceedsEqual\":\"\u2AB0\",\"SucceedsSlantEqual\":\"\u227D\",\"SucceedsTilde\":\"\u227F\",\"succeq\":\"\u2AB0\",\"succnapprox\":\"\u2ABA\",\"succneqq\":\"\u2AB6\",\"succnsim\":\"\u22E9\",\"succsim\":\"\u227F\",\"SuchThat\":\"\u220B\",\"sum\":\"\u2211\",\"Sum\":\"\u2211\",\"sung\":\"\u266A\",\"sup1\":\"\u00B9\",\"sup2\":\"\u00B2\",\"sup3\":\"\u00B3\",\"sup\":\"\u2283\",\"Sup\":\"\u22D1\",\"supdot\":\"\u2ABE\",\"supdsub\":\"\u2AD8\",\"supE\":\"\u2AC6\",\"supe\":\"\u2287\",\"supedot\":\"\u2AC4\",\"Superset\":\"\u2283\",\"SupersetEqual\":\"\u2287\",\"suphsol\":\"\u27C9\",\"suphsub\":\"\u2AD7\",\"suplarr\":\"\u297B\",\"supmult\":\"\u2AC2\",\"supnE\":\"\u2ACC\",\"supne\":\"\u228B\",\"supplus\":\"\u2AC0\",\"supset\":\"\u2283\",\"Supset\":\"\u22D1\",\"supseteq\":\"\u2287\",\"supseteqq\":\"\u2AC6\",\"supsetneq\":\"\u228B\",\"supsetneqq\":\"\u2ACC\",\"supsim\":\"\u2AC8\",\"supsub\":\"\u2AD4\",\"supsup\":\"\u2AD6\",\"swarhk\":\"\u2926\",\"swarr\":\"\u2199\",\"swArr\":\"\u21D9\",\"swarrow\":\"\u2199\",\"swnwar\":\"\u292A\",\"szlig\":\"\u00DF\",\"Tab\":\"\\t\",\"target\":\"\u2316\",\"Tau\":\"\u03A4\",\"tau\":\"\u03C4\",\"tbrk\":\"\u23B4\",\"Tcaron\":\"\u0164\",\"tcaron\":\"\u0165\",\"Tcedil\":\"\u0162\",\"tcedil\":\"\u0163\",\"Tcy\":\"\u0422\",\"tcy\":\"\u0442\",\"tdot\":\"\u20DB\",\"telrec\":\"\u2315\",\"Tfr\":\"\uD835\uDD17\",\"tfr\":\"\uD835\uDD31\",\"there4\":\"\u2234\",\"therefore\":\"\u2234\",\"Therefore\":\"\u2234\",\"Theta\":\"\u0398\",\"theta\":\"\u03B8\",\"thetasym\":\"\u03D1\",\"thetav\":\"\u03D1\",\"thickapprox\":\"\u2248\",\"thicksim\":\"\u223C\",\"ThickSpace\":\"\u205F\u200A\",\"ThinSpace\":\"\u2009\",\"thinsp\":\"\u2009\",\"thkap\":\"\u2248\",\"thksim\":\"\u223C\",\"THORN\":\"\u00DE\",\"thorn\":\"\u00FE\",\"tilde\":\"\u02DC\",\"Tilde\":\"\u223C\",\"TildeEqual\":\"\u2243\",\"TildeFullEqual\":\"\u2245\",\"TildeTilde\":\"\u2248\",\"timesbar\":\"\u2A31\",\"timesb\":\"\u22A0\",\"times\":\"\u00D7\",\"timesd\":\"\u2A30\",\"tint\":\"\u222D\",\"toea\":\"\u2928\",\"topbot\":\"\u2336\",\"topcir\":\"\u2AF1\",\"top\":\"\u22A4\",\"Topf\":\"\uD835\uDD4B\",\"topf\":\"\uD835\uDD65\",\"topfork\":\"\u2ADA\",\"tosa\":\"\u2929\",\"tprime\":\"\u2034\",\"trade\":\"\u2122\",\"TRADE\":\"\u2122\",\"triangle\":\"\u25B5\",\"triangledown\":\"\u25BF\",\"triangleleft\":\"\u25C3\",\"trianglelefteq\":\"\u22B4\",\"triangleq\":\"\u225C\",\"triangleright\":\"\u25B9\",\"trianglerighteq\":\"\u22B5\",\"tridot\":\"\u25EC\",\"trie\":\"\u225C\",\"triminus\":\"\u2A3A\",\"TripleDot\":\"\u20DB\",\"triplus\":\"\u2A39\",\"trisb\":\"\u29CD\",\"tritime\":\"\u2A3B\",\"trpezium\":\"\u23E2\",\"Tscr\":\"\uD835\uDCAF\",\"tscr\":\"\uD835\uDCC9\",\"TScy\":\"\u0426\",\"tscy\":\"\u0446\",\"TSHcy\":\"\u040B\",\"tshcy\":\"\u045B\",\"Tstrok\":\"\u0166\",\"tstrok\":\"\u0167\",\"twixt\":\"\u226C\",\"twoheadleftarrow\":\"\u219E\",\"twoheadrightarrow\":\"\u21A0\",\"Uacute\":\"\u00DA\",\"uacute\":\"\u00FA\",\"uarr\":\"\u2191\",\"Uarr\":\"\u219F\",\"uArr\":\"\u21D1\",\"Uarrocir\":\"\u2949\",\"Ubrcy\":\"\u040E\",\"ubrcy\":\"\u045E\",\"Ubreve\":\"\u016C\",\"ubreve\":\"\u016D\",\"Ucirc\":\"\u00DB\",\"ucirc\":\"\u00FB\",\"Ucy\":\"\u0423\",\"ucy\":\"\u0443\",\"udarr\":\"\u21C5\",\"Udblac\":\"\u0170\",\"udblac\":\"\u0171\",\"udhar\":\"\u296E\",\"ufisht\":\"\u297E\",\"Ufr\":\"\uD835\uDD18\",\"ufr\":\"\uD835\uDD32\",\"Ugrave\":\"\u00D9\",\"ugrave\":\"\u00F9\",\"uHar\":\"\u2963\",\"uharl\":\"\u21BF\",\"uharr\":\"\u21BE\",\"uhblk\":\"\u2580\",\"ulcorn\":\"\u231C\",\"ulcorner\":\"\u231C\",\"ulcrop\":\"\u230F\",\"ultri\":\"\u25F8\",\"Umacr\":\"\u016A\",\"umacr\":\"\u016B\",\"uml\":\"\u00A8\",\"UnderBar\":\"_\",\"UnderBrace\":\"\u23DF\",\"UnderBracket\":\"\u23B5\",\"UnderParenthesis\":\"\u23DD\",\"Union\":\"\u22C3\",\"UnionPlus\":\"\u228E\",\"Uogon\":\"\u0172\",\"uogon\":\"\u0173\",\"Uopf\":\"\uD835\uDD4C\",\"uopf\":\"\uD835\uDD66\",\"UpArrowBar\":\"\u2912\",\"uparrow\":\"\u2191\",\"UpArrow\":\"\u2191\",\"Uparrow\":\"\u21D1\",\"UpArrowDownArrow\":\"\u21C5\",\"updownarrow\":\"\u2195\",\"UpDownArrow\":\"\u2195\",\"Updownarrow\":\"\u21D5\",\"UpEquilibrium\":\"\u296E\",\"upharpoonleft\":\"\u21BF\",\"upharpoonright\":\"\u21BE\",\"uplus\":\"\u228E\",\"UpperLeftArrow\":\"\u2196\",\"UpperRightArrow\":\"\u2197\",\"upsi\":\"\u03C5\",\"Upsi\":\"\u03D2\",\"upsih\":\"\u03D2\",\"Upsilon\":\"\u03A5\",\"upsilon\":\"\u03C5\",\"UpTeeArrow\":\"\u21A5\",\"UpTee\":\"\u22A5\",\"upuparrows\":\"\u21C8\",\"urcorn\":\"\u231D\",\"urcorner\":\"\u231D\",\"urcrop\":\"\u230E\",\"Uring\":\"\u016E\",\"uring\":\"\u016F\",\"urtri\":\"\u25F9\",\"Uscr\":\"\uD835\uDCB0\",\"uscr\":\"\uD835\uDCCA\",\"utdot\":\"\u22F0\",\"Utilde\":\"\u0168\",\"utilde\":\"\u0169\",\"utri\":\"\u25B5\",\"utrif\":\"\u25B4\",\"uuarr\":\"\u21C8\",\"Uuml\":\"\u00DC\",\"uuml\":\"\u00FC\",\"uwangle\":\"\u29A7\",\"vangrt\":\"\u299C\",\"varepsilon\":\"\u03F5\",\"varkappa\":\"\u03F0\",\"varnothing\":\"\u2205\",\"varphi\":\"\u03D5\",\"varpi\":\"\u03D6\",\"varpropto\":\"\u221D\",\"varr\":\"\u2195\",\"vArr\":\"\u21D5\",\"varrho\":\"\u03F1\",\"varsigma\":\"\u03C2\",\"varsubsetneq\":\"\u228A\uFE00\",\"varsubsetneqq\":\"\u2ACB\uFE00\",\"varsupsetneq\":\"\u228B\uFE00\",\"varsupsetneqq\":\"\u2ACC\uFE00\",\"vartheta\":\"\u03D1\",\"vartriangleleft\":\"\u22B2\",\"vartriangleright\":\"\u22B3\",\"vBar\":\"\u2AE8\",\"Vbar\":\"\u2AEB\",\"vBarv\":\"\u2AE9\",\"Vcy\":\"\u0412\",\"vcy\":\"\u0432\",\"vdash\":\"\u22A2\",\"vDash\":\"\u22A8\",\"Vdash\":\"\u22A9\",\"VDash\":\"\u22AB\",\"Vdashl\":\"\u2AE6\",\"veebar\":\"\u22BB\",\"vee\":\"\u2228\",\"Vee\":\"\u22C1\",\"veeeq\":\"\u225A\",\"vellip\":\"\u22EE\",\"verbar\":\"|\",\"Verbar\":\"\u2016\",\"vert\":\"|\",\"Vert\":\"\u2016\",\"VerticalBar\":\"\u2223\",\"VerticalLine\":\"|\",\"VerticalSeparator\":\"\u2758\",\"VerticalTilde\":\"\u2240\",\"VeryThinSpace\":\"\u200A\",\"Vfr\":\"\uD835\uDD19\",\"vfr\":\"\uD835\uDD33\",\"vltri\":\"\u22B2\",\"vnsub\":\"\u2282\u20D2\",\"vnsup\":\"\u2283\u20D2\",\"Vopf\":\"\uD835\uDD4D\",\"vopf\":\"\uD835\uDD67\",\"vprop\":\"\u221D\",\"vrtri\":\"\u22B3\",\"Vscr\":\"\uD835\uDCB1\",\"vscr\":\"\uD835\uDCCB\",\"vsubnE\":\"\u2ACB\uFE00\",\"vsubne\":\"\u228A\uFE00\",\"vsupnE\":\"\u2ACC\uFE00\",\"vsupne\":\"\u228B\uFE00\",\"Vvdash\":\"\u22AA\",\"vzigzag\":\"\u299A\",\"Wcirc\":\"\u0174\",\"wcirc\":\"\u0175\",\"wedbar\":\"\u2A5F\",\"wedge\":\"\u2227\",\"Wedge\":\"\u22C0\",\"wedgeq\":\"\u2259\",\"weierp\":\"\u2118\",\"Wfr\":\"\uD835\uDD1A\",\"wfr\":\"\uD835\uDD34\",\"Wopf\":\"\uD835\uDD4E\",\"wopf\":\"\uD835\uDD68\",\"wp\":\"\u2118\",\"wr\":\"\u2240\",\"wreath\":\"\u2240\",\"Wscr\":\"\uD835\uDCB2\",\"wscr\":\"\uD835\uDCCC\",\"xcap\":\"\u22C2\",\"xcirc\":\"\u25EF\",\"xcup\":\"\u22C3\",\"xdtri\":\"\u25BD\",\"Xfr\":\"\uD835\uDD1B\",\"xfr\":\"\uD835\uDD35\",\"xharr\":\"\u27F7\",\"xhArr\":\"\u27FA\",\"Xi\":\"\u039E\",\"xi\":\"\u03BE\",\"xlarr\":\"\u27F5\",\"xlArr\":\"\u27F8\",\"xmap\":\"\u27FC\",\"xnis\":\"\u22FB\",\"xodot\":\"\u2A00\",\"Xopf\":\"\uD835\uDD4F\",\"xopf\":\"\uD835\uDD69\",\"xoplus\":\"\u2A01\",\"xotime\":\"\u2A02\",\"xrarr\":\"\u27F6\",\"xrArr\":\"\u27F9\",\"Xscr\":\"\uD835\uDCB3\",\"xscr\":\"\uD835\uDCCD\",\"xsqcup\":\"\u2A06\",\"xuplus\":\"\u2A04\",\"xutri\":\"\u25B3\",\"xvee\":\"\u22C1\",\"xwedge\":\"\u22C0\",\"Yacute\":\"\u00DD\",\"yacute\":\"\u00FD\",\"YAcy\":\"\u042F\",\"yacy\":\"\u044F\",\"Ycirc\":\"\u0176\",\"ycirc\":\"\u0177\",\"Ycy\":\"\u042B\",\"ycy\":\"\u044B\",\"yen\":\"\u00A5\",\"Yfr\":\"\uD835\uDD1C\",\"yfr\":\"\uD835\uDD36\",\"YIcy\":\"\u0407\",\"yicy\":\"\u0457\",\"Yopf\":\"\uD835\uDD50\",\"yopf\":\"\uD835\uDD6A\",\"Yscr\":\"\uD835\uDCB4\",\"yscr\":\"\uD835\uDCCE\",\"YUcy\":\"\u042E\",\"yucy\":\"\u044E\",\"yuml\":\"\u00FF\",\"Yuml\":\"\u0178\",\"Zacute\":\"\u0179\",\"zacute\":\"\u017A\",\"Zcaron\":\"\u017D\",\"zcaron\":\"\u017E\",\"Zcy\":\"\u0417\",\"zcy\":\"\u0437\",\"Zdot\":\"\u017B\",\"zdot\":\"\u017C\",\"zeetrf\":\"\u2128\",\"ZeroWidthSpace\":\"\u200B\",\"Zeta\":\"\u0396\",\"zeta\":\"\u03B6\",\"zfr\":\"\uD835\uDD37\",\"Zfr\":\"\u2128\",\"ZHcy\":\"\u0416\",\"zhcy\":\"\u0436\",\"zigrarr\":\"\u21DD\",\"zopf\":\"\uD835\uDD6B\",\"Zopf\":\"\u2124\",\"Zscr\":\"\uD835\uDCB5\",\"zscr\":\"\uD835\uDCCF\",\"zwj\":\"\u200D\",\"zwnj\":\"\u200C\"}\n", "{\"Aacute\":\"\u00C1\",\"aacute\":\"\u00E1\",\"Acirc\":\"\u00C2\",\"acirc\":\"\u00E2\",\"acute\":\"\u00B4\",\"AElig\":\"\u00C6\",\"aelig\":\"\u00E6\",\"Agrave\":\"\u00C0\",\"agrave\":\"\u00E0\",\"amp\":\"&\",\"AMP\":\"&\",\"Aring\":\"\u00C5\",\"aring\":\"\u00E5\",\"Atilde\":\"\u00C3\",\"atilde\":\"\u00E3\",\"Auml\":\"\u00C4\",\"auml\":\"\u00E4\",\"brvbar\":\"\u00A6\",\"Ccedil\":\"\u00C7\",\"ccedil\":\"\u00E7\",\"cedil\":\"\u00B8\",\"cent\":\"\u00A2\",\"copy\":\"\u00A9\",\"COPY\":\"\u00A9\",\"curren\":\"\u00A4\",\"deg\":\"\u00B0\",\"divide\":\"\u00F7\",\"Eacute\":\"\u00C9\",\"eacute\":\"\u00E9\",\"Ecirc\":\"\u00CA\",\"ecirc\":\"\u00EA\",\"Egrave\":\"\u00C8\",\"egrave\":\"\u00E8\",\"ETH\":\"\u00D0\",\"eth\":\"\u00F0\",\"Euml\":\"\u00CB\",\"euml\":\"\u00EB\",\"frac12\":\"\u00BD\",\"frac14\":\"\u00BC\",\"frac34\":\"\u00BE\",\"gt\":\">\",\"GT\":\">\",\"Iacute\":\"\u00CD\",\"iacute\":\"\u00ED\",\"Icirc\":\"\u00CE\",\"icirc\":\"\u00EE\",\"iexcl\":\"\u00A1\",\"Igrave\":\"\u00CC\",\"igrave\":\"\u00EC\",\"iquest\":\"\u00BF\",\"Iuml\":\"\u00CF\",\"iuml\":\"\u00EF\",\"laquo\":\"\u00AB\",\"lt\":\"<\",\"LT\":\"<\",\"macr\":\"\u00AF\",\"micro\":\"\u00B5\",\"middot\":\"\u00B7\",\"nbsp\":\"\u00A0\",\"not\":\"\u00AC\",\"Ntilde\":\"\u00D1\",\"ntilde\":\"\u00F1\",\"Oacute\":\"\u00D3\",\"oacute\":\"\u00F3\",\"Ocirc\":\"\u00D4\",\"ocirc\":\"\u00F4\",\"Ograve\":\"\u00D2\",\"ograve\":\"\u00F2\",\"ordf\":\"\u00AA\",\"ordm\":\"\u00BA\",\"Oslash\":\"\u00D8\",\"oslash\":\"\u00F8\",\"Otilde\":\"\u00D5\",\"otilde\":\"\u00F5\",\"Ouml\":\"\u00D6\",\"ouml\":\"\u00F6\",\"para\":\"\u00B6\",\"plusmn\":\"\u00B1\",\"pound\":\"\u00A3\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"raquo\":\"\u00BB\",\"reg\":\"\u00AE\",\"REG\":\"\u00AE\",\"sect\":\"\u00A7\",\"shy\":\"\u00AD\",\"sup1\":\"\u00B9\",\"sup2\":\"\u00B2\",\"sup3\":\"\u00B3\",\"szlig\":\"\u00DF\",\"THORN\":\"\u00DE\",\"thorn\":\"\u00FE\",\"times\":\"\u00D7\",\"Uacute\":\"\u00DA\",\"uacute\":\"\u00FA\",\"Ucirc\":\"\u00DB\",\"ucirc\":\"\u00FB\",\"Ugrave\":\"\u00D9\",\"ugrave\":\"\u00F9\",\"uml\":\"\u00A8\",\"Uuml\":\"\u00DC\",\"uuml\":\"\u00FC\",\"Yacute\":\"\u00DD\",\"yacute\":\"\u00FD\",\"yen\":\"\u00A5\",\"yuml\":\"\u00FF\"}\n", "{\"amp\":\"&\",\"apos\":\"'\",\"gt\":\">\",\"lt\":\"<\",\"quot\":\"\\\"\"}\n", "{\"0\":65533,\"128\":8364,\"130\":8218,\"131\":402,\"132\":8222,\"133\":8230,\"134\":8224,\"135\":8225,\"136\":710,\"137\":8240,\"138\":352,\"139\":8249,\"140\":338,\"142\":381,\"145\":8216,\"146\":8217,\"147\":8220,\"148\":8221,\"149\":8226,\"150\":8211,\"151\":8212,\"152\":732,\"153\":8482,\"154\":353,\"155\":8250,\"156\":339,\"158\":382,\"159\":376}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attributeNames = exports.elementNames = void 0;\nexports.elementNames = new Map([\n    [\"altglyph\", \"altGlyph\"],\n    [\"altglyphdef\", \"altGlyphDef\"],\n    [\"altglyphitem\", \"altGlyphItem\"],\n    [\"animatecolor\", \"animateColor\"],\n    [\"animatemotion\", \"animateMotion\"],\n    [\"animatetransform\", \"animateTransform\"],\n    [\"clippath\", \"clipPath\"],\n    [\"feblend\", \"feBlend\"],\n    [\"fecolormatrix\", \"feColorMatrix\"],\n    [\"fecomponenttransfer\", \"feComponentTransfer\"],\n    [\"fecomposite\", \"feComposite\"],\n    [\"feconvolvematrix\", \"feConvolveMatrix\"],\n    [\"fediffuselighting\", \"feDiffuseLighting\"],\n    [\"fedisplacementmap\", \"feDisplacementMap\"],\n    [\"fedistantlight\", \"feDistantLight\"],\n    [\"fedropshadow\", \"feDropShadow\"],\n    [\"feflood\", \"feFlood\"],\n    [\"fefunca\", \"feFuncA\"],\n    [\"fefuncb\", \"feFuncB\"],\n    [\"fefuncg\", \"feFuncG\"],\n    [\"fefuncr\", \"feFuncR\"],\n    [\"fegaussianblur\", \"feGaussianBlur\"],\n    [\"feimage\", \"feImage\"],\n    [\"femerge\", \"feMerge\"],\n    [\"femergenode\", \"feMergeNode\"],\n    [\"femorphology\", \"feMorphology\"],\n    [\"feoffset\", \"feOffset\"],\n    [\"fepointlight\", \"fePointLight\"],\n    [\"fespecularlighting\", \"feSpecularLighting\"],\n    [\"fespotlight\", \"feSpotLight\"],\n    [\"fetile\", \"feTile\"],\n    [\"feturbulence\", \"feTurbulence\"],\n    [\"foreignobject\", \"foreignObject\"],\n    [\"glyphref\", \"glyphRef\"],\n    [\"lineargradient\", \"linearGradient\"],\n    [\"radialgradient\", \"radialGradient\"],\n    [\"textpath\", \"textPath\"],\n]);\nexports.attributeNames = new Map([\n    [\"definitionurl\", \"definitionURL\"],\n    [\"attributename\", \"attributeName\"],\n    [\"attributetype\", \"attributeType\"],\n    [\"basefrequency\", \"baseFrequency\"],\n    [\"baseprofile\", \"baseProfile\"],\n    [\"calcmode\", \"calcMode\"],\n    [\"clippathunits\", \"clipPathUnits\"],\n    [\"diffuseconstant\", \"diffuseConstant\"],\n    [\"edgemode\", \"edgeMode\"],\n    [\"filterunits\", \"filterUnits\"],\n    [\"glyphref\", \"glyphRef\"],\n    [\"gradienttransform\", \"gradientTransform\"],\n    [\"gradientunits\", \"gradientUnits\"],\n    [\"kernelmatrix\", \"kernelMatrix\"],\n    [\"kernelunitlength\", \"kernelUnitLength\"],\n    [\"keypoints\", \"keyPoints\"],\n    [\"keysplines\", \"keySplines\"],\n    [\"keytimes\", \"keyTimes\"],\n    [\"lengthadjust\", \"lengthAdjust\"],\n    [\"limitingconeangle\", \"limitingConeAngle\"],\n    [\"markerheight\", \"markerHeight\"],\n    [\"markerunits\", \"markerUnits\"],\n    [\"markerwidth\", \"markerWidth\"],\n    [\"maskcontentunits\", \"maskContentUnits\"],\n    [\"maskunits\", \"maskUnits\"],\n    [\"numoctaves\", \"numOctaves\"],\n    [\"pathlength\", \"pathLength\"],\n    [\"patterncontentunits\", \"patternContentUnits\"],\n    [\"patterntransform\", \"patternTransform\"],\n    [\"patternunits\", \"patternUnits\"],\n    [\"pointsatx\", \"pointsAtX\"],\n    [\"pointsaty\", \"pointsAtY\"],\n    [\"pointsatz\", \"pointsAtZ\"],\n    [\"preservealpha\", \"preserveAlpha\"],\n    [\"preserveaspectratio\", \"preserveAspectRatio\"],\n    [\"primitiveunits\", \"primitiveUnits\"],\n    [\"refx\", \"refX\"],\n    [\"refy\", \"refY\"],\n    [\"repeatcount\", \"repeatCount\"],\n    [\"repeatdur\", \"repeatDur\"],\n    [\"requiredextensions\", \"requiredExtensions\"],\n    [\"requiredfeatures\", \"requiredFeatures\"],\n    [\"specularconstant\", \"specularConstant\"],\n    [\"specularexponent\", \"specularExponent\"],\n    [\"spreadmethod\", \"spreadMethod\"],\n    [\"startoffset\", \"startOffset\"],\n    [\"stddeviation\", \"stdDeviation\"],\n    [\"stitchtiles\", \"stitchTiles\"],\n    [\"surfacescale\", \"surfaceScale\"],\n    [\"systemlanguage\", \"systemLanguage\"],\n    [\"tablevalues\", \"tableValues\"],\n    [\"targetx\", \"targetX\"],\n    [\"targety\", \"targetY\"],\n    [\"textlength\", \"textLength\"],\n    [\"viewbox\", \"viewBox\"],\n    [\"viewtarget\", \"viewTarget\"],\n    [\"xchannelselector\", \"xChannelSelector\"],\n    [\"ychannelselector\", \"yChannelSelector\"],\n    [\"zoomandpan\", \"zoomAndPan\"],\n]);\n", "\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Module dependencies\n */\nvar ElementType = __importStar(require(\"domelementtype\"));\nvar entities_1 = require(\"entities\");\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nvar foreignNames_1 = require(\"./foreignNames\");\nvar unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    if (!attributes)\n        return;\n    return Object.keys(attributes)\n        .map(function (key) {\n        var _a, _b;\n        var value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = foreignNames_1.attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return key + \"=\\\"\" + (opts.decodeEntities !== false\n            ? entities_1.encodeXML(value)\n            : value.replace(/\"/g, \"&quot;\")) + \"\\\"\";\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nvar singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nfunction render(node, options) {\n    if (options === void 0) { options = {}; }\n    var nodes = \"length\" in node ? node : [node];\n    var output = \"\";\n    for (var i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexports.default = render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        case ElementType.Directive:\n        case ElementType.Doctype:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nvar foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nvar foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = foreignNames_1.elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = __assign(__assign({}, opts), { xmlMode: false });\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = __assign(__assign({}, opts), { xmlMode: \"foreign\" });\n    }\n    var tag = \"<\" + elem.name;\n    var attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += \" \" + attribs;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += \"</\" + elem.name + \">\";\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return \"<\" + elem.data + \">\";\n}\nfunction renderText(elem, opts) {\n    var data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (opts.decodeEntities !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data = entities_1.encodeXML(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return \"<![CDATA[\" + elem.children[0].data + \"]]>\";\n}\nfunction renderComment(elem) {\n    return \"<!--\" + elem.data + \"-->\";\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n    return (0, dom_serializer_1.default)(node, options);\n}\nexports.getOuterHTML = getOuterHTML;\n/**\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n    return (0, domhandler_1.hasChildren)(node)\n        ? node.children.map(function (node) { return getOuterHTML(node, options); }).join(\"\")\n        : \"\";\n}\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if ((0, domhandler_1.isTag)(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if ((0, domhandler_1.isCDATA)(node))\n        return getText(node.children);\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n        return textContent(node.children);\n    }\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n        return innerText(node.children);\n    }\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.innerText = innerText;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar emptyArray = [];\n/**\n * Get a node's children.\n *\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n    var _a;\n    return (_a = elem.children) !== null && _a !== void 0 ? _a : emptyArray;\n}\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node.\n */\nfunction getParent(elem) {\n    return elem.parent || null;\n}\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first.\n * If we don't have a parent (the element is a root node),\n * we walk the element's `prev` & `next` to get all remaining nodes.\n *\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings.\n */\nfunction getSiblings(elem) {\n    var _a, _b;\n    var parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    var siblings = [elem];\n    var prev = elem.prev, next = elem.next;\n    while (prev != null) {\n        siblings.unshift(prev);\n        (_a = prev, prev = _a.prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        (_b = next, next = _b.next);\n    }\n    return siblings;\n}\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n    return elem.name;\n}\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag.\n */\nfunction nextElementSibling(elem) {\n    var _a;\n    var next = elem.next;\n    while (next !== null && !(0, domhandler_1.isTag)(next))\n        (_a = next, next = _a.next);\n    return next;\n}\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag.\n */\nfunction prevElementSibling(elem) {\n    var _a;\n    var prev = elem.prev;\n    while (prev !== null && !(0, domhandler_1.isTag)(prev))\n        (_a = prev, prev = _a.prev);\n    return prev;\n}\nexports.prevElementSibling = prevElementSibling;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepend = exports.prependChild = exports.append = exports.appendChild = exports.replaceElement = exports.removeElement = void 0;\n/**\n * Remove an element from the dom\n *\n * @param elem The element to be removed\n */\nfunction removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        var childs = elem.parent.children;\n        childs.splice(childs.lastIndexOf(elem), 1);\n    }\n}\nexports.removeElement = removeElement;\n/**\n * Replace an element in the dom\n *\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nfunction replaceElement(elem, replacement) {\n    var prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    var next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    var parent = (replacement.parent = elem.parent);\n    if (parent) {\n        var childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n    }\n}\nexports.replaceElement = replaceElement;\n/**\n * Append a child to an element.\n *\n * @param elem The element to append to.\n * @param child The element to be added as a child.\n */\nfunction appendChild(elem, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = elem;\n    if (elem.children.push(child) > 1) {\n        var sibling = elem.children[elem.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\nexports.appendChild = appendChild;\n/**\n * Append an element after another.\n *\n * @param elem The element to append after.\n * @param next The element be added.\n */\nfunction append(elem, next) {\n    removeElement(next);\n    var parent = elem.parent;\n    var currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            var childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\nexports.append = append;\n/**\n * Prepend a child to an element.\n *\n * @param elem The element to prepend before.\n * @param child The element to be added as a child.\n */\nfunction prependChild(elem, child) {\n    removeElement(child);\n    child.parent = elem;\n    child.prev = null;\n    if (elem.children.unshift(child) !== 1) {\n        var sibling = elem.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\nexports.prependChild = prependChild;\n/**\n * Prepend an element before another.\n *\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nfunction prepend(elem, prev) {\n    removeElement(prev);\n    var parent = elem.parent;\n    if (parent) {\n        var childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\nexports.prepend = prepend;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findAll = exports.existsOne = exports.findOne = exports.findOneChild = exports.find = exports.filter = void 0;\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Search a node and its children for nodes passing a test function.\n *\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction filter(test, node, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    if (!Array.isArray(node))\n        node = [node];\n    return find(test, node, recurse, limit);\n}\nexports.filter = filter;\n/**\n * Search an array of node and its children for nodes passing a test function.\n *\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction find(test, nodes, recurse, limit) {\n    var result = [];\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n        var elem = nodes_1[_i];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                break;\n        }\n        if (recurse && (0, domhandler_1.hasChildren)(elem) && elem.children.length > 0) {\n            var children = find(test, elem.children, recurse, limit);\n            result.push.apply(result, children);\n            limit -= children.length;\n            if (limit <= 0)\n                break;\n        }\n    }\n    return result;\n}\nexports.find = find;\n/**\n * Finds the first element inside of an array that matches a test function.\n *\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n */\nfunction findOneChild(test, nodes) {\n    return nodes.find(test);\n}\nexports.findOneChild = findOneChild;\n/**\n * Finds one element in a tree that passes a test.\n *\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first child node that passes `test`.\n */\nfunction findOne(test, nodes, recurse) {\n    if (recurse === void 0) { recurse = true; }\n    var elem = null;\n    for (var i = 0; i < nodes.length && !elem; i++) {\n        var checked = nodes[i];\n        if (!(0, domhandler_1.isTag)(checked)) {\n            continue;\n        }\n        else if (test(checked)) {\n            elem = checked;\n        }\n        else if (recurse && checked.children.length > 0) {\n            elem = findOne(test, checked.children);\n        }\n    }\n    return elem;\n}\nexports.findOne = findOne;\n/**\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing a test.\n */\nfunction existsOne(test, nodes) {\n    return nodes.some(function (checked) {\n        return (0, domhandler_1.isTag)(checked) &&\n            (test(checked) ||\n                (checked.children.length > 0 &&\n                    existsOne(test, checked.children)));\n    });\n}\nexports.existsOne = existsOne;\n/**\n * Search and array of nodes and its children for nodes passing a test function.\n *\n * Same as `find`, only with less options, leading to reduced complexity.\n *\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nfunction findAll(test, nodes) {\n    var _a;\n    var result = [];\n    var stack = nodes.filter(domhandler_1.isTag);\n    var elem;\n    while ((elem = stack.shift())) {\n        var children = (_a = elem.children) === null || _a === void 0 ? void 0 : _a.filter(domhandler_1.isTag);\n        if (children && children.length > 0) {\n            stack.unshift.apply(stack, children);\n        }\n        if (test(elem))\n            result.push(elem);\n    }\n    return result;\n}\nexports.findAll = findAll;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElementsByTagType = exports.getElementsByTagName = exports.getElementById = exports.getElements = exports.testElement = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar querying_1 = require(\"./querying\");\nvar Checks = {\n    tag_name: function (name) {\n        if (typeof name === \"function\") {\n            return function (elem) { return (0, domhandler_1.isTag)(elem) && name(elem.name); };\n        }\n        else if (name === \"*\") {\n            return domhandler_1.isTag;\n        }\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.name === name; };\n    },\n    tag_type: function (type) {\n        if (typeof type === \"function\") {\n            return function (elem) { return type(elem.type); };\n        }\n        return function (elem) { return elem.type === type; };\n    },\n    tag_contains: function (data) {\n        if (typeof data === \"function\") {\n            return function (elem) { return (0, domhandler_1.isText)(elem) && data(elem.data); };\n        }\n        return function (elem) { return (0, domhandler_1.isText)(elem) && elem.data === data; };\n    },\n};\n/**\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && value(elem.attribs[attrib]); };\n    }\n    return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.attribs[attrib] === value; };\n}\n/**\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either\n * of the input functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return function (elem) { return a(elem) || b(elem); };\n}\n/**\n * @param options An object describing nodes to look for.\n * @returns A function executing all checks in `options` and returning `true`\n * if any of them match a node.\n */\nfunction compileTest(options) {\n    var funcs = Object.keys(options).map(function (key) {\n        var value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n    var test = compileTest(options);\n    return test ? test(node) : true;\n}\nexports.testElement = testElement;\n/**\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit) {\n    if (limit === void 0) { limit = Infinity; }\n    var test = compileTest(options);\n    return test ? (0, querying_1.filter)(test, nodes, recurse, limit) : [];\n}\nexports.getElements = getElements;\n/**\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse) {\n    if (recurse === void 0) { recurse = true; }\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return (0, querying_1.findOne)(getAttribCheck(\"id\", id), nodes, recurse);\n}\nexports.getElementById = getElementById;\n/**\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_1.filter)(Checks.tag_name(tagName), nodes, recurse, limit);\n}\nexports.getElementsByTagName = getElementsByTagName;\n/**\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_1.filter)(Checks.tag_type(type), nodes, recurse, limit);\n}\nexports.getElementsByTagType = getElementsByTagType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uniqueSort = exports.compareDocumentPosition = exports.removeSubsets = void 0;\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Given an array of nodes, remove any member that is contained by another.\n *\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't subtrees of each other.\n */\nfunction removeSubsets(nodes) {\n    var idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        var node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (var ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\nexports.removeSubsets = removeSubsets;\n/**\n * Compare the position of one node against another node in any other document.\n * The return value is a bitmask with the following values:\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent./\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nfunction compareDocumentPosition(nodeA, nodeB) {\n    var aParents = [];\n    var bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    var current = (0, domhandler_1.hasChildren)(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = (0, domhandler_1.hasChildren)(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    var maxIdx = Math.min(aParents.length, bParents.length);\n    var idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return 1 /* DISCONNECTED */;\n    }\n    var sharedParent = aParents[idx - 1];\n    var siblings = sharedParent.children;\n    var aSibling = aParents[idx];\n    var bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return 4 /* FOLLOWING */ | 16 /* CONTAINED_BY */;\n        }\n        return 4 /* FOLLOWING */;\n    }\n    if (sharedParent === nodeA) {\n        return 2 /* PRECEDING */ | 8 /* CONTAINS */;\n    }\n    return 2 /* PRECEDING */;\n}\nexports.compareDocumentPosition = compareDocumentPosition;\n/**\n * Sort an array of nodes based on their relative position in the document and\n * remove any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nfunction uniqueSort(nodes) {\n    nodes = nodes.filter(function (node, i, arr) { return !arr.includes(node, i + 1); });\n    nodes.sort(function (a, b) {\n        var relative = compareDocumentPosition(a, b);\n        if (relative & 2 /* PRECEDING */) {\n            return -1;\n        }\n        else if (relative & 4 /* FOLLOWING */) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\nexports.uniqueSort = uniqueSort;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeed = void 0;\nvar stringify_1 = require(\"./stringify\");\nvar legacy_1 = require(\"./legacy\");\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nfunction getFeed(doc) {\n    var feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\nexports.getFeed = getFeed;\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    var childs = feedRoot.children;\n    var feed = {\n        type: \"atom\",\n        items: (0, legacy_1.getElementsByTagName)(\"entry\", childs).map(function (item) {\n            var _a;\n            var children = item.children;\n            var entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            var href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs.href;\n            if (href) {\n                entry.link = href;\n            }\n            var description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            var pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    var href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs.href;\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    var updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    var childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    var feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: (0, legacy_1.getElementsByTagName)(\"item\", feedRoot.children).map(function (item) {\n            var children = item.children;\n            var entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            var pubDate = fetch(\"pubDate\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    var updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nvar MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nvar MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return (0, legacy_1.getElementsByTagName)(\"media:content\", where).map(function (elem) {\n        var attribs = elem.attribs;\n        var media = {\n            medium: attribs.medium,\n            isDefault: !!attribs.isDefault,\n        };\n        for (var _i = 0, MEDIA_KEYS_STRING_1 = MEDIA_KEYS_STRING; _i < MEDIA_KEYS_STRING_1.length; _i++) {\n            var attrib = MEDIA_KEYS_STRING_1[_i];\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (var _a = 0, MEDIA_KEYS_INT_1 = MEDIA_KEYS_INT; _a < MEDIA_KEYS_INT_1.length; _a++) {\n            var attrib = MEDIA_KEYS_INT_1[_a];\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs.expression) {\n            media.expression =\n                attribs.expression;\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return (0, legacy_1.getElementsByTagName)(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where  Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse) {\n    if (recurse === void 0) { recurse = false; }\n    return (0, stringify_1.textContent)((0, legacy_1.getElementsByTagName)(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse) {\n    if (recurse === void 0) { recurse = false; }\n    var val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasChildren = exports.isDocument = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = void 0;\n__exportStar(require(\"./stringify\"), exports);\n__exportStar(require(\"./traversal\"), exports);\n__exportStar(require(\"./manipulation\"), exports);\n__exportStar(require(\"./querying\"), exports);\n__exportStar(require(\"./legacy\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./feeds\"), exports);\n/** @deprecated Use these methods from `domhandler` directly. */\nvar domhandler_1 = require(\"domhandler\");\nObject.defineProperty(exports, \"isTag\", { enumerable: true, get: function () { return domhandler_1.isTag; } });\nObject.defineProperty(exports, \"isCDATA\", { enumerable: true, get: function () { return domhandler_1.isCDATA; } });\nObject.defineProperty(exports, \"isText\", { enumerable: true, get: function () { return domhandler_1.isText; } });\nObject.defineProperty(exports, \"isComment\", { enumerable: true, get: function () { return domhandler_1.isComment; } });\nObject.defineProperty(exports, \"isDocument\", { enumerable: true, get: function () { return domhandler_1.isDocument; } });\nObject.defineProperty(exports, \"hasChildren\", { enumerable: true, get: function () { return domhandler_1.hasChildren; } });\n", "module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AttributeAction = exports.IgnoreCaseMode = exports.SelectorType = void 0;\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexports.IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nvar AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction = exports.AttributeAction || (exports.AttributeAction = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.isTraversal = void 0;\nvar types_1 = require(\"./types\");\nvar reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nvar actionTypes = new Map([\n    [126 /* Tilde */, types_1.AttributeAction.Element],\n    [94 /* Circumflex */, types_1.AttributeAction.Start],\n    [36 /* Dollar */, types_1.AttributeAction.End],\n    [42 /* Asterisk */, types_1.AttributeAction.Any],\n    [33 /* ExclamationMark */, types_1.AttributeAction.Not],\n    [124 /* Pipe */, types_1.AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nvar unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nfunction isTraversal(selector) {\n    switch (selector.type) {\n        case types_1.SelectorType.Adjacent:\n        case types_1.SelectorType.Child:\n        case types_1.SelectorType.Descendant:\n        case types_1.SelectorType.Parent:\n        case types_1.SelectorType.Sibling:\n        case types_1.SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nexports.isTraversal = isTraversal;\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    var high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nfunction parse(selector) {\n    var subselects = [];\n    var endIndex = parseSelector(subselects, \"\".concat(selector), 0);\n    if (endIndex < selector.length) {\n        throw new Error(\"Unmatched selector: \".concat(selector.slice(endIndex)));\n    }\n    return subselects;\n}\nexports.parse = parse;\nfunction parseSelector(subselects, selector, selectorIndex) {\n    var tokens = [];\n    function getName(offset) {\n        var match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(\"Expected name, found \".concat(selector.slice(selectorIndex)));\n        }\n        var name = match[0];\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        var start = selectorIndex;\n        var counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        var slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type: type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: types_1.SelectorType.Attribute,\n            name: name,\n            action: action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        var firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== types_1.SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: types_1.SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(types_1.SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(types_1.SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(types_1.SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(types_1.SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", types_1.AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", types_1.AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                var name_1 = void 0;\n                var namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name_1 = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name_1 = getName(2);\n                }\n                else {\n                    name_1 = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name_1;\n                        name_1 = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                var action = types_1.AttributeAction.Exists;\n                var possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = types_1.AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                var value = \"\";\n                var ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        var quote = selector.charCodeAt(selectorIndex);\n                        var sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        var valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    var forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                var attributeSelector = {\n                    type: types_1.SelectorType.Attribute,\n                    name: name_1,\n                    action: action,\n                    value: value,\n                    namespace: namespace,\n                    ignoreCase: ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: types_1.SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                var name_2 = getName(1).toLowerCase();\n                var data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name_2)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(\"Pseudo-selector \".concat(name_2, \" cannot be quoted\"));\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(\"Missing closing parenthesis in :\".concat(name_2, \" (\").concat(selector, \")\"));\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name_2)) {\n                            var quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: types_1.SelectorType.Pseudo, name: name_2, data: data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    var endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                var namespace = null;\n                var name_3 = void 0;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name_3 = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name_3 = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(types_1.SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name_3 = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name_3;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name_3 = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name_3 = getName(1);\n                    }\n                }\n                tokens.push(name_3 === \"*\"\n                    ? { type: types_1.SelectorType.Universal, namespace: namespace }\n                    : { type: types_1.SelectorType.Tag, name: name_3, namespace: namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringify = void 0;\nvar types_1 = require(\"./types\");\nvar attribValChars = [\"\\\\\", '\"'];\nvar pseudoValChars = __spreadArray(__spreadArray([], attribValChars, true), [\"(\", \")\"], false);\nvar charsToEscapeInAttributeValue = new Set(attribValChars.map(function (c) { return c.charCodeAt(0); }));\nvar charsToEscapeInPseudoValue = new Set(pseudoValChars.map(function (c) { return c.charCodeAt(0); }));\nvar charsToEscapeInName = new Set(__spreadArray(__spreadArray([], pseudoValChars, true), [\n    \"~\",\n    \"^\",\n    \"$\",\n    \"*\",\n    \"+\",\n    \"!\",\n    \"|\",\n    \":\",\n    \"[\",\n    \"]\",\n    \" \",\n    \".\",\n], false).map(function (c) { return c.charCodeAt(0); }));\n/**\n * Turns `selector` back into a string.\n *\n * @param selector Selector to stringify.\n */\nfunction stringify(selector) {\n    return selector\n        .map(function (token) { return token.map(stringifyToken).join(\"\"); })\n        .join(\", \");\n}\nexports.stringify = stringify;\nfunction stringifyToken(token, index, arr) {\n    switch (token.type) {\n        // Simple types\n        case types_1.SelectorType.Child:\n            return index === 0 ? \"> \" : \" > \";\n        case types_1.SelectorType.Parent:\n            return index === 0 ? \"< \" : \" < \";\n        case types_1.SelectorType.Sibling:\n            return index === 0 ? \"~ \" : \" ~ \";\n        case types_1.SelectorType.Adjacent:\n            return index === 0 ? \"+ \" : \" + \";\n        case types_1.SelectorType.Descendant:\n            return \" \";\n        case types_1.SelectorType.ColumnCombinator:\n            return index === 0 ? \"|| \" : \" || \";\n        case types_1.SelectorType.Universal:\n            // Return an empty string if the selector isn't needed.\n            return token.namespace === \"*\" &&\n                index + 1 < arr.length &&\n                \"name\" in arr[index + 1]\n                ? \"\"\n                : \"\".concat(getNamespace(token.namespace), \"*\");\n        case types_1.SelectorType.Tag:\n            return getNamespacedName(token);\n        case types_1.SelectorType.PseudoElement:\n            return \"::\".concat(escapeName(token.name, charsToEscapeInName)).concat(token.data === null\n                ? \"\"\n                : \"(\".concat(escapeName(token.data, charsToEscapeInPseudoValue), \")\"));\n        case types_1.SelectorType.Pseudo:\n            return \":\".concat(escapeName(token.name, charsToEscapeInName)).concat(token.data === null\n                ? \"\"\n                : \"(\".concat(typeof token.data === \"string\"\n                    ? escapeName(token.data, charsToEscapeInPseudoValue)\n                    : stringify(token.data), \")\"));\n        case types_1.SelectorType.Attribute: {\n            if (token.name === \"id\" &&\n                token.action === types_1.AttributeAction.Equals &&\n                token.ignoreCase === \"quirks\" &&\n                !token.namespace) {\n                return \"#\".concat(escapeName(token.value, charsToEscapeInName));\n            }\n            if (token.name === \"class\" &&\n                token.action === types_1.AttributeAction.Element &&\n                token.ignoreCase === \"quirks\" &&\n                !token.namespace) {\n                return \".\".concat(escapeName(token.value, charsToEscapeInName));\n            }\n            var name_1 = getNamespacedName(token);\n            if (token.action === types_1.AttributeAction.Exists) {\n                return \"[\".concat(name_1, \"]\");\n            }\n            return \"[\".concat(name_1).concat(getActionValue(token.action), \"=\\\"\").concat(escapeName(token.value, charsToEscapeInAttributeValue), \"\\\"\").concat(token.ignoreCase === null ? \"\" : token.ignoreCase ? \" i\" : \" s\", \"]\");\n        }\n    }\n}\nfunction getActionValue(action) {\n    switch (action) {\n        case types_1.AttributeAction.Equals:\n            return \"\";\n        case types_1.AttributeAction.Element:\n            return \"~\";\n        case types_1.AttributeAction.Start:\n            return \"^\";\n        case types_1.AttributeAction.End:\n            return \"$\";\n        case types_1.AttributeAction.Any:\n            return \"*\";\n        case types_1.AttributeAction.Not:\n            return \"!\";\n        case types_1.AttributeAction.Hyphen:\n            return \"|\";\n        case types_1.AttributeAction.Exists:\n            throw new Error(\"Shouldn't be here\");\n    }\n}\nfunction getNamespacedName(token) {\n    return \"\".concat(getNamespace(token.namespace)).concat(escapeName(token.name, charsToEscapeInName));\n}\nfunction getNamespace(namespace) {\n    return namespace !== null\n        ? \"\".concat(namespace === \"*\"\n            ? \"*\"\n            : escapeName(namespace, charsToEscapeInName), \"|\")\n        : \"\";\n}\nfunction escapeName(str, charsToEscape) {\n    var lastIdx = 0;\n    var ret = \"\";\n    for (var i = 0; i < str.length; i++) {\n        if (charsToEscape.has(str.charCodeAt(i))) {\n            ret += \"\".concat(str.slice(lastIdx, i), \"\\\\\").concat(str.charAt(i));\n            lastIdx = i + 1;\n        }\n    }\n    return ret.length > 0 ? ret + str.slice(lastIdx) : str;\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringify = exports.parse = exports.isTraversal = void 0;\n__exportStar(require(\"./types\"), exports);\nvar parse_1 = require(\"./parse\");\nObject.defineProperty(exports, \"isTraversal\", { enumerable: true, get: function () { return parse_1.isTraversal; } });\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parse_1.parse; } });\nvar stringify_1 = require(\"./stringify\");\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return stringify_1.stringify; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTraversal = exports.procedure = void 0;\nexports.procedure = {\n    universal: 50,\n    tag: 30,\n    attribute: 1,\n    pseudo: 0,\n    \"pseudo-element\": 0,\n    \"column-combinator\": -1,\n    descendant: -1,\n    child: -1,\n    parent: -1,\n    sibling: -1,\n    adjacent: -1,\n    _flexibleDescendant: -1,\n};\nfunction isTraversal(t) {\n    return exports.procedure[t.type] < 0;\n}\nexports.isTraversal = isTraversal;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar css_what_1 = require(\"css-what\");\nvar procedure_1 = require(\"./procedure\");\nvar attributes = {\n    exists: 10,\n    equals: 8,\n    not: 7,\n    start: 6,\n    end: 6,\n    any: 5,\n    hyphen: 4,\n    element: 4,\n};\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nfunction sortByProcedure(arr) {\n    var procs = arr.map(getProcedure);\n    for (var i = 1; i < arr.length; i++) {\n        var procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            var token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nexports.default = sortByProcedure;\nfunction getProcedure(token) {\n    var proc = procedure_1.procedure[token.type];\n    if (token.type === css_what_1.SelectorType.Attribute) {\n        proc = attributes[token.action];\n        if (proc === attributes.equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === css_what_1.SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // \"matches\" and \"not\"\n            proc = 0;\n            for (var i = 0; i < token.data.length; i++) {\n                // TODO better handling of complex selectors\n                if (token.data[i].length !== 1)\n                    continue;\n                var cur = getProcedure(token.data[i][0]);\n                // Avoid executing :has or :contains\n                if (cur === 0) {\n                    proc = 0;\n                    break;\n                }\n                if (cur > proc)\n                    proc = cur;\n            }\n            if (token.data.length > 1 && proc > 0)\n                proc -= 1;\n        }\n        else {\n            proc = 1;\n        }\n    }\n    return proc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attributeRules = void 0;\nvar boolbase_1 = require(\"boolbase\");\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nvar reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nvar caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nexports.attributeRules = {\n    equals: function (next, data, options) {\n        var adapter = options.adapter;\n        var name = data.name;\n        var value = data.value;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function (elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function (elem) {\n            return adapter.getAttributeValue(elem, name) === value && next(elem);\n        };\n    },\n    hyphen: function (next, data, options) {\n        var adapter = options.adapter;\n        var name = data.name;\n        var value = data.value;\n        var len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            var attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element: function (next, data, options) {\n        var adapter = options.adapter;\n        var name = data.name, value = data.value;\n        if (/\\s/.test(value)) {\n            return boolbase_1.falseFunc;\n        }\n        var regex = new RegExp(\"(?:^|\\\\s)\".concat(escapeRegex(value), \"(?:$|\\\\s)\"), shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            var attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists: function (next, _a, _b) {\n        var name = _a.name;\n        var adapter = _b.adapter;\n        return function (elem) { return adapter.hasAttrib(elem, name) && next(elem); };\n    },\n    start: function (next, data, options) {\n        var adapter = options.adapter;\n        var name = data.name;\n        var value = data.value;\n        var len = value.length;\n        if (len === 0) {\n            return boolbase_1.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function (elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function (elem) {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) &&\n                next(elem);\n        };\n    },\n    end: function (next, data, options) {\n        var adapter = options.adapter;\n        var name = data.name;\n        var value = data.value;\n        var len = -value.length;\n        if (len === 0) {\n            return boolbase_1.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function (elem) {\n                var _a;\n                return ((_a = adapter\n                    .getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return function (elem) {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) &&\n                next(elem);\n        };\n    },\n    any: function (next, data, options) {\n        var adapter = options.adapter;\n        var name = data.name, value = data.value;\n        if (value === \"\") {\n            return boolbase_1.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            var regex_1 = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex_1.test(attr) &&\n                    next(elem));\n            };\n        }\n        return function (elem) {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) &&\n                next(elem);\n        };\n    },\n    not: function (next, data, options) {\n        var adapter = options.adapter;\n        var name = data.name;\n        var value = data.value;\n        if (value === \"\") {\n            return function (elem) {\n                return !!adapter.getAttributeValue(elem, name) && next(elem);\n            };\n        }\n        else if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function (elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return function (elem) {\n            return adapter.getAttributeValue(elem, name) !== value && next(elem);\n        };\n    },\n};\n", null, null, null, "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filters = void 0;\nvar nth_check_1 = __importDefault(require(\"nth-check\"));\nvar boolbase_1 = require(\"boolbase\");\nfunction getChildFunc(next, adapter) {\n    return function (elem) {\n        var parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nexports.filters = {\n    contains: function (next, text, _a) {\n        var adapter = _a.adapter;\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains: function (next, text, _a) {\n        var adapter = _a.adapter;\n        var itext = text.toLowerCase();\n        return function icontains(elem) {\n            return (next(elem) &&\n                adapter.getText(elem).toLowerCase().includes(itext));\n        };\n    },\n    // Location specific methods\n    \"nth-child\": function (next, rule, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var func = (0, nth_check_1.default)(rule);\n        if (func === boolbase_1.falseFunc)\n            return boolbase_1.falseFunc;\n        if (func === boolbase_1.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            var siblings = adapter.getSiblings(elem);\n            var pos = 0;\n            for (var i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\": function (next, rule, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var func = (0, nth_check_1.default)(rule);\n        if (func === boolbase_1.falseFunc)\n            return boolbase_1.falseFunc;\n        if (func === boolbase_1.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            var siblings = adapter.getSiblings(elem);\n            var pos = 0;\n            for (var i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\": function (next, rule, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var func = (0, nth_check_1.default)(rule);\n        if (func === boolbase_1.falseFunc)\n            return boolbase_1.falseFunc;\n        if (func === boolbase_1.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            var siblings = adapter.getSiblings(elem);\n            var pos = 0;\n            for (var i = 0; i < siblings.length; i++) {\n                var currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\": function (next, rule, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var func = (0, nth_check_1.default)(rule);\n        if (func === boolbase_1.falseFunc)\n            return boolbase_1.falseFunc;\n        if (func === boolbase_1.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            var siblings = adapter.getSiblings(elem);\n            var pos = 0;\n            for (var i = siblings.length - 1; i >= 0; i--) {\n                var currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root: function (next, _rule, _a) {\n        var adapter = _a.adapter;\n        return function (elem) {\n            var parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope: function (next, rule, options, context) {\n        var equals = options.equals;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return exports.filters.root(next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return function (elem) { return equals(context[0], elem) && next(elem); };\n        }\n        return function (elem) { return context.includes(elem) && next(elem); };\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, _a) {\n        var adapter = _a.adapter;\n        var func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbase_1.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyPseudoArgs = exports.pseudos = void 0;\n// While filters are precompiled, pseudos get called when they are needed\nexports.pseudos = {\n    empty: function (elem, _a) {\n        var adapter = _a.adapter;\n        return !adapter.getChildren(elem).some(function (elem) {\n            // FIXME: `getText` call is potentially expensive.\n            return adapter.isTag(elem) || adapter.getText(elem) !== \"\";\n        });\n    },\n    \"first-child\": function (elem, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var firstChild = adapter\n            .getSiblings(elem)\n            .find(function (elem) { return adapter.isTag(elem); });\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\": function (elem, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var siblings = adapter.getSiblings(elem);\n        for (var i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i]))\n                return true;\n            if (adapter.isTag(siblings[i]))\n                break;\n        }\n        return false;\n    },\n    \"first-of-type\": function (elem, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var siblings = adapter.getSiblings(elem);\n        var elemName = adapter.getName(elem);\n        for (var i = 0; i < siblings.length; i++) {\n            var currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\": function (elem, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var siblings = adapter.getSiblings(elem);\n        var elemName = adapter.getName(elem);\n        for (var i = siblings.length - 1; i >= 0; i--) {\n            var currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\": function (elem, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        var elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every(function (sibling) {\n            return equals(elem, sibling) ||\n                !adapter.isTag(sibling) ||\n                adapter.getName(sibling) !== elemName;\n        });\n    },\n    \"only-child\": function (elem, _a) {\n        var adapter = _a.adapter, equals = _a.equals;\n        return adapter\n            .getSiblings(elem)\n            .every(function (sibling) { return equals(elem, sibling) || !adapter.isTag(sibling); });\n    },\n};\nfunction verifyPseudoArgs(func, name, subselect) {\n    if (subselect === null) {\n        if (func.length > 2) {\n            throw new Error(\"pseudo-selector :\".concat(name, \" requires an argument\"));\n        }\n    }\n    else if (func.length === 2) {\n        throw new Error(\"pseudo-selector :\".concat(name, \" doesn't have any arguments\"));\n    }\n}\nexports.verifyPseudoArgs = verifyPseudoArgs;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aliases = void 0;\n/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexports.aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: \":is(\\n        :is(button, input, select, textarea, optgroup, option)[disabled],\\n        optgroup[disabled] > option,\\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\\n    )\",\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subselects = exports.getNextSiblings = exports.ensureIsTag = exports.PLACEHOLDER_ELEMENT = void 0;\nvar boolbase_1 = require(\"boolbase\");\nvar procedure_1 = require(\"../procedure\");\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nexports.PLACEHOLDER_ELEMENT = {};\nfunction ensureIsTag(next, adapter) {\n    if (next === boolbase_1.falseFunc)\n        return boolbase_1.falseFunc;\n    return function (elem) { return adapter.isTag(elem) && next(elem); };\n}\nexports.ensureIsTag = ensureIsTag;\nfunction getNextSiblings(elem, adapter) {\n    var siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1)\n        return [];\n    var elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1)\n        return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nexports.getNextSiblings = getNextSiblings;\nvar is = function (next, token, options, context, compileToken) {\n    var opts = {\n        xmlMode: !!options.xmlMode,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n    var func = compileToken(token, opts, context);\n    return function (elem) { return func(elem) && next(elem); };\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nexports.subselects = {\n    is: is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not: function (next, token, options, context, compileToken) {\n        var opts = {\n            xmlMode: !!options.xmlMode,\n            adapter: options.adapter,\n            equals: options.equals,\n        };\n        var func = compileToken(token, opts, context);\n        if (func === boolbase_1.falseFunc)\n            return next;\n        if (func === boolbase_1.trueFunc)\n            return boolbase_1.falseFunc;\n        return function not(elem) {\n            return !func(elem) && next(elem);\n        };\n    },\n    has: function (next, subselect, options, _context, compileToken) {\n        var adapter = options.adapter;\n        var opts = {\n            xmlMode: !!options.xmlMode,\n            adapter: adapter,\n            equals: options.equals,\n        };\n        // @ts-expect-error Uses an array as a pointer to the current element (side effects)\n        var context = subselect.some(function (s) {\n            return s.some(procedure_1.isTraversal);\n        })\n            ? [exports.PLACEHOLDER_ELEMENT]\n            : undefined;\n        var compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbase_1.falseFunc)\n            return boolbase_1.falseFunc;\n        if (compiled === boolbase_1.trueFunc) {\n            return function (elem) {\n                return adapter.getChildren(elem).some(adapter.isTag) && next(elem);\n            };\n        }\n        var hasElement = ensureIsTag(compiled, adapter);\n        var _a = compiled.shouldTestNextSiblings, shouldTestNextSiblings = _a === void 0 ? false : _a;\n        /*\n         * `shouldTestNextSiblings` will only be true if the query starts with\n         * a traversal (sibling or adjacent). That means we will always have a context.\n         */\n        if (context) {\n            return function (elem) {\n                context[0] = elem;\n                var childs = adapter.getChildren(elem);\n                var nextElements = shouldTestNextSiblings\n                    ? __spreadArray(__spreadArray([], childs, true), getNextSiblings(elem, adapter), true) : childs;\n                return (next(elem) && adapter.existsOne(hasElement, nextElements));\n            };\n        }\n        return function (elem) {\n            return next(elem) &&\n                adapter.existsOne(hasElement, adapter.getChildren(elem));\n        };\n    },\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compilePseudoSelector = exports.aliases = exports.pseudos = exports.filters = void 0;\n/*\n * Pseudo selectors\n *\n * Pseudo selectors are available in three forms:\n *\n * 1. Filters are called when the selector is compiled and return a function\n *  that has to return either false, or the results of `next()`.\n * 2. Pseudos are called on execution. They have to return a boolean.\n * 3. Subselects work like filters, but have an embedded selector that will be run separately.\n *\n * Filters are great if you want to do some pre-processing, or change the call order\n * of `next()` and your code.\n * Pseudos should be used to implement simple checks.\n */\nvar boolbase_1 = require(\"boolbase\");\nvar css_what_1 = require(\"css-what\");\nvar filters_1 = require(\"./filters\");\nObject.defineProperty(exports, \"filters\", { enumerable: true, get: function () { return filters_1.filters; } });\nvar pseudos_1 = require(\"./pseudos\");\nObject.defineProperty(exports, \"pseudos\", { enumerable: true, get: function () { return pseudos_1.pseudos; } });\nvar aliases_1 = require(\"./aliases\");\nObject.defineProperty(exports, \"aliases\", { enumerable: true, get: function () { return aliases_1.aliases; } });\nvar subselects_1 = require(\"./subselects\");\nfunction compilePseudoSelector(next, selector, options, context, compileToken) {\n    var name = selector.name, data = selector.data;\n    if (Array.isArray(data)) {\n        return subselects_1.subselects[name](next, data, options, context, compileToken);\n    }\n    if (name in aliases_1.aliases) {\n        if (data != null) {\n            throw new Error(\"Pseudo \".concat(name, \" doesn't have any arguments\"));\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        var alias = (0, css_what_1.parse)(aliases_1.aliases[name]);\n        return subselects_1.subselects.is(next, alias, options, context, compileToken);\n    }\n    if (name in filters_1.filters) {\n        return filters_1.filters[name](next, data, options, context);\n    }\n    if (name in pseudos_1.pseudos) {\n        var pseudo_1 = pseudos_1.pseudos[name];\n        (0, pseudos_1.verifyPseudoArgs)(pseudo_1, name, data);\n        return pseudo_1 === boolbase_1.falseFunc\n            ? boolbase_1.falseFunc\n            : next === boolbase_1.trueFunc\n                ? function (elem) { return pseudo_1(elem, options, data); }\n                : function (elem) { return pseudo_1(elem, options, data) && next(elem); };\n    }\n    throw new Error(\"unmatched pseudo-class :\".concat(name));\n}\nexports.compilePseudoSelector = compilePseudoSelector;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compileGeneralSelector = void 0;\nvar attributes_1 = require(\"./attributes\");\nvar pseudo_selectors_1 = require(\"./pseudo-selectors\");\nvar css_what_1 = require(\"css-what\");\n/*\n * All available rules\n */\nfunction compileGeneralSelector(next, selector, options, context, compileToken) {\n    var adapter = options.adapter, equals = options.equals;\n    switch (selector.type) {\n        case css_what_1.SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case css_what_1.SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case css_what_1.SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributes_1.attributeRules[selector.action](next, selector, options);\n        }\n        case css_what_1.SelectorType.Pseudo: {\n            return (0, pseudo_selectors_1.compilePseudoSelector)(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case css_what_1.SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            var name_1 = selector.name;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name_1 = name_1.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name_1 && next(elem);\n            };\n        }\n        // Traversal\n        case css_what_1.SelectorType.Descendant: {\n            if (options.cacheResults === false ||\n                typeof WeakSet === \"undefined\") {\n                return function descendant(elem) {\n                    var current = elem;\n                    while ((current = adapter.getParent(current))) {\n                        if (adapter.isTag(current) && next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            // @ts-expect-error `ElementNode` is not extending object\n            var isFalseCache_1 = new WeakSet();\n            return function cachedDescendant(elem) {\n                var current = elem;\n                while ((current = adapter.getParent(current))) {\n                    if (!isFalseCache_1.has(current)) {\n                        if (adapter.isTag(current) && next(current)) {\n                            return true;\n                        }\n                        isFalseCache_1.add(current);\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                var current = elem;\n                do {\n                    if (adapter.isTag(current) && next(current))\n                        return true;\n                } while ((current = adapter.getParent(current)));\n                return false;\n            };\n        }\n        case css_what_1.SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some(function (elem) { return adapter.isTag(elem) && next(elem); });\n            };\n        }\n        case css_what_1.SelectorType.Child: {\n            return function child(elem) {\n                var parent = adapter.getParent(elem);\n                return parent != null && adapter.isTag(parent) && next(parent);\n            };\n        }\n        case css_what_1.SelectorType.Sibling: {\n            return function sibling(elem) {\n                var siblings = adapter.getSiblings(elem);\n                for (var i = 0; i < siblings.length; i++) {\n                    var currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case css_what_1.SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    var previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                var siblings = adapter.getSiblings(elem);\n                var lastElement;\n                for (var i = 0; i < siblings.length; i++) {\n                    var currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case css_what_1.SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\nexports.compileGeneralSelector = compileGeneralSelector;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compileToken = exports.compileUnsafe = exports.compile = void 0;\nvar css_what_1 = require(\"css-what\");\nvar boolbase_1 = require(\"boolbase\");\nvar sort_1 = __importDefault(require(\"./sort\"));\nvar procedure_1 = require(\"./procedure\");\nvar general_1 = require(\"./general\");\nvar subselects_1 = require(\"./pseudo-selectors/subselects\");\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */\nfunction compile(selector, options, context) {\n    var next = compileUnsafe(selector, options, context);\n    return (0, subselects_1.ensureIsTag)(next, options.adapter);\n}\nexports.compile = compile;\nfunction compileUnsafe(selector, options, context) {\n    var token = typeof selector === \"string\" ? (0, css_what_1.parse)(selector) : selector;\n    return compileToken(token, options, context);\n}\nexports.compileUnsafe = compileUnsafe;\nfunction includesScopePseudo(t) {\n    return (t.type === \"pseudo\" &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some(function (data) { return data.some(includesScopePseudo); }))));\n}\nvar DESCENDANT_TOKEN = { type: css_what_1.SelectorType.Descendant };\nvar FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nvar SCOPE_TOKEN = {\n    type: css_what_1.SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.3.1. Absolutizing a Scope-relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, _a, context) {\n    var adapter = _a.adapter;\n    // TODO Use better check if the context is a document\n    var hasContext = !!(context === null || context === void 0 ? void 0 : context.every(function (e) {\n        var parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === subselects_1.PLACEHOLDER_ELEMENT || (parent && adapter.isTag(parent));\n    }));\n    for (var _i = 0, token_1 = token; _i < token_1.length; _i++) {\n        var t = token_1[_i];\n        if (t.length > 0 && (0, procedure_1.isTraversal)(t[0]) && t[0].type !== \"descendant\") {\n            // Don't continue in else branch\n        }\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nfunction compileToken(token, options, context) {\n    var _a;\n    token = token.filter(function (t) { return t.length > 0; });\n    token.forEach(sort_1.default);\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    var isArrayContext = Array.isArray(context);\n    var finalContext = context && (Array.isArray(context) ? context : [context]);\n    absolutize(token, options, finalContext);\n    var shouldTestNextSiblings = false;\n    var query = token\n        .map(function (rules) {\n        if (rules.length >= 2) {\n            var first = rules[0], second = rules[1];\n            if (first.type !== \"pseudo\" || first.name !== \"scope\") {\n                // Ignore\n            }\n            else if (isArrayContext && second.type === \"descendant\") {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === \"adjacent\" ||\n                second.type === \"sibling\") {\n                shouldTestNextSiblings = true;\n            }\n        }\n        return compileRules(rules, options, finalContext);\n    })\n        .reduce(reduceRules, boolbase_1.falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nexports.compileToken = compileToken;\nfunction compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce(function (previous, rule) {\n        return previous === boolbase_1.falseFunc\n            ? boolbase_1.falseFunc\n            : (0, general_1.compileGeneralSelector)(previous, rule, options, context, compileToken);\n    }, (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase_1.trueFunc);\n}\nfunction reduceRules(a, b) {\n    if (b === boolbase_1.falseFunc || a === boolbase_1.trueFunc) {\n        return a;\n    }\n    if (a === boolbase_1.falseFunc || b === boolbase_1.trueFunc) {\n        return b;\n    }\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aliases = exports.pseudos = exports.filters = exports.is = exports.selectOne = exports.selectAll = exports.prepareContext = exports._compileToken = exports._compileUnsafe = exports.compile = void 0;\nvar DomUtils = __importStar(require(\"domutils\"));\nvar boolbase_1 = require(\"boolbase\");\nvar compile_1 = require(\"./compile\");\nvar subselects_1 = require(\"./pseudo-selectors/subselects\");\nvar defaultEquals = function (a, b) { return a === b; };\nvar defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    var opts = options !== null && options !== void 0 ? options : defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : (opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals);\n    return opts;\n}\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        var opts = convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\n/**\n * Compiles the query, returns a function.\n */\nexports.compile = wrapCompile(compile_1.compile);\nexports._compileUnsafe = wrapCompile(compile_1.compileUnsafe);\nexports._compileToken = wrapCompile(compile_1.compileToken);\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        var opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = (0, compile_1.compileUnsafe)(query, opts, elements);\n        }\n        var filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nfunction prepareContext(elems, adapter, shouldTestNextSiblings) {\n    if (shouldTestNextSiblings === void 0) { shouldTestNextSiblings = false; }\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nexports.prepareContext = prepareContext;\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    var elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    var elemsLength = elems.length;\n    for (var i = 0; i < elemsLength; i++) {\n        var nextSiblings = (0, subselects_1.getNextSiblings)(elems[i], adapter);\n        elems.push.apply(elems, nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nexports.selectAll = getSelectorFunc(function (query, elems, options) {\n    return query === boolbase_1.falseFunc || !elems || elems.length === 0\n        ? []\n        : options.adapter.findAll(query, elems);\n});\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nexports.selectOne = getSelectorFunc(function (query, elems, options) {\n    return query === boolbase_1.falseFunc || !elems || elems.length === 0\n        ? null\n        : options.adapter.findOne(query, elems);\n});\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\nfunction is(elem, query, options) {\n    var opts = convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : (0, compile_1.compile)(query, opts))(elem);\n}\nexports.is = is;\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\nexports.default = exports.selectAll;\n// Export filters, pseudos and aliases to allow users to supply their own.\nvar pseudo_selectors_1 = require(\"./pseudo-selectors\");\nObject.defineProperty(exports, \"filters\", { enumerable: true, get: function () { return pseudo_selectors_1.filters; } });\nObject.defineProperty(exports, \"pseudos\", { enumerable: true, get: function () { return pseudo_selectors_1.pseudos; } });\nObject.defineProperty(exports, \"aliases\", { enumerable: true, get: function () { return pseudo_selectors_1.aliases; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\nexports.default = arr_back;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_1 = __importDefault(require(\"./nodes/type\"));\nfunction isTag(node) {\n    return node && node.nodeType === type_1.default.ELEMENT_NODE;\n}\nfunction getAttributeValue(elem, name) {\n    return isTag(elem) ? elem.getAttribute(name) : undefined;\n}\nfunction getName(elem) {\n    return ((elem && elem.rawTagName) || '').toLowerCase();\n}\nfunction getChildren(node) {\n    return node && node.childNodes;\n}\nfunction getParent(node) {\n    return node ? node.parentNode : null;\n}\nfunction getText(node) {\n    return node.text;\n}\nfunction removeSubsets(nodes) {\n    var idx = nodes.length;\n    var node;\n    var ancestor;\n    var replace;\n    // Check if each node (or one of its ancestors) is already contained in the\n    // array.\n    while (--idx > -1) {\n        node = ancestor = nodes[idx];\n        // Temporarily remove the node under consideration\n        nodes[idx] = null;\n        replace = true;\n        while (ancestor) {\n            if (nodes.indexOf(ancestor) > -1) {\n                replace = false;\n                nodes.splice(idx, 1);\n                break;\n            }\n            ancestor = getParent(ancestor);\n        }\n        // If the node has been found to be unique, re-insert it.\n        if (replace) {\n            nodes[idx] = node;\n        }\n    }\n    return nodes;\n}\nfunction existsOne(test, elems) {\n    return elems.some(function (elem) {\n        return isTag(elem) ? test(elem) || existsOne(test, getChildren(elem)) : false;\n    });\n}\nfunction getSiblings(node) {\n    var parent = getParent(node);\n    return parent && getChildren(parent);\n}\nfunction hasAttrib(elem, name) {\n    return getAttributeValue(elem, name) !== undefined;\n}\nfunction findOne(test, elems) {\n    var elem = null;\n    for (var i = 0, l = elems.length; i < l && !elem; i++) {\n        var el = elems[i];\n        if (test(el)) {\n            elem = el;\n        }\n        else {\n            var childs = getChildren(el);\n            if (childs && childs.length > 0) {\n                elem = findOne(test, childs);\n            }\n        }\n    }\n    return elem;\n}\nfunction findAll(test, nodes) {\n    var result = [];\n    for (var i = 0, j = nodes.length; i < j; i++) {\n        if (!isTag(nodes[i]))\n            continue;\n        if (test(nodes[i]))\n            result.push(nodes[i]);\n        var childs = getChildren(nodes[i]);\n        if (childs)\n            result = result.concat(findAll(test, childs));\n    }\n    return result;\n}\nexports.default = {\n    isTag: isTag,\n    getAttributeValue: getAttributeValue,\n    getName: getName,\n    getChildren: getChildren,\n    getParent: getParent,\n    getText: getText,\n    removeSubsets: removeSubsets,\n    existsOne: existsOne,\n    getSiblings: getSiblings,\n    hasAttrib: hasAttrib,\n    findOne: findOne,\n    findAll: findAll\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar VoidTag = /** @class */ (function () {\n    function VoidTag(addClosingSlash, tags) {\n        if (addClosingSlash === void 0) { addClosingSlash = false; }\n        this.addClosingSlash = addClosingSlash;\n        if (Array.isArray(tags)) {\n            this.voidTags = tags.reduce(function (set, tag) {\n                return set.add(tag.toLowerCase());\n            }, new Set());\n        }\n        else {\n            this.voidTags = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].reduce(function (set, tag) {\n                return set.add(tag);\n            }, new Set());\n        }\n    }\n    VoidTag.prototype.formatNode = function (tag, attrs, innerHTML) {\n        var addClosingSlash = this.addClosingSlash;\n        var closingSpace = (addClosingSlash && attrs && !attrs.endsWith(' ')) ? ' ' : '';\n        var closingSlash = addClosingSlash ? \"\".concat(closingSpace, \"/\") : '';\n        return this.isVoidElement(tag.toLowerCase()) ? \"<\".concat(tag).concat(attrs).concat(closingSlash, \">\") : \"<\".concat(tag).concat(attrs, \">\").concat(innerHTML, \"</\").concat(tag, \">\");\n    };\n    VoidTag.prototype.isVoidElement = function (tag) {\n        return this.voidTags.has(tag);\n    };\n    return VoidTag;\n}());\nexports.default = VoidTag;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar he_1 = require(\"he\");\nvar node_1 = __importDefault(require(\"./node\"));\nvar type_1 = __importDefault(require(\"./type\"));\n/**\n * TextNode to contain a text element in DOM tree.\n * @param {string} value [description]\n */\nvar TextNode = /** @class */ (function (_super) {\n    __extends(TextNode, _super);\n    function TextNode(rawText, parentNode, range) {\n        var _this = _super.call(this, parentNode, range) || this;\n        /**\n         * Node Type declaration.\n         * @type {Number}\n         */\n        _this.nodeType = type_1.default.TEXT_NODE;\n        _this._rawText = rawText;\n        return _this;\n    }\n    TextNode.prototype.clone = function () {\n        return new TextNode(this._rawText, null);\n    };\n    Object.defineProperty(TextNode.prototype, \"rawText\", {\n        get: function () {\n            return this._rawText;\n        },\n        /**\n         * Set rawText and invalidate trimmed caches\n         */\n        set: function (text) {\n            this._rawText = text;\n            this._trimmedRawText = void 0;\n            this._trimmedText = void 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"trimmedRawText\", {\n        /**\n         * Returns raw text with all whitespace trimmed except single leading/trailing non-breaking space\n         */\n        get: function () {\n            if (this._trimmedRawText !== undefined)\n                return this._trimmedRawText;\n            this._trimmedRawText = trimText(this.rawText);\n            return this._trimmedRawText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"trimmedText\", {\n        /**\n         * Returns text with all whitespace trimmed except single leading/trailing non-breaking space\n         */\n        get: function () {\n            if (this._trimmedText !== undefined)\n                return this._trimmedText;\n            this._trimmedText = trimText(this.text);\n            return this._trimmedText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"text\", {\n        /**\n         * Get unescaped text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            return (0, he_1.decode)(this.rawText);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"isWhitespace\", {\n        /**\n         * Detect if the node contains only white space.\n         * @return {boolean}\n         */\n        get: function () {\n            return /^(\\s|&nbsp;)*$/.test(this.rawText);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextNode.prototype.toString = function () {\n        return this.rawText;\n    };\n    return TextNode;\n}(node_1.default));\nexports.default = TextNode;\n/**\n * Trim whitespace except single leading/trailing non-breaking space\n */\nfunction trimText(text) {\n    var i = 0;\n    var startPos;\n    var endPos;\n    while (i >= 0 && i < text.length) {\n        if (/\\S/.test(text[i])) {\n            if (startPos === undefined) {\n                startPos = i;\n                i = text.length;\n            }\n            else {\n                endPos = i;\n                i = void 0;\n            }\n        }\n        if (startPos === undefined)\n            i++;\n        else\n            i--;\n    }\n    if (startPos === undefined)\n        startPos = 0;\n    if (endPos === undefined)\n        endPos = text.length - 1;\n    var hasLeadingSpace = startPos > 0 && /[^\\S\\r\\n]/.test(text[startPos - 1]);\n    var hasTrailingSpace = endPos < (text.length - 1) && /[^\\S\\r\\n]/.test(text[endPos + 1]);\n    return (hasLeadingSpace ? ' ' : '') + text.slice(startPos, endPos + 1) + (hasTrailingSpace ? ' ' : '');\n}\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.base_parse = void 0;\nvar css_select_1 = require(\"css-select\");\nvar he_1 = __importDefault(require(\"he\"));\nvar back_1 = __importDefault(require(\"../back\"));\nvar matcher_1 = __importDefault(require(\"../matcher\"));\nvar void_tag_1 = __importDefault(require(\"../void-tag\"));\nvar comment_1 = __importDefault(require(\"./comment\"));\nvar node_1 = __importDefault(require(\"./node\"));\nvar text_1 = __importDefault(require(\"./text\"));\nvar type_1 = __importDefault(require(\"./type\"));\nfunction decode(val) {\n    // clone string\n    return JSON.parse(JSON.stringify(he_1.default.decode(val)));\n}\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\nvar Htags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup'];\nvar Dtags = ['details', 'dialog', 'dd', 'div', 'dt'];\nvar Ftags = ['fieldset', 'figcaption', 'figure', 'footer', 'form'];\nvar tableTags = ['table', 'td', 'tr'];\nvar htmlTags = ['address', 'article', 'aside', 'blockquote', 'br', 'hr', 'li', 'main', 'nav', 'ol', 'p', 'pre', 'section', 'ul'];\nvar kBlockElements = new Set();\nfunction addToKBlockElement() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var addToSet = function (array) {\n        for (var index = 0; index < array.length; index++) {\n            var element = array[index];\n            kBlockElements.add(element);\n            kBlockElements.add(element.toUpperCase());\n        }\n    };\n    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n        var arg = args_1[_a];\n        addToSet(arg);\n    }\n}\naddToKBlockElement(Htags, Dtags, Ftags, tableTags, htmlTags);\nvar DOMTokenList = /** @class */ (function () {\n    function DOMTokenList(valuesInit, afterUpdate) {\n        if (valuesInit === void 0) { valuesInit = []; }\n        if (afterUpdate === void 0) { afterUpdate = function () { return null; }; }\n        this._set = new Set(valuesInit);\n        this._afterUpdate = afterUpdate;\n    }\n    DOMTokenList.prototype._validate = function (c) {\n        if (/\\s/.test(c)) {\n            throw new Error(\"DOMException in DOMTokenList.add: The token '\".concat(c, \"' contains HTML space characters, which are not valid in tokens.\"));\n        }\n    };\n    DOMTokenList.prototype.add = function (c) {\n        this._validate(c);\n        this._set.add(c);\n        this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.replace = function (c1, c2) {\n        this._validate(c2);\n        this._set.delete(c1);\n        this._set.add(c2);\n        this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.remove = function (c) {\n        this._set.delete(c) && this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.toggle = function (c) {\n        this._validate(c);\n        if (this._set.has(c))\n            this._set.delete(c);\n        else\n            this._set.add(c);\n        this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.contains = function (c) {\n        return this._set.has(c);\n    };\n    Object.defineProperty(DOMTokenList.prototype, \"length\", {\n        get: function () {\n            return this._set.size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DOMTokenList.prototype.values = function () {\n        return this._set.values();\n    };\n    Object.defineProperty(DOMTokenList.prototype, \"value\", {\n        get: function () {\n            return Array.from(this._set.values());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DOMTokenList.prototype.toString = function () {\n        return Array.from(this._set.values()).join(' ');\n    };\n    return DOMTokenList;\n}());\n/**\n * HTMLElement, which contains a set of children.\n *\n * Note: this is a minimalist implementation, no complete tree\n *   structure provided (no parentNode, nextSibling,\n *   previousSibling etc).\n * @class HTMLElement\n * @extends {Node}\n */\nvar HTMLElement = /** @class */ (function (_super) {\n    __extends(HTMLElement, _super);\n    /**\n     * Creates an instance of HTMLElement.\n     * @param keyAttrs\tid and class attribute\n     * @param [rawAttrs]\tattributes in string\n     *\n     * @memberof HTMLElement\n     */\n    function HTMLElement(tagName, keyAttrs, rawAttrs, parentNode, range, voidTag) {\n        if (rawAttrs === void 0) { rawAttrs = ''; }\n        if (voidTag === void 0) { voidTag = new void_tag_1.default(); }\n        var _this = _super.call(this, parentNode, range) || this;\n        _this.rawAttrs = rawAttrs;\n        _this.voidTag = voidTag;\n        /**\n         * Node Type declaration.\n         */\n        _this.nodeType = type_1.default.ELEMENT_NODE;\n        _this.rawTagName = tagName;\n        _this.rawAttrs = rawAttrs || '';\n        _this.id = keyAttrs.id || '';\n        _this.childNodes = [];\n        _this.classList = new DOMTokenList(keyAttrs.class ? keyAttrs.class.split(/\\s+/) : [], function (classList) { return _this.setAttribute('class', classList.toString()); } // eslint-disable-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        );\n        if (keyAttrs.id) {\n            if (!rawAttrs) {\n                _this.rawAttrs = \"id=\\\"\".concat(keyAttrs.id, \"\\\"\");\n            }\n        }\n        if (keyAttrs.class) {\n            if (!rawAttrs) {\n                var cls = \"class=\\\"\".concat(_this.classList.toString(), \"\\\"\");\n                if (_this.rawAttrs) {\n                    _this.rawAttrs += \" \".concat(cls);\n                }\n                else {\n                    _this.rawAttrs = cls;\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Quote attribute values\n     * @param attr attribute value\n     * @returns {string} quoted value\n     */\n    HTMLElement.prototype.quoteAttribute = function (attr) {\n        if (attr == null) {\n            return 'null';\n        }\n        return JSON.stringify(attr.replace(/\"/g, '&quot;'));\n    };\n    /**\n     * Remove Child element from childNodes array\n     * @param {HTMLElement} node     node to remove\n     */\n    HTMLElement.prototype.removeChild = function (node) {\n        this.childNodes = this.childNodes.filter(function (child) {\n            return child !== node;\n        });\n        return this;\n    };\n    /**\n     * Exchanges given child with new child\n     * @param {HTMLElement} oldNode     node to exchange\n     * @param {HTMLElement} newNode     new node\n     */\n    HTMLElement.prototype.exchangeChild = function (oldNode, newNode) {\n        var children = this.childNodes;\n        this.childNodes = children.map(function (child) {\n            if (child === oldNode) {\n                return newNode;\n            }\n            return child;\n        });\n        return this;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"tagName\", {\n        get: function () {\n            return this.rawTagName ? this.rawTagName.toUpperCase() : this.rawTagName;\n        },\n        set: function (newname) {\n            this.rawTagName = newname.toLowerCase();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"localName\", {\n        get: function () {\n            return this.rawTagName.toLowerCase();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"isVoidElement\", {\n        get: function () {\n            return this.voidTag.isVoidElement(this.localName);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"rawText\", {\n        /**\n         * Get escpaed (as-it) text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            return this.childNodes.reduce(function (pre, cur) {\n                return (pre += cur.rawText);\n            }, '');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"textContent\", {\n        get: function () {\n            return decode(this.rawText);\n        },\n        set: function (val) {\n            var content = [new text_1.default(val, this)];\n            this.childNodes = content;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"text\", {\n        /**\n         * Get unescaped text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            return decode(this.rawText);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"structuredText\", {\n        /**\n         * Get structured Text (with '\\n' etc.)\n         * @return {string} structured text\n         */\n        get: function () {\n            var currentBlock = [];\n            var blocks = [currentBlock];\n            function dfs(node) {\n                if (node.nodeType === type_1.default.ELEMENT_NODE) {\n                    if (kBlockElements.has(node.rawTagName)) {\n                        if (currentBlock.length > 0) {\n                            blocks.push((currentBlock = []));\n                        }\n                        node.childNodes.forEach(dfs);\n                        if (currentBlock.length > 0) {\n                            blocks.push((currentBlock = []));\n                        }\n                    }\n                    else {\n                        node.childNodes.forEach(dfs);\n                    }\n                }\n                else if (node.nodeType === type_1.default.TEXT_NODE) {\n                    if (node.isWhitespace) {\n                        // Whitespace node, postponed output\n                        currentBlock.prependWhitespace = true;\n                    }\n                    else {\n                        var text = node.trimmedText;\n                        if (currentBlock.prependWhitespace) {\n                            text = \" \".concat(text);\n                            currentBlock.prependWhitespace = false;\n                        }\n                        currentBlock.push(text);\n                    }\n                }\n            }\n            dfs(this);\n            return blocks\n                .map(function (block) {\n                return block.join('').replace(/\\s{2,}/g, ' '); // Normalize each line's whitespace\n            })\n                .join('\\n')\n                .replace(/\\s+$/, ''); // trimRight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTMLElement.prototype.toString = function () {\n        var tag = this.rawTagName;\n        if (tag) {\n            var attrs = this.rawAttrs ? \" \".concat(this.rawAttrs) : '';\n            return this.voidTag.formatNode(tag, attrs, this.innerHTML);\n        }\n        return this.innerHTML;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"innerHTML\", {\n        get: function () {\n            return this.childNodes\n                .map(function (child) {\n                return child.toString();\n            })\n                .join('');\n        },\n        set: function (content) {\n            //const r = parse(content, global.options); // TODO global.options ?\n            var r = parse(content);\n            var nodes = r.childNodes.length ? r.childNodes : [new text_1.default(content, this)];\n            resetParent(nodes, this);\n            resetParent(this.childNodes, null);\n            this.childNodes = nodes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTMLElement.prototype.set_content = function (content, options) {\n        if (options === void 0) { options = {}; }\n        if (content instanceof node_1.default) {\n            content = [content];\n        }\n        else if (typeof content == 'string') {\n            var r = parse(content, options);\n            content = r.childNodes.length ? r.childNodes : [new text_1.default(content, this)];\n        }\n        resetParent(this.childNodes, null);\n        resetParent(content, this);\n        this.childNodes = content;\n        return this;\n    };\n    HTMLElement.prototype.replaceWith = function () {\n        var _this = this;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        var parent = this.parentNode;\n        var content = nodes\n            .map(function (node) {\n            if (node instanceof node_1.default) {\n                return [node];\n            }\n            else if (typeof node == 'string') {\n                // const r = parse(content, global.options); // TODO global.options ?\n                var r = parse(node);\n                return r.childNodes.length ? r.childNodes : [new text_1.default(node, _this)];\n            }\n            return [];\n        })\n            .flat();\n        var idx = parent.childNodes.findIndex(function (child) {\n            return child === _this;\n        });\n        resetParent([this], null);\n        parent.childNodes = __spreadArray(__spreadArray(__spreadArray([], parent.childNodes.slice(0, idx), true), resetParent(content, parent), true), parent.childNodes.slice(idx + 1), true);\n    };\n    Object.defineProperty(HTMLElement.prototype, \"outerHTML\", {\n        get: function () {\n            return this.toString();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Trim element from right (in block) after seeing pattern in a TextNode.\n     * @param  {RegExp} pattern pattern to find\n     * @return {HTMLElement}    reference to current node\n     */\n    HTMLElement.prototype.trimRight = function (pattern) {\n        for (var i = 0; i < this.childNodes.length; i++) {\n            var childNode = this.childNodes[i];\n            if (childNode.nodeType === type_1.default.ELEMENT_NODE) {\n                childNode.trimRight(pattern);\n            }\n            else {\n                var index = childNode.rawText.search(pattern);\n                if (index > -1) {\n                    childNode.rawText = childNode.rawText.substr(0, index);\n                    // trim all following nodes.\n                    this.childNodes.length = i + 1;\n                }\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"structure\", {\n        /**\n         * Get DOM structure\n         * @return {string} strucutre\n         */\n        get: function () {\n            var res = [];\n            var indention = 0;\n            function write(str) {\n                res.push('  '.repeat(indention) + str);\n            }\n            function dfs(node) {\n                var idStr = node.id ? \"#\".concat(node.id) : '';\n                var classStr = node.classList.length ? \".\".concat(node.classList.value.join('.')) : ''; // eslint-disable-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call\n                write(\"\".concat(node.rawTagName).concat(idStr).concat(classStr));\n                indention++;\n                node.childNodes.forEach(function (childNode) {\n                    if (childNode.nodeType === type_1.default.ELEMENT_NODE) {\n                        dfs(childNode);\n                    }\n                    else if (childNode.nodeType === type_1.default.TEXT_NODE) {\n                        if (!childNode.isWhitespace) {\n                            write('#text');\n                        }\n                    }\n                });\n                indention--;\n            }\n            dfs(this);\n            return res.join('\\n');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Remove whitespaces in this sub tree.\n     * @return {HTMLElement} pointer to this\n     */\n    HTMLElement.prototype.removeWhitespace = function () {\n        var _this = this;\n        var o = 0;\n        this.childNodes.forEach(function (node) {\n            if (node.nodeType === type_1.default.TEXT_NODE) {\n                if (node.isWhitespace) {\n                    return;\n                }\n                node.rawText = node.trimmedRawText;\n            }\n            else if (node.nodeType === type_1.default.ELEMENT_NODE) {\n                node.removeWhitespace();\n            }\n            _this.childNodes[o++] = node;\n        });\n        this.childNodes.length = o;\n        return this;\n    };\n    /**\n     * Query CSS selector to find matching nodes.\n     * @param  {string}         selector Simplified CSS selector\n     * @return {HTMLElement[]}  matching elements\n     */\n    HTMLElement.prototype.querySelectorAll = function (selector) {\n        return (0, css_select_1.selectAll)(selector, this, {\n            xmlMode: true,\n            adapter: matcher_1.default,\n        });\n    };\n    /**\n     * Query CSS Selector to find matching node.\n     * @param  {string}         selector Simplified CSS selector\n     * @return {(HTMLElement|null)}    matching node\n     */\n    HTMLElement.prototype.querySelector = function (selector) {\n        return (0, css_select_1.selectOne)(selector, this, {\n            xmlMode: true,\n            adapter: matcher_1.default,\n        });\n    };\n    /**\n     * find elements by their tagName\n     * @param {string} tagName the tagName of the elements to select\n     */\n    HTMLElement.prototype.getElementsByTagName = function (tagName) {\n        var upperCasedTagName = tagName.toUpperCase();\n        var re = [];\n        var stack = [];\n        var currentNodeReference = this;\n        var index = 0;\n        // index turns to undefined once the stack is empty and the first condition occurs\n        // which happens once all relevant children are searched through\n        while (index !== undefined) {\n            var child = void 0;\n            // make it work with sparse arrays\n            do {\n                child = currentNodeReference.childNodes[index++];\n            } while (index < currentNodeReference.childNodes.length && child === undefined);\n            // if the child does not exist we move on with the last provided index (which belongs to the parentNode)\n            if (child === undefined) {\n                currentNodeReference = currentNodeReference.parentNode;\n                index = stack.pop();\n                continue;\n            }\n            if (child.nodeType === type_1.default.ELEMENT_NODE) {\n                // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName#syntax\n                if (tagName === '*' || child.tagName === upperCasedTagName)\n                    re.push(child);\n                // if children are existing push the current status to the stack and keep searching for elements in the level below\n                if (child.childNodes.length > 0) {\n                    stack.push(index);\n                    currentNodeReference = child;\n                    index = 0;\n                }\n            }\n        }\n        return re;\n    };\n    /**\n     * find element by it's id\n     * @param {string} id the id of the element to select\n     */\n    HTMLElement.prototype.getElementById = function (id) {\n        var stack = [];\n        var currentNodeReference = this;\n        var index = 0;\n        // index turns to undefined once the stack is empty and the first condition occurs\n        // which happens once all relevant children are searched through\n        while (index !== undefined) {\n            var child = void 0;\n            // make it work with sparse arrays\n            do {\n                child = currentNodeReference.childNodes[index++];\n            } while (index < currentNodeReference.childNodes.length && child === undefined);\n            // if the child does not exist we move on with the last provided index (which belongs to the parentNode)\n            if (child === undefined) {\n                currentNodeReference = currentNodeReference.parentNode;\n                index = stack.pop();\n                continue;\n            }\n            if (child.nodeType === type_1.default.ELEMENT_NODE) {\n                if (child.id === id) {\n                    return child;\n                }\n                ;\n                // if children are existing push the current status to the stack and keep searching for elements in the level below\n                if (child.childNodes.length > 0) {\n                    stack.push(index);\n                    currentNodeReference = child;\n                    index = 0;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * traverses the Element and its parents (heading toward the document root) until it finds a node that matches the provided selector string. Will return itself or the matching ancestor. If no such element exists, it returns null.\n     * @param selector a DOMString containing a selector list\n     */\n    HTMLElement.prototype.closest = function (selector) {\n        var mapChild = new Map();\n        var el = this;\n        var old = null;\n        function findOne(test, elems) {\n            var elem = null;\n            for (var i = 0, l = elems.length; i < l && !elem; i++) {\n                var el_1 = elems[i];\n                if (test(el_1)) {\n                    elem = el_1;\n                }\n                else {\n                    var child = mapChild.get(el_1);\n                    if (child) {\n                        elem = findOne(test, [child]);\n                    }\n                }\n            }\n            return elem;\n        }\n        while (el) {\n            mapChild.set(el, old);\n            old = el;\n            el = el.parentNode;\n        }\n        el = this;\n        while (el) {\n            var e = (0, css_select_1.selectOne)(selector, el, {\n                xmlMode: true,\n                adapter: __assign(__assign({}, matcher_1.default), { getChildren: function (node) {\n                        var child = mapChild.get(node);\n                        return child && [child];\n                    }, getSiblings: function (node) {\n                        return [node];\n                    }, findOne: findOne, findAll: function () {\n                        return [];\n                    } }),\n            });\n            if (e) {\n                return e;\n            }\n            el = el.parentNode;\n        }\n        return null;\n    };\n    /**\n     * Append a child node to childNodes\n     * @param  {Node} node node to append\n     * @return {Node}      node appended\n     */\n    HTMLElement.prototype.appendChild = function (node) {\n        // remove the node from it's parent\n        node.remove();\n        this.childNodes.push(node);\n        node.parentNode = this;\n        return node;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"firstChild\", {\n        /**\n         * Get first child node\n         * @return {Node} first child node\n         */\n        get: function () {\n            return this.childNodes[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"lastChild\", {\n        /**\n         * Get last child node\n         * @return {Node} last child node\n         */\n        get: function () {\n            return (0, back_1.default)(this.childNodes);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"attrs\", {\n        /**\n         * Get attributes\n         * @access private\n         * @return {Object} parsed and unescaped attributes\n         */\n        get: function () {\n            if (this._attrs) {\n                return this._attrs;\n            }\n            this._attrs = {};\n            var attrs = this.rawAttributes;\n            for (var key in attrs) {\n                var val = attrs[key] || '';\n                this._attrs[key.toLowerCase()] = decode(val);\n            }\n            return this._attrs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"attributes\", {\n        get: function () {\n            var ret_attrs = {};\n            var attrs = this.rawAttributes;\n            for (var key in attrs) {\n                var val = attrs[key] || '';\n                ret_attrs[key] = decode(val);\n            }\n            return ret_attrs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"rawAttributes\", {\n        /**\n         * Get escaped (as-is) attributes\n         * @return {Object} parsed attributes\n         */\n        get: function () {\n            if (this._rawAttrs) {\n                return this._rawAttrs;\n            }\n            var attrs = {};\n            if (this.rawAttrs) {\n                var re = /([a-zA-Z()[\\]#@][a-zA-Z0-9-_:()[\\]#]*)(?:\\s*=\\s*((?:'[^']*')|(?:\"[^\"]*\")|\\S+))?/g;\n                var match = void 0;\n                while ((match = re.exec(this.rawAttrs))) {\n                    var key = match[1];\n                    var val = match[2] || null;\n                    if (val && (val[0] === \"'\" || val[0] === \"\\\"\"))\n                        val = val.slice(1, val.length - 1);\n                    attrs[key] = val;\n                }\n            }\n            this._rawAttrs = attrs;\n            return attrs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTMLElement.prototype.removeAttribute = function (key) {\n        var attrs = this.rawAttributes;\n        delete attrs[key];\n        // Update this.attribute\n        if (this._attrs) {\n            delete this._attrs[key];\n        }\n        // Update rawString\n        this.rawAttrs = Object.keys(attrs)\n            .map(function (name) {\n            var val = JSON.stringify(attrs[name]);\n            if (val === undefined || val === 'null') {\n                return name;\n            }\n            return \"\".concat(name, \"=\").concat(val);\n        })\n            .join(' ');\n        // Update this.id\n        if (key === 'id') {\n            this.id = '';\n        }\n        return this;\n    };\n    HTMLElement.prototype.hasAttribute = function (key) {\n        return key.toLowerCase() in this.attrs;\n    };\n    /**\n     * Get an attribute\n     * @return {string} value of the attribute\n     */\n    HTMLElement.prototype.getAttribute = function (key) {\n        return this.attrs[key.toLowerCase()];\n    };\n    /**\n     * Set an attribute value to the HTMLElement\n     * @param {string} key The attribute name\n     * @param {string} value The value to set, or null / undefined to remove an attribute\n     */\n    HTMLElement.prototype.setAttribute = function (key, value) {\n        var _this = this;\n        if (arguments.length < 2) {\n            throw new Error(\"Failed to execute 'setAttribute' on 'Element'\");\n        }\n        var k2 = key.toLowerCase();\n        var attrs = this.rawAttributes;\n        for (var k in attrs) {\n            if (k.toLowerCase() === k2) {\n                key = k;\n                break;\n            }\n        }\n        attrs[key] = String(value);\n        // update this.attrs\n        if (this._attrs) {\n            this._attrs[k2] = decode(attrs[key]);\n        }\n        // Update rawString\n        this.rawAttrs = Object.keys(attrs)\n            .map(function (name) {\n            var val = _this.quoteAttribute(attrs[name]);\n            if (val === 'null' || val === '\"\"')\n                return name;\n            return \"\".concat(name, \"=\").concat(val);\n        })\n            .join(' ');\n        // Update this.id\n        if (key === 'id') {\n            this.id = value;\n        }\n    };\n    /**\n     * Replace all the attributes of the HTMLElement by the provided attributes\n     * @param {Attributes} attributes the new attribute set\n     */\n    HTMLElement.prototype.setAttributes = function (attributes) {\n        var _this = this;\n        // Invalidate current this.attributes\n        if (this._attrs) {\n            delete this._attrs;\n        }\n        // Invalidate current this.rawAttributes\n        if (this._rawAttrs) {\n            delete this._rawAttrs;\n        }\n        // Update rawString\n        this.rawAttrs = Object.keys(attributes)\n            .map(function (name) {\n            var val = attributes[name];\n            if (val === 'null' || val === '\"\"')\n                return name;\n            return \"\".concat(name, \"=\").concat(_this.quoteAttribute(String(val)));\n        })\n            .join(' ');\n        return this;\n    };\n    HTMLElement.prototype.insertAdjacentHTML = function (where, html) {\n        var _a, _b, _c;\n        var _this = this;\n        if (arguments.length < 2) {\n            throw new Error('2 arguments required');\n        }\n        var p = parse(html);\n        if (where === 'afterend') {\n            var idx = this.parentNode.childNodes.findIndex(function (child) {\n                return child === _this;\n            });\n            resetParent(p.childNodes, this.parentNode);\n            (_a = this.parentNode.childNodes).splice.apply(_a, __spreadArray([idx + 1, 0], p.childNodes, false));\n        }\n        else if (where === 'afterbegin') {\n            resetParent(p.childNodes, this);\n            (_b = this.childNodes).unshift.apply(_b, p.childNodes);\n        }\n        else if (where === 'beforeend') {\n            p.childNodes.forEach(function (n) {\n                _this.appendChild(n);\n            });\n        }\n        else if (where === 'beforebegin') {\n            var idx = this.parentNode.childNodes.findIndex(function (child) {\n                return child === _this;\n            });\n            resetParent(p.childNodes, this.parentNode);\n            (_c = this.parentNode.childNodes).splice.apply(_c, __spreadArray([idx, 0], p.childNodes, false));\n        }\n        else {\n            throw new Error(\"The value provided ('\".concat(where, \"') is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'\"));\n        }\n        return this;\n        // if (!where || html === undefined || html === null) {\n        // \treturn;\n        // }\n    };\n    Object.defineProperty(HTMLElement.prototype, \"nextSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = 0;\n                while (i < children.length) {\n                    var child = children[i++];\n                    if (this === child)\n                        return children[i] || null;\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"nextElementSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = 0;\n                var find = false;\n                while (i < children.length) {\n                    var child = children[i++];\n                    if (find) {\n                        if (child instanceof HTMLElement) {\n                            return child || null;\n                        }\n                    }\n                    else if (this === child) {\n                        find = true;\n                    }\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"previousSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = children.length;\n                while (i > 0) {\n                    var child = children[--i];\n                    if (this === child)\n                        return children[i - 1] || null;\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"previousElementSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = children.length;\n                var find = false;\n                while (i > 0) {\n                    var child = children[--i];\n                    if (find) {\n                        if (child instanceof HTMLElement) {\n                            return child || null;\n                        }\n                    }\n                    else if (this === child) {\n                        find = true;\n                    }\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"classNames\", {\n        get: function () {\n            return this.classList.toString();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this Node\n     */\n    HTMLElement.prototype.clone = function () {\n        return parse(this.toString()).firstChild;\n    };\n    return HTMLElement;\n}(node_1.default));\nexports.default = HTMLElement;\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nvar kMarkupPattern = /<!--[\\s\\S]*?-->|<(\\/?)([a-zA-Z][-.:0-9_a-zA-Z]*)((?:\\s+[^>]*?(?:(?:'[^']*')|(?:\"[^\"]*\"))?)*)\\s*(\\/?)>/g;\nvar kAttributePattern = /(?:^|\\s)(id|class)\\s*=\\s*((?:'[^']*')|(?:\"[^\"]*\")|\\S+)/gi;\nvar kSelfClosingElements = {\n    area: true,\n    AREA: true,\n    base: true,\n    BASE: true,\n    br: true,\n    BR: true,\n    col: true,\n    COL: true,\n    hr: true,\n    HR: true,\n    img: true,\n    IMG: true,\n    input: true,\n    INPUT: true,\n    link: true,\n    LINK: true,\n    meta: true,\n    META: true,\n    source: true,\n    SOURCE: true,\n    embed: true,\n    EMBED: true,\n    param: true,\n    PARAM: true,\n    track: true,\n    TRACK: true,\n    wbr: true,\n    WBR: true,\n};\nvar kElementsClosedByOpening = {\n    li: { li: true, LI: true },\n    LI: { li: true, LI: true },\n    p: { p: true, div: true, P: true, DIV: true },\n    P: { p: true, div: true, P: true, DIV: true },\n    b: { div: true, DIV: true },\n    B: { div: true, DIV: true },\n    td: { td: true, th: true, TD: true, TH: true },\n    TD: { td: true, th: true, TD: true, TH: true },\n    th: { td: true, th: true, TD: true, TH: true },\n    TH: { td: true, th: true, TD: true, TH: true },\n    h1: { h1: true, H1: true },\n    H1: { h1: true, H1: true },\n    h2: { h2: true, H2: true },\n    H2: { h2: true, H2: true },\n    h3: { h3: true, H3: true },\n    H3: { h3: true, H3: true },\n    h4: { h4: true, H4: true },\n    H4: { h4: true, H4: true },\n    h5: { h5: true, H5: true },\n    H5: { h5: true, H5: true },\n    h6: { h6: true, H6: true },\n    H6: { h6: true, H6: true },\n};\nvar kElementsClosedByClosing = {\n    li: { ul: true, ol: true, UL: true, OL: true },\n    LI: { ul: true, ol: true, UL: true, OL: true },\n    a: { div: true, DIV: true },\n    A: { div: true, DIV: true },\n    b: { div: true, DIV: true },\n    B: { div: true, DIV: true },\n    i: { div: true, DIV: true },\n    I: { div: true, DIV: true },\n    p: { div: true, DIV: true },\n    P: { div: true, DIV: true },\n    td: { tr: true, table: true, TR: true, TABLE: true },\n    TD: { tr: true, table: true, TR: true, TABLE: true },\n    th: { tr: true, table: true, TR: true, TABLE: true },\n    TH: { tr: true, table: true, TR: true, TABLE: true },\n};\nvar frameflag = 'documentfragmentcontainer';\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data      html\n * @return {HTMLElement}      root element\n */\nfunction base_parse(data, options) {\n    var _a, _b;\n    if (options === void 0) { options = { lowerCaseTagName: false, comment: false }; }\n    var voidTag = new void_tag_1.default((_a = options === null || options === void 0 ? void 0 : options.voidTag) === null || _a === void 0 ? void 0 : _a.closingSlash, (_b = options === null || options === void 0 ? void 0 : options.voidTag) === null || _b === void 0 ? void 0 : _b.tags);\n    var elements = options.blockTextElements || {\n        script: true,\n        noscript: true,\n        style: true,\n        pre: true,\n    };\n    var element_names = Object.keys(elements);\n    var kBlockTextElements = element_names.map(function (it) { return new RegExp(\"^\".concat(it, \"$\"), 'i'); });\n    var kIgnoreElements = element_names.filter(function (it) { return elements[it]; }).map(function (it) { return new RegExp(\"^\".concat(it, \"$\"), 'i'); });\n    function element_should_be_ignore(tag) {\n        return kIgnoreElements.some(function (it) { return it.test(tag); });\n    }\n    function is_block_text_element(tag) {\n        return kBlockTextElements.some(function (it) { return it.test(tag); });\n    }\n    var createRange = function (startPos, endPos) { return [startPos - frameFlagOffset, endPos - frameFlagOffset]; };\n    var root = new HTMLElement(null, {}, '', null, [0, data.length], voidTag);\n    var currentParent = root;\n    var stack = [root];\n    var lastTextPos = -1;\n    var noNestedTagIndex = undefined;\n    var match;\n    // https://github.com/taoqf/node-html-parser/issues/38\n    data = \"<\".concat(frameflag, \">\").concat(data, \"</\").concat(frameflag, \">\");\n    var lowerCaseTagName = options.lowerCaseTagName;\n    var dataEndPos = data.length - (frameflag.length + 2);\n    var frameFlagOffset = frameflag.length + 2;\n    while ((match = kMarkupPattern.exec(data))) {\n        // Note: Object destructuring here consistently tests as higher performance than array destructuring\n        // eslint-disable-next-line prefer-const\n        var matchText = match[0], leadingSlash = match[1], tagName = match[2], attributes = match[3], closingSlash = match[4];\n        var matchLength = matchText.length;\n        var tagStartPos = kMarkupPattern.lastIndex - matchLength;\n        var tagEndPos = kMarkupPattern.lastIndex;\n        // Add TextNode if content\n        if (lastTextPos > -1) {\n            if (lastTextPos + matchLength < tagEndPos) {\n                var text = data.substring(lastTextPos, tagStartPos);\n                currentParent.appendChild(new text_1.default(text, currentParent, createRange(lastTextPos, tagStartPos)));\n            }\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        // https://github.com/taoqf/node-html-parser/issues/38\n        // Skip frameflag node\n        if (tagName === frameflag)\n            continue;\n        // Handle comments\n        if (matchText[1] === '!') {\n            if (options.comment) {\n                // Only keep what is in between <!-- and -->\n                var text = data.substring(tagStartPos + 4, tagEndPos - 3);\n                currentParent.appendChild(new comment_1.default(text, currentParent, createRange(tagStartPos, tagEndPos)));\n            }\n            continue;\n        }\n        /* -- Handle tag matching -- */\n        // Fix tag casing if necessary\n        if (lowerCaseTagName)\n            tagName = tagName.toLowerCase();\n        // Handle opening tags (ie. <this> not </that>)\n        if (!leadingSlash) {\n            /* Populate attributes */\n            var attrs = {};\n            for (var attMatch = void 0; (attMatch = kAttributePattern.exec(attributes));) {\n                var key = attMatch[1], val = attMatch[2];\n                var isQuoted = val[0] === \"'\" || val[0] === \"\\\"\";\n                attrs[key.toLowerCase()] = isQuoted ? val.slice(1, val.length - 1) : val;\n            }\n            var parentTagName = currentParent.rawTagName;\n            if (!closingSlash && kElementsClosedByOpening[parentTagName]) {\n                if (kElementsClosedByOpening[parentTagName][tagName]) {\n                    stack.pop();\n                    currentParent = (0, back_1.default)(stack);\n                }\n            }\n            // Prevent nested A tags by terminating the last A and starting a new one : see issue #144\n            if (tagName === 'a' || tagName === 'A') {\n                if (noNestedTagIndex !== undefined) {\n                    stack.splice(noNestedTagIndex);\n                    currentParent = (0, back_1.default)(stack);\n                }\n                noNestedTagIndex = stack.length;\n            }\n            var tagEndPos_1 = kMarkupPattern.lastIndex;\n            var tagStartPos_1 = tagEndPos_1 - matchLength;\n            currentParent = currentParent.appendChild(\n            // Initialize range (end position updated later for closed tags)\n            new HTMLElement(tagName, attrs, attributes.slice(1), null, createRange(tagStartPos_1, tagEndPos_1), voidTag));\n            stack.push(currentParent);\n            if (is_block_text_element(tagName)) {\n                // Find closing tag\n                var closeMarkup = \"</\".concat(tagName, \">\");\n                var closeIndex = lowerCaseTagName\n                    ? data.toLocaleLowerCase().indexOf(closeMarkup, kMarkupPattern.lastIndex)\n                    : data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                var textEndPos = closeIndex === -1 ? dataEndPos : closeIndex;\n                if (element_should_be_ignore(tagName)) {\n                    var text = data.substring(tagEndPos_1, textEndPos);\n                    if (text.length > 0 && /\\S/.test(text)) {\n                        currentParent.appendChild(new text_1.default(text, currentParent, createRange(tagEndPos_1, textEndPos)));\n                    }\n                }\n                if (closeIndex === -1) {\n                    lastTextPos = kMarkupPattern.lastIndex = data.length + 1;\n                }\n                else {\n                    lastTextPos = kMarkupPattern.lastIndex = closeIndex + closeMarkup.length;\n                    // Cause to be treated as self-closing, because no close found\n                    leadingSlash = '/';\n                }\n            }\n        }\n        // Handle closing tags or self-closed elements (ie </tag> or <br>)\n        if (leadingSlash || closingSlash || kSelfClosingElements[tagName]) {\n            while (true) {\n                if (tagName === 'a' || tagName === 'A')\n                    noNestedTagIndex = undefined;\n                if (currentParent.rawTagName === tagName) {\n                    // Update range end for closed tag\n                    currentParent.range[1] = createRange(-1, Math.max(lastTextPos, tagEndPos))[1];\n                    stack.pop();\n                    currentParent = (0, back_1.default)(stack);\n                    break;\n                }\n                else {\n                    var parentTagName = currentParent.tagName;\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[parentTagName]) {\n                        if (kElementsClosedByClosing[parentTagName][tagName]) {\n                            stack.pop();\n                            currentParent = (0, back_1.default)(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    return stack;\n}\nexports.base_parse = base_parse;\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n */\nfunction parse(data, options) {\n    if (options === void 0) { options = { lowerCaseTagName: false, comment: false }; }\n    var stack = base_parse(data, options);\n    var root = stack[0];\n    var _loop_1 = function () {\n        // Handle each error elements.\n        var last = stack.pop();\n        var oneBefore = (0, back_1.default)(stack);\n        if (last.parentNode && last.parentNode.parentNode) {\n            if (last.parentNode === oneBefore && last.tagName === oneBefore.tagName) {\n                // Pair error case <h3> <h3> handle : Fixes to <h3> </h3>\n                // this is wrong, becouse this will put the H3 outside the current right position which should be inside the current Html Element, see issue 152 for more info\n                if (options.parseNoneClosedTags !== true) {\n                    oneBefore.removeChild(last);\n                    last.childNodes.forEach(function (child) {\n                        oneBefore.parentNode.appendChild(child);\n                    });\n                    stack.pop();\n                }\n            }\n            else {\n                // Single error  <div> <h3> </div> handle: Just removes <h3>\n                // Why remove? this is already a HtmlElement and the missing <H3> is already added in this case. see issue 152 for more info\n                // eslint-disable-next-line no-lonely-if\n                if (options.parseNoneClosedTags !== true) {\n                    oneBefore.removeChild(last);\n                    last.childNodes.forEach(function (child) {\n                        oneBefore.appendChild(child);\n                    });\n                }\n            }\n        }\n        else {\n            // If it's final element just skip.\n        }\n    };\n    while (stack.length > 1) {\n        _loop_1();\n    }\n    // response.childNodes.forEach((node) => {\n    // \tif (node instanceof HTMLElement) {\n    // \t\tnode.parentNode = null;\n    // \t}\n    // });\n    return root;\n}\nexports.parse = parse;\nfunction resetParent(nodes, parent) {\n    return nodes.map(function (node) {\n        node.parentNode = parent;\n        return node;\n    });\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar html_1 = require(\"./nodes/html\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return html_1.parse; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar html_1 = require(\"./nodes/html\");\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n */\nfunction valid(data, options) {\n    if (options === void 0) { options = { lowerCaseTagName: false, comment: false }; }\n    var stack = (0, html_1.base_parse)(data, options);\n    return Boolean(stack.length === 1);\n}\nexports.default = valid;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeType = exports.TextNode = exports.Node = exports.valid = exports.CommentNode = exports.HTMLElement = exports.parse = void 0;\nvar comment_1 = __importDefault(require(\"./nodes/comment\"));\nexports.CommentNode = comment_1.default;\nvar html_1 = __importDefault(require(\"./nodes/html\"));\nexports.HTMLElement = html_1.default;\nvar node_1 = __importDefault(require(\"./nodes/node\"));\nexports.Node = node_1.default;\nvar text_1 = __importDefault(require(\"./nodes/text\"));\nexports.TextNode = text_1.default;\nvar type_1 = __importDefault(require(\"./nodes/type\"));\nexports.NodeType = type_1.default;\nvar parse_1 = __importDefault(require(\"./parse\"));\nvar valid_1 = __importDefault(require(\"./valid\"));\nexports.valid = valid_1.default;\nfunction parse(data, options) {\n    if (options === void 0) { options = {\n        lowerCaseTagName: false,\n        comment: false\n    }; }\n    return (0, parse_1.default)(data, options);\n}\nexports.default = parse;\nexports.parse = parse;\nparse.parse = parse_1.default;\nparse.HTMLElement = html_1.default;\nparse.CommentNode = comment_1.default;\nparse.valid = valid_1.default;\nparse.Node = node_1.default;\nparse.TextNode = text_1.default;\nparse.NodeType = type_1.default;\n", null, null, null, null, null, null, "import pug from \"pug\";\nimport { NodeHtmlMarkdown } from \"node-html-markdown\";\nimport { useForm } from \"./lib/use-form\";\nimport { DefaultForm } from \"./components/DefaultForm\";\n\nexport default () => {\n  const formProps = useForm({\n    transform: async (value: string) => {\n      const html = pug.compile(value)({});\n      return new NodeHtmlMarkdown().translate(html);\n    },\n  });\n\n  return <DefaultForm {...formProps} />;\n};\n", "import { useEffect, useState } from \"react\";\n\nexport const useForm = ({\n  transformDeps = [],\n  transform,\n}: {\n  transformDeps?: unknown[];\n  transform: (value: string) => Promise<string> | string;\n}) => {\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setOutput(await transform(input));\n      } catch (err) {\n        setOutput(\"Invalid input\");\n      }\n    })();\n  }, [input, ...transformDeps]);\n\n  return {\n    inputProps: { value: input, onChange: setInput, id: \"input\", title: \"Input\", autoFocus: true },\n    outputProps: {\n      value: output,\n      id: \"output\",\n      title: \"Output\",\n      onChange: () => {\n        //\n      },\n    },\n  };\n};\n", "import { Action, ActionPanel, Form } from \"@raycast/api\";\nimport { useForm } from \"../lib/use-form\";\n\ntype DefaultFormProps = ReturnType<typeof useForm> & {\n  actions?: React.ReactNode;\n  options?: React.ReactNode;\n  output?: React.ReactNode;\n  input?: React.ReactNode;\n};\n\nexport function DefaultForm({\n  inputProps,\n  outputProps,\n  actions: Actions,\n  options: Options,\n  output: Output,\n  input: Input,\n}: DefaultFormProps) {\n  return (\n    <Form\n      actions={\n        Actions || (\n          <ActionPanel>\n            <Action.CopyToClipboard content={outputProps.value} />\n            <Action.Paste content={outputProps.value} />\n          </ActionPanel>\n        )\n      }\n    >\n      {Input ? Input : <Form.TextArea {...inputProps} />}\n      {Options}\n      {Output ? Output : <Form.TextArea {...outputProps} />}\n    </Form>\n  );\n}\n"],
  "mappings": "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AAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,EAAE,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE,IAAz7C,EAE7BC,GAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,E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E,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,EAAE,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE,IAAz7C,EAE7BC,GAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,GAA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CkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASa,GACdd,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASc,GACdf,EACAC,EAC+B,CAC/BH,EAAO,cAAeE,EAAMC,CAAtB,CACP,CACM,SAASe,GACdhB,EACAC,EACyC,CACzCH,EAAO,wBAAyBE,EAAMC,CAAhC,CACP,CACM,SAASgB,GACdjB,EACAC,EACqC,CACrCH,EAAO,oBAAqBE,EAAMC,CAA5B,CACP,CACM,SAASiB,GACdlB,EACAC,EACqC,CACrCH,EAAO,oBAAqBE,EAAMC,CAA5B,CACP,CACM,SAASkB,GACdnB,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASmB,GACdpB,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASoB,GACdrB,EACAC,EACuC,CACvCH,EAAO,sBAAuBE,EAAMC,CAA9B,CACP,CACM,SAASqB,GACdtB,EACAC,EACwB,CACxBH,EAAO,OAAQE,EAAMC,CAAf,CACP,CACM,SAASsB,GACdvB,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASuB,GACdxB,EACAC,EACgC,CAChCH,EAAO,eAAgBE,EAAMC,CAAvB,CACP,CACM,SAASwB,GACdzB,EACAC,EACuC,CACvCH,EAAO,sBAAuBE,EAAMC,CAA9B,CACP,CACM,SAASyB,GACd1B,EACAC,EACsC,CACtCH,EAAO,qBAAsBE,EAAMC,CAA7B,CACP,CACM,SAAS0B,GACd3B,EACAC,EAC8B,CAC9BH,EAAO,aAAcE,EAAMC,CAArB,CACP,CACM,SAAS2B,GACd5B,EACAC,EAC+B,CAC/BH,EAAO,cAAeE,EAAMC,CAAtB,CACP,CACM,SAAS4B,GACd7B,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAAS6B,GACd9B,EACAC,EACiC,CACjCH,EAAO,gBAAiBE,EAAMC,CAAxB,CACP,CACM,SAAS8B,GACd/B,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAAS+B,GACdhC,EACAC,EAC+B,CAC/BH,EAAO,cAAeE,EAAMC,CAAtB,CACP,CACM,SAASgC,GACdjC,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASiC,GACdlC,EACAC,EACiC,CACjCH,EAAO,gBAAiBE,EAAMC,CAAxB,CACP,CACM,SAASkC,GACdnC,EACAC,EACqC,CACrCH,EAAO,oBAAqBE,EAAMC,CAA5B,CACP,CACM,SAASmC,GACdpC,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASoC,GACdrC,EACAC,EACiC,CACjCH,EAAO,gBAAiBE,EAAMC,CAAxB,CACP,CACM,SAASqC,GACdtC,EACAC,EAC2B,CAC3BH,EAAO,UAAWE,EAAMC,CAAlB,CACP,CACM,SAASsC,GACdvC,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASuC,GACdxC,EACAC,EACgC,CAChCH,EAAO,eAAgBE,EAAMC,CAAvB,CACP,CACM,SAASwC,GACdzC,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASyC,GACd1C,EACAC,EAC+B,CAC/BH,EAAO,cAAeE,EAAMC,CAAtB,CACP,CACM,SAAS0C,GACd3C,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAAS2C,GACd5C,EACAC,EACsC,CACtCH,EAAO,qBAAsBE,EAAMC,CAA7B,CACP,CACM,SAAS4C,GACd7C,EACAC,EAC2C,CAC3CH,EAAO,0BAA2BE,EAAMC,CAAlC,CACP,CACM,SAAS6C,GACd9C,EACAC,EAC8B,CAC9BH,EAAO,aAAcE,EAAMC,CAArB,CACP,CACM,SAAS8C,GACd/C,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAAS+C,GACdhD,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASgD,GACdjD,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASiD,GACdlD,EACAC,EACgC,CAChCH,EAAO,eAAgBE,EAAMC,CAAvB,CACP,CACM,SAASkD,GACdnD,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAASmD,GACdpD,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASoD,GACdrD,EACAC,EACuC,CACvCH,EAAO,sBAAuBE,EAAMC,CAA9B,CACP,CACM,SAASqD,GACdtD,EACAC,EACsC,CACtCH,EAAO,qBAAsBE,EAAMC,CAA7B,CACP,CACM,SAASsD,GACdvD,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASuD,GACdxD,EACAC,EACiC,CACjCH,EAAO,gBAAiBE,EAAMC,CAAxB,CACP,CACM,SAASwD,GACdzD,EACAC,EACqC,CACrCH,EAAO,oBAAqBE,EAAMC,CAA5B,CACP,CACM,SAASyD,GACd1D,EACAC,EACgC,CAChCH,EAAO,eAAgBE,EAAMC,CAAvB,CACP,CACM,SAAS0D,GACd3D,EACAC,EAC2C,CAC3CH,EAAO,0BAA2BE,EAAMC,CAAlC,CACP,CACM,SAAS2D,GACd5D,EACAC,EAC6B,CAC7BH,EAAO,YAAaE,EAAMC,CAApB,CACP,CACM,SAAS4D,GACd7D,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAAS6D,GACd9D,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAAS8D,GACd/D,EACAC,EACwC,CACxCH,EAAO,uBAAwBE,EAAMC,CAA/B,CACP,CACM,SAAS+D,GACdhE,EACAC,EAC4C,CAC5CH,EAAO,2BAA4BE,EAAMC,CAAnC,CACP,CACM,SAASgE,GACdjE,EACAC,EAC0C,CAC1CH,EAAO,yBAA0BE,EAAMC,CAAjC,CACP,CACM,SAASiE,GACdlE,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,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CACM,SAAS4K,GACd7K,EACAC,EACwB,CACxBH,EAAO,OAAQE,EAAMC,CAAf,CACP,CACM,SAAS6K,GACd9K,EACAC,EAC+B,CAC/BH,EAAO,cAAeE,EAAMC,CAAtB,CACP,CACM,SAAS8K,GACd/K,EACAC,EACyC,CACzCH,EAAO,wBAAyBE,EAAMC,CAAhC,CACP,CACM,SAAS+K,GACdhL,EACAC,EACuC,CACvCH,EAAO,sBAAuBE,EAAMC,CAA9B,CACP,CACM,SAASgL,GACdjL,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASiL,GACdlL,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAASkL,GACdnL,EACAC,EAC6B,CAC7BH,EAAO,YAAaE,EAAMC,CAApB,CACP,CACM,SAASmL,GACdpL,EACAC,EACgC,CAChCH,EAAO,eAAgBE,EAAMC,CAAvB,CACP,CACM,SAASoL,GACdrL,EACAC,EAC0C,CAC1CH,EAAO,yBAA0BE,EAAMC,CAAjC,CACP,CACM,SAASqL,GACdtL,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASsL,GACdvL,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAASuL,GACdxL,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAASwL,GACdzL,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASyL,GACd1L,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAAS0L,GACd3L,EACAC,EAC2C,CAC3CH,EAAO,0BAA2BE,EAAMC,CAAlC,CACP,CACM,SAAS2L,GACd5L,EACAC,EACwC,CACxCH,EAAO,uBAAwBE,EAAMC,CAA/B,CACP,CACM,SAAS4L,GACd7L,EACAC,EACiD,CACjDH,EAAO,gCAAiCE,EAAMC,CAAxC,CACP,CACM,SAAS6L,GACd9L,EACAC,EACuC,CACvCH,EAAO,sBAAuBE,EAAMC,CAA9B,CACP,CACM,SAAS8L,GACd/L,EACAC,EACqC,CACrCH,EAAO,oBAAqBE,EAAMC,CAA5B,CACP,CACM,SAAS+L,GACdhM,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAASgM,GACdjM,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAASiM,GACdlM,EACAC,EAC8C,CAC9CH,EAAO,6BAA8BE,EAAMC,CAArC,CACP,CACM,SAASkM,GACdnM,EACAC,EACmD,CACnDH,EAAO,kCAAmCE,EAAMC,CAA1C,CACP,CACM,SAASmM,GACdpM,EACAC,EACuC,CACvCH,EAAO,sBAAuBE,EAAMC,CAA9B,CACP,CACM,SAASoM,GACdrM,EACAC,EACqC,CACrCH,EAAO,oBAAqBE,EAAMC,CAA5B,CACP,CACM,SAASqM,GACdtM,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASsM,GACdvM,EACAC,EACgC,CAChCH,EAAO,eAAgBE,EAAMC,CAAvB,CACP,CACM,SAASuM,GACdxM,EACAC,EACoC,CACpCH,EAAO,mBAAoBE,EAAMC,CAA3B,CACP,CACM,SAASwM,GACdzM,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAASyM,GACd1M,EACAC,EACsC,CACtCH,EAAO,qBAAsBE,EAAMC,CAA7B,CACP,CACM,SAAS0M,GACd3M,EACAC,EACkC,CAClCH,EAAO,iBAAkBE,EAAMC,CAAzB,CACP,CACM,SAAS2M,GACd5M,EACAC,EACiC,CACjCH,EAAO,gBAAiBE,EAAMC,CAAxB,CACP,CACM,SAAS4M,GACd7M,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAAS6M,GACd9M,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAAS8M,GACd/M,EACAC,EACmC,CACnCH,EAAO,kBAAmBE,EAAMC,CAA1B,CACP,CACM,SAAS+M,GACdhN,EACAC,EACm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,SAAS,SAAS,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,OAAO,SAAS,OAAO,SAAS,QAAQ,SAAS,QAAQ,SAAS,MAAM,eAAe,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,MAAM,SAAS,OAAO,SAAS,MAAM,SAAS,OAAO,SAAS,MAAM,SAAS,KAAK,SAAS,MAAM,eAAe,OAAO,SAAS,MAAM,eAAe,OAAO,SAAS,MAAM,SAAS,MAAM,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,SAAS,SAAS,UAAU,SAAS,QAAQ,SAAS,WAAW,SAAS,WAAW,SAAS,SAAS,SAAS,SAAS,SAAS,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,QAAQ,SAAS,SAAS,SAAS,MAAM,SAAS,OAAO,eAAe,QAAQ,SAAS,OAAO,eAAe,OAAO,SAAS,KAAK,eAAe,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,OAAO,eAAe,QAAQ,SAAS,OAAO,SAAS,QAAQ,SAAS,OAAO,SAAS,QAAQ,SAAS,QAAQ,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,OAAO,eAAe,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,YAAY,eAAe,OAAO,SAAS,OAAO,eAAe,QAAQ,SAAS,QAAQ,eAAe,SAAS,SAAS,QAAQ,eAAe,QAAQ,SAAS,OAAO,SAAS,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,OAAO,SAAS,OAAO,SAAS,SAAS,SAAS,QAAQ,SAAS,OAAO,SAAS,SAAS,SAAS,QAAQ,SAAS,SAAS,eAAe,UAAU,SAAS,KAAK,SAAS,MAAM,eAAe,OAAO,SAAS,KAAK,SAAS,MAAM,eAAe,OAAO,SAAS,KAAK,eAAe,MAAM,SAAS,KAAK,eAAe,MAAM,eAAe,OAAO,SAAS,MAAM,SAAS,MAAM,eAAe,OAAO,SAAS,KAAK,eAAe,OAAO,eAAe,MAAM,SAAS,KAAK,eAAe,OAAO,eAAe,MAAM,SAAS,QAAQ,SAAS,OAAO,SAAS,QAAQ,SAAS,OAAO,SAAS,QAAQ,SAAS,KAAK,SAAS,OAAO,SAAS,KAAK,SAAS,OAAO,SAAS,KAAK,SAAS,MAAM,SAAS,KAAK,SAAS,MAAM,SAAS,QAAQ,SAAS,SAAS,SAAS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O,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,MAAM,YAAe,OAAO,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAO,SAAS,OAAO,SAAS,SAAS,SAAS,YAAe,MAAM,SAAS,KAAK,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,SAAS,KAAK,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,MAAM,OAAO,MAAM,SAAS,KAAK,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAO,OAAO,OAAO,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,GAAK,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,SAAS,YAAe,MAAM,OAAS,UAAU,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,SAAS,KAAK,YAAe,OAAO,OAAS,OAAO,OAAS,KAAK,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,QAAQ,OAAS,QAAQ,SAAS,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,OAAS,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,SAAS,SAAS,OAAS,MAAM,OAAS,MAAM,YAAe,OAAO,YAAe,MAAM,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,OAAO,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,OAAS,KAAK,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,SAAS,KAAK,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,SAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAO,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,MAAM,OAAS,OAAO,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,SAAS,QAAQ,OAAS,UAAU,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,SAAS,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,SAAS,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,KAAK,OAAO,QAAQ,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,UAAU,OAAS,UAAU,OAAS,KAAK,OAAS,MAAM,OAAS,KAAK,OAAS,MAAM,OAAS,OAAO,OAAS,MAAM,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,UAAU,OAAS,OAAO,OAAS,MAAM,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,QAAQ,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,QAAQ,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAA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",
  "names": ["require_acorn", "__commonJSMin", "exports", "module", "global", "factory", "reservedWords", "ecma5AndLessKeywords", "keywords", "keywordRelationalOperator", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "code", "set", "pos", "i", "isIdentifierStart", "astral", "isIdentifierChar", "TokenType", "label", "conf", "binop", "name", "prec", "beforeExpr", "startsExpr", "keywords$1", "kw", "options", "types", "lineBreak", "lineBreakG", "isNewLine", "ecma2019String", "nonASCIIwhitespace", "skipWhiteSpace", "ref", "hasOwnProperty", "toString", "has", "obj", "propName", "isArray", "wordsRegexp", "words", "Position", "line", "col", "n", "SourceLocation", "p", "start", "end", "getLineInfo", "input", "offset", "cur", "match", "defaultOptions", "getOptions", "opts", "opt", "tokens", "token", "pushComment", "array", "block", "text", "startLoc", "endLoc", "comment", "SCOPE_TOP", "SCOPE_FUNCTION", "SCOPE_VAR", "SCOPE_ASYNC", "SCOPE_GENERATOR", "SCOPE_ARROW", "SCOPE_SIMPLE_CATCH", "SCOPE_SUPER", "SCOPE_DIRECT_SUPER", "functionFlags", "async", "generator", "BIND_NONE", "BIND_VAR", "BIND_LEXICAL", "BIND_FUNCTION", "BIND_SIMPLE_CATCH", "BIND_OUTSIDE", "Parser", "startPos", "reserved", "v", "reservedStrict", "prototypeAccessors", "node", "plugins", "len", "cls", "parser", "pp", "literal", "spaceAfter", "next", "type", "tokType", "notNext", "DestructuringErrors", "refDestructuringErrors", "isAssign", "parens", "andThrow", "shorthandAssign", "doubleProto", "expr", "pp$1", "stmt", "list", "loopLabel", "switchLabel", "context", "skip", "nextCh", "ident", "topLevel", "starttype", "kind", "maybeName", "keyword", "isBreak", "lab", "awaitAt", "isLet", "init$1", "init", "isAsync", "declarationPosition", "FUNC_STATEMENT", "FUNC_HANGING_STATEMENT", "sawDefault", "isCase", "empty", "clause", "simple", "i$1", "label$1", "createNewLexicalScope", "exitStrict", "isForIn", "isFor", "decl", "FUNC_NULLABLE_ID", "statement", "allowExpressionBody", "oldYieldPos", "oldAwaitPos", "oldAwaitIdentPos", "isStatement", "oldStrict", "classBody", "hadConstructor", "element", "constructorAllowsSuper", "this$1", "method", "tryContextual", "k", "noLineBreak", "isGenerator", "key", "allowsDirectSuper", "fNode", "cNode", "spec", "pat", "prop", "list$1", "elt", "decls", "nodes", "first", "node$1", "node$2", "statements", "pp$2", "isBinding", "exprList", "last", "close", "allowEmpty", "allowTrailingComma", "elts", "rest", "elem", "param", "left", "bindingType", "checkClashes", "pp$3", "propHash", "other", "redefinition", "noIn", "afterLeftParse", "ownDestructuringErrors", "oldParenAssign", "oldTrailingComma", "leftStartPos", "leftStartLoc", "minPrec", "logical", "coalesce", "op", "right", "sawUnary", "update", "result", "base", "noCalls", "maybeAsyncArrow", "optionalChained", "chainNode", "optionalSupported", "optional", "computed", "canBeArrow", "containsEsc", "id", "value", "meta", "errorPos", "val", "innerStartPos", "innerStartLoc", "lastIsComma", "spreadStart", "innerEndPos", "innerEndLoc", "par", "item", "empty$1", "isImport", "isTagged", "curElt", "isPattern", "paramCount", "allowDirectSuper", "params", "isArrowFunction", "isMethod", "isExpression", "useStrict", "nonSimple", "oldLabels", "allowDuplicates", "nameHash", "re", "liberal", "pp$4", "message", "loc", "err", "pp$5", "Scope", "flags", "scope", "redeclared", "scope$1", "scope$2", "scope$3", "Node", "pp$6", "finishNodeAt", "TokContext", "isExpr", "preserveSpace", "override", "types$1", "pp$7", "prevType", "parent", "out", "statementParens", "index", "allowed", "ecma9BinaryProperties", "ecma10BinaryProperties", "ecma11BinaryProperties", "unicodeBinaryProperties", "unicodeGeneralCategoryValues", "ecma9ScriptValues", "ecma10ScriptValues", "ecma11ScriptValues", "unicodeScriptValues", "data", "buildUnicodeData", "ecmaVersion", "d", "pp$8", "RegExpValidationState", "pattern", "unicode", "forceU", "s", "l", "c", "ch", "codePointToString", "state", "validFlags", "flag", "lookbehind", "noError", "min", "max", "isSyntaxCharacter", "isRegExpIdentifierStart", "isRegExpIdentifierPart", "isDecimalDigit", "isControlLetter", "switchU", "lead", "leadSurrogateEnd", "trail", "isValidUnicode", "isCharacterClassEscape", "nameOrValue", "isUnicodePropertyNameCharacter", "isUnicodePropertyValueCharacter", "ch$1", "isOctalDigit", "isHexDigit", "hexToInt", "n1", "n2", "length", "Token", "pp$9", "ignoreEscapeSequenceInKeyword", "curContext", "startSkip", "loop", "next2", "size", "tokentype", "next2$1", "codePointToString$1", "str", "escaped", "inClass", "flagsStart", "radix", "maybeLegacyOctalNumericLiteral", "allowSeparators", "isLegacyOctalNumericLiteral", "total", "lastCode", "e", "stringToNumber", "stringToBigInt", "startsWithDot", "octal", "val$1", "codePos", "quote", "chunkStart", "INVALID_TEMPLATE_ESCAPE_ERROR", "position", "inTemplate", "octalStr", "word", "escStart", "esc", "version", "parse", "parseExpressionAt", "tokenizer", "require_object_assign", "__commonJSMin", "exports", "module", "getOwnPropertySymbols", "hasOwnProperty", "propIsEnumerable", "toObject", "val", "shouldUseNative", "test1", "test2", "i", "order2", "n", "test3", "letter", "target", "source", "from", "to", "symbols", "key", "require_is_expression", "__commonJSMin", "exports", "module", "acorn", "objectAssign", "isExpression", "DEFAULT_OPTIONS", "src", "options", "parser", "startSkip", "ex", "require_shams", "__commonJSMin", "exports", "module", "obj", "sym", "symObj", "symVal", "syms", "descriptor", "require_has_symbols", "__commonJSMin", "exports", "module", "origSymbol", "hasSymbolSham", "require_implementation", "__commonJSMin", "exports", "module", "ERROR_MESSAGE", "slice", "toStr", "funcType", "that", "target", "args", "bound", "binder", "result", "boundLength", "boundArgs", "i", "Empty", "require_function_bind", "__commonJSMin", "exports", "module", "implementation", "require_src", "__commonJSMin", "exports", "module", "bind", "require_get_intrinsic", "__commonJSMin", "exports", "module", "undefined", "$SyntaxError", "$Function", "$TypeError", "getEvalledConstructor", "expressionSyntax", "$gOPD", "throwTypeError", "ThrowTypeError", "hasSymbols", "getProto", "x", "needsEval", "TypedArray", "INTRINSICS", "doEval", "name", "value", "fn", "gen", "LEGACY_ALIASES", "bind", "hasOwn", "$concat", "$spliceApply", "$replace", "$strSlice", "$exec", "rePropName", "reEscapeChar", "stringToPath", "string", "first", "last", "result", "match", "number", "quote", "subString", "getBaseIntrinsic", "allowMissing", "intrinsicName", "alias", "parts", "intrinsicBaseName", "intrinsic", "intrinsicRealName", "skipFurtherCaching", "i", "isOwn", "part", "desc", "require_call_bind", "__commonJSMin", "exports", "module", "bind", "GetIntrinsic", "$apply", "$call", "$reflectApply", "$gOPD", "$defineProperty", "$max", "originalFunction", "func", "desc", "applyBind", "require_callBound", "__commonJSMin", "exports", "module", "GetIntrinsic", "callBind", "$indexOf", "name", "allowMissing", "intrinsic", "require_shams", "__commonJSMin", "exports", "module", "hasSymbols", "require_is_regex", "__commonJSMin", "exports", "module", "callBound", "hasToStringTag", "has", "$exec", "isRegexMarker", "badStringifier", "throwRegexMarker", "$toString", "gOPD", "regexClass", "value", "descriptor", "hasLastIndexDataProperty", "e", "require_character_parser", "__commonJSMin", "exports", "module", "objIsRegex", "parse", "TOKEN_TYPES", "BRACKETS", "BRACKETS_REVERSED", "src", "state", "options", "start", "end", "index", "parseChar", "ex", "parseUntil", "delimiter", "matches", "err", "character", "wasComment", "lastChar", "isRegexp", "State", "opts", "str", "matcher", "i", "isPunctuator", "c", "code", "isKeyword", "id", "history", "require_pug_error", "__commonJSMin", "exports", "module", "makeError", "code", "message", "options", "line", "column", "filename", "src", "fullMessage", "location", "lines", "start", "end", "context", "text", "i", "curr", "preamble", "out", "err", "require_pug_lexer", "__commonJSMin", "exports", "module", "assert", "isExpression", "characterParser", "error", "lex", "Lexer", "str", "options", "lexer", "code", "message", "err", "value", "exp", "noThrow", "ex", "msg", "res", "type", "val", "tok", "increment", "len", "regexp", "captures", "diff", "whitespaceLength", "whitespace", "newInput", "skip", "start", "end", "range", "idx", "tmp", "nextNewline", "ptr", "re", "i", "match", "splitted", "lines", "name", "opts", "inInclude", "node", "prefix", "escaped", "indexOfEnd", "indexOfStart", "indexOfEscaped", "matchOfStringInterp", "indexOfStringInterp", "child", "interpolated", "before", "rest", "comment", "parser", "js", "flags", "shortened", "parsed", "consumed", "quote", "quoteRe", "key", "valueResponse", "done", "x", "escapeAttr", "state", "col", "line", "isNotPunctuator", "isQuote", "isColon", "isSpreadOperator", "index", "args", "indents", "outdent_count", "pipelessText", "tokens", "token_indent", "isMatch", "stringPtr", "lineCaptures", "lineIndents", "token", "func", "pluginArgs", "plugin", "require_pug_strip_comments", "__commonJSMin", "exports", "module", "error", "stripComments", "unexpectedToken", "type", "occasion", "filename", "line", "msg", "input", "options", "stripUnbuffered", "stripBuffered", "out", "inComment", "inPipelessText", "tok", "require_token_stream", "__commonJSMin", "exports", "module", "TokenStream", "tokens", "index", "token", "require_inline_tags", "__commonJSMin", "exports", "module", "require_pug_parser", "__commonJSMin", "exports", "module", "assert", "TokenStream", "error", "inlineTags", "parse", "Parser", "tokens", "options", "parser", "ast", "code", "message", "token", "err", "n", "block", "expr", "type", "line", "nodes", "context", "tok", "rest", "pluginContext", "plugin", "pluginResult", "tags", "lineno", "nextTok", "loop", "nextType", "currentNode", "text", "node", "noBlock", "column", "body", "attrs", "textToken", "path", "filters", "name", "args", "mixin", "tag", "seenAttrs", "attributeNames", "selfClosingAllowed", "out", "i", "len", "require_pug_walk", "__commonJSMin", "exports", "module", "walkAST", "ast", "before", "after", "options", "parents", "replace", "replacement", "result", "walkAndMergeNodes", "nodes", "node", "require_pug_load", "__commonJSMin", "exports", "module", "fs", "path", "walk", "assign", "load", "ast", "options", "getOptions", "node", "file", "str", "raw", "ex", "src", "tokens", "filename", "source", "require_raw", "__commonJSMin", "exports", "module", "domain", "hasSetImmediate", "rawAsap", "task", "queue", "requestFlush", "flushing", "index", "capacity", "flush", "currentIndex", "scan", "newLength", "parentDomain", "require_core", "__commonJSMin", "exports", "module", "asap", "noop", "LAST_ERROR", "IS_ERROR", "getThen", "obj", "ex", "tryCallOne", "fn", "a", "tryCallTwo", "b", "Promise", "doResolve", "onFulfilled", "onRejected", "safeThen", "res", "handle", "Handler", "self", "resolve", "reject", "deferred", "handleResolved", "cb", "ret", "newValue", "then", "finale", "i", "promise", "done", "value", "reason", "require_done", "__commonJSMin", "exports", "module", "Promise", "onFulfilled", "onRejected", "self", "err", "require_finally", "__commonJSMin", "exports", "module", "Promise", "f", "value", "err", "require_es6_extensions", "__commonJSMin", "exports", "module", "Promise", "TRUE", "valuePromise", "FALSE", "NULL", "UNDEFINED", "ZERO", "EMPTYSTRING", "value", "p", "then", "ex", "resolve", "reject", "arr", "args", "remaining", "res", "i", "val", "values", "onRejected", "require_asap", "__commonJSMin", "exports", "module", "rawAsap", "freeTasks", "asap", "task", "rawTask", "RawTask", "threw", "require_node_extensions", "__commonJSMin", "exports", "module", "Promise", "asap", "fn", "argumentCount", "denodeifyWithCount", "denodeifyWithoutCount", "callbackFn", "args", "body", "fnLength", "_", "index", "callback", "ctx", "ex", "resolve", "reject", "value", "err", "require_synchronous", "__commonJSMin", "exports", "module", "Promise", "require_lib", "__commonJSMin", "exports", "module", "require_promise", "__commonJSMin", "exports", "module", "require_is_promise", "__commonJSMin", "exports", "module", "isPromise", "obj", "require_jstransformer", "__commonJSMin", "exports", "module", "fs", "assert", "Promise", "isPromise", "tr", "transformer", "Transformer", "normalizeFn", "normalizeFnAsync", "normalize", "normalizeAsync", "result", "cb", "fn", "body", "method", "fallbacks", "str", "options", "_this", "locals", "filename", "compiled", "require_homedir", "__commonJSMin", "exports", "module", "os", "home", "user", "require_caller", "__commonJSMin", "exports", "module", "origPrepareStackTrace", "_", "stack", "require_path_parse", "__commonJSMin", "exports", "module", "isWindows", "splitWindowsRe", "win32", "win32SplitPath", "filename", "pathString", "allParts", "splitPathRe", "posix", "posixSplitPath", "require_node_modules_paths", "__commonJSMin", "exports", "module", "path", "parse", "getNodeModulesDirs", "absoluteStart", "modules", "prefix", "paths", "parsed", "dirs", "aPath", "moduleDir", "start", "opts", "request", "require_normalize_options", "__commonJSMin", "exports", "module", "x", "opts", "require_core", "__commonJSMin", "exports", "module", "require_is_core_module", "__commonJSMin", "exports", "module", "has", "specifierIncluded", "current", "specifier", "nodeParts", "parts", "op", "versionParts", "i", "cur", "ver", "matchesRange", "range", "specifiers", "versionIncluded", "nodeVersion", "specifierValue", "data", "x", "require_async", "__commonJSMin", "exports", "module", "fs", "getHomedir", "path", "caller", "nodeModulesPaths", "normalizeOptions", "isCore", "realpathFS", "homedir", "defaultPaths", "defaultIsFile", "file", "cb", "err", "stat", "defaultIsDir", "dir", "defaultRealpath", "x", "realpathErr", "realPath", "maybeRealpath", "realpath", "opts", "defaultReadPackage", "readFile", "pkgfile", "readFileErr", "body", "pkg", "getPackageCandidates", "start", "dirs", "i", "options", "callback", "isFile", "isDirectory", "readPackage", "conflictErr", "packageIterator", "extensions", "includeCoreModules", "basedir", "parent", "absoluteStart", "realStart", "init", "res", "loadAsDirectory", "onfile", "loadAsFile", "loadNodeModules", "n", "realN", "moduleError", "m", "d", "realD", "thePackage", "loadAsFilePackage", "exts", "load", "loadPackage", "onpkg", "loadpkg", "pkg_", "rfile", "rel", "r", "onex", "ex", "unwrapErr", "pkgdir", "pkgParam", "loadAsDirectoryPackage", "fpkg", "mainError", "processDirs", "isdir", "ondir", "thunk", "require_core", "__commonJSMin", "exports", "module", "require_core", "__commonJSMin", "exports", "module", "current", "specifierIncluded", "specifier", "parts", "op", "versionParts", "i", "cur", "ver", "matchesRange", "range", "specifiers", "versionIncluded", "specifierValue", "data", "core", "mod", "require_is_core", "__commonJSMin", "exports", "module", "isCoreModule", "x", "require_sync", "__commonJSMin", "exports", "module", "isCore", "fs", "path", "getHomedir", "caller", "nodeModulesPaths", "normalizeOptions", "realpathFS", "homedir", "defaultPaths", "defaultIsFile", "file", "stat", "e", "defaultIsDir", "dir", "defaultRealpathSync", "x", "realpathErr", "maybeRealpathSync", "realpathSync", "opts", "defaultReadPackageSync", "readFileSync", "pkgfile", "body", "pkg", "getPackageCandidates", "start", "dirs", "i", "options", "isFile", "isDirectory", "readPackageSync", "packageIterator", "extensions", "includeCoreModules", "basedir", "parent", "absoluteStart", "res", "m", "loadAsFileSync", "loadAsDirectorySync", "n", "loadNodeModulesSync", "err", "loadpkg", "rfile", "r", "mainError", "thunk", "require_resolve", "__commonJSMin", "exports", "module", "async", "require_run_filter", "__commonJSMin", "exports", "module", "jstransformer", "resolve", "filter", "getMinifyTransformerName", "outputFormat", "name", "str", "options", "currentDirectory", "funcName", "trPath", "err", "tr", "result", "minifyTranformer", "Position", "constructor", "line", "col", "index", "column", "SourceLocation", "start", "end", "filename", "identifierName", "createPositionWithColumnOffset", "position", "columnOffset", "ParseErrorCode", "reflect", "keys", "last", "length", "get", "reduce", "object", "key", "set", "value", "item", "i", "instantiate", "properties", "descriptors", "Object", "map", "filter", "descriptor", "enumerable", "split", "instance", "defineProperty", "configurable", "assign", "ModuleErrors", "ImportMetaOutsideModule", "message", "code", "SourceTypeModuleError", "ImportOutsideModule", "NodeDescriptions", "ArrayPattern", "AssignmentExpression", "AssignmentPattern", "ArrowFunctionExpression", "ConditionalExpression", "CatchClause", "ForOfStatement", "ForInStatement", "ForStatement", "FormalParameters", "Identifier", "ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ObjectPattern", "ParenthesizedExpression", "RestElement", "UpdateExpression", "true", "false", "VariableDeclarator", "YieldExpression", "toNodeDescription", "type", "prefix", "String", "StandardErrors", "AccessorIsGenerator", "kind", "ArgumentsInClass", "AsyncFunctionInSingleStatementContext", "AwaitBindingIdentifier", "AwaitBindingIdentifierInStaticBlock", "AwaitExpressionFormalParameter", "AwaitNotInAsyncContext", "AwaitNotInAsyncFunction", "BadGetterArity", "BadSetterArity", "BadSetterRestParameter", "ConstructorClassField", "ConstructorClassPrivateField", "ConstructorIsAccessor", "ConstructorIsAsync", "ConstructorIsGenerator", "DeclarationMissingInitializer", "DecoratorArgumentsOutsideParentheses", "DecoratorBeforeExport", "DecoratorConstructor", "DecoratorExportClass", "DecoratorSemicolon", "DecoratorStaticBlock", "DeletePrivateField", "DestructureNamedImport", "DuplicateConstructor", "DuplicateDefaultExport", "DuplicateExport", "exportName", "DuplicateProto", "DuplicateRegExpFlags", "ElementAfterRest", "EscapedCharNotAnIdentifier", "ExportBindingIsString", "localName", "ExportDefaultFromAsIdentifier", "ForInOfLoopInitializer", "ForOfAsync", "ForOfLet", "GeneratorInSingleStatementContext", "IllegalBreakContinue", "IllegalLanguageModeDirective", "IllegalReturn", "ImportBindingIsString", "importName", "ImportCallArgumentTrailingComma", "ImportCallArity", "maxArgumentCount", "ImportCallNotNewExpression", "ImportCallSpreadArgument", "ImportJSONBindingNotDefault", "IncompatibleRegExpUVFlags", "InvalidBigIntLiteral", "InvalidCodePoint", "InvalidCoverInitializedName", "InvalidDecimal", "InvalidDigit", "radix", "InvalidEscapeSequence", "InvalidEscapeSequenceTemplate", "InvalidEscapedReservedWord", "reservedWord", "InvalidIdentifier", "InvalidLhs", "ancestor", "InvalidLhsBinding", "InvalidNumber", "InvalidOrMissingExponent", "InvalidOrUnexpectedToken", "unexpected", "InvalidParenthesizedAssignment", "InvalidPrivateFieldResolution", "InvalidPropertyBindingPattern", "InvalidRecordProperty", "InvalidRestAssignmentPattern", "LabelRedeclaration", "labelName", "LetInLexicalBinding", "LineTerminatorBeforeArrow", "MalformedRegExpFlags", "MissingClassName", "MissingEqInAssignment", "MissingSemicolon", "MissingPlugin", "missingPlugin", "name", "JSON", "stringify", "join", "MissingOneOfPlugins", "MissingUnicodeEscape", "MixingCoalesceWithLogical", "ModuleAttributeDifferentFromType", "ModuleAttributeInvalidValue", "ModuleAttributesWithDuplicateKeys", "ModuleExportNameHasLoneSurrogate", "surrogateCharCode", "toString", "ModuleExportUndefined", "MultipleDefaultsInSwitch", "NewlineAfterThrow", "NoCatchOrFinally", "NumberIdentifier", "NumericSeparatorInEscapeSequence", "ObsoleteAwaitStar", "OptionalChainingNoNew", "OptionalChainingNoTemplate", "OverrideOnConstructor", "ParamDupe", "PatternHasAccessor", "PatternHasMethod", "PrivateInExpectedIn", "PrivateNameRedeclaration", "RecordExpressionBarIncorrectEndSyntaxType", "RecordExpressionBarIncorrectStartSyntaxType", "RecordExpressionHashIncorrectStartSyntaxType", "RecordNoProto", "RestTrailingComma", "SloppyFunction", "StaticPrototype", "SuperNotAllowed", "SuperPrivateField", "TrailingDecorator", "TupleExpressionBarIncorrectEndSyntaxType", "TupleExpressionBarIncorrectStartSyntaxType", "TupleExpressionHashIncorrectStartSyntaxType", "UnexpectedArgumentPlaceholder", "UnexpectedAwaitAfterPipelineBody", "UnexpectedDigitAfterHash", "UnexpectedImportExport", "UnexpectedKeyword", "keyword", "UnexpectedLeadingDecorator", "UnexpectedLexicalDeclaration", "UnexpectedNewTarget", "UnexpectedNumericSeparator", "UnexpectedPrivateField", "UnexpectedReservedWord", "UnexpectedSuper", "UnexpectedToken", "expected", "UnexpectedTokenUnaryExponentiation", "UnsupportedBind", "UnsupportedDecoratorExport", "UnsupportedDefaultExport", "UnsupportedImport", "UnsupportedMetaProperty", "target", "onlyValidPropertyName", "UnsupportedParameterDecorator", "UnsupportedPropertyDecorator", "UnsupportedSuper", "UnterminatedComment", "UnterminatedRegExp", "UnterminatedString", "UnterminatedTemplate", "VarRedeclaration", "YieldBindingIdentifier", "YieldInParameter", "ZeroDigitNumericSeparator", "StrictModeErrors", "StrictDelete", "StrictEvalArguments", "referenceName", "StrictEvalArgumentsBinding", "bindingName", "StrictFunction", "StrictNumericEscape", "StrictOctalLiteral", "StrictWith", "UnparenthesizedPipeBodyDescriptions", "Set", "PipelineOperatorErrors", "PipeBodyIsTighter", "PipeTopicRequiresHackPipes", "PipeTopicUnbound", "PipeTopicUnconfiguredToken", "token", "PipeTopicUnused", "PipeUnparenthesizedBody", "PipelineBodyNoArrow", "PipelineBodySequenceExpression", "PipelineHeadSequenceExpression", "PipelineTopicUnused", "PrimaryTopicNotAllowed", "PrimaryTopicRequiresSmartPipeline", "toParseErrorConstructor", "_ref", "toMessage", "_objectWithoutPropertiesLoose", "_excluded", "loc", "details", "SyntaxError", "clone", "overrides", "pos", "ParseErrorEnum", "argument", "syntaxPlugin", "Array", "isArray", "parseErrorTemplates", "ParseErrorConstructors", "reasonCode", "template", "_ref2", "rest", "_excluded2", "Errors", "toUnenumerable", "toESTreeLocation", "node", "estree", "superClass", "parse", "file", "options", "tokens", "parseRegExpLiteral", "pattern", "flags", "regex", "RegExp", "estreeParseLiteral", "parseBigIntLiteral", "bigInt", "BigInt", "bigint", "parseDecimalLiteral", "decimal", "parseLiteral", "parseStringLiteral", "parseNumericLiteral", "parseNullLiteral", "parseBooleanLiteral", "directiveToStmt", "directive", "expression", "raw", "extra", "expressionValue", "stmt", "rawValue", "initFunction", "isAsync", "checkDeclaration", "isObjectProperty", "getObjectOrClassMethodParams", "method", "params", "isValidDirective", "_stmt$expression$extr", "parenthesized", "parseBlockBody", "allowDirectives", "topLevel", "afterBlockParse", "directiveStatements", "directives", "d", "body", "concat", "pushClassMethod", "classBody", "isGenerator", "isConstructor", "allowsDirectSuper", "parseMethod", "typeParameters", "push", "parsePrivateName", "getPluginOption", "convertPrivateNameToPrivateIdentifier", "getPrivateNameSV", "id", "isPrivateName", "parseFunctionBody", "allowExpression", "isMethod", "allowDirectSuper", "inClassScope", "funcNode", "startNode", "computed", "finishNode", "parseClassProperty", "args", "propertyNode", "parseClassPrivateProperty", "parseObjectMethod", "prop", "isPattern", "isAccessor", "shorthand", "parseObjectProperty", "startPos", "startLoc", "refExpressionErrors", "isValidLVal", "isUnparenthesizedInAssign", "binding", "isAssignable", "isBinding", "toAssignable", "isLHS", "classScope", "usePrivateName", "toAssignableObjectExpressionProp", "isLast", "raise", "at", "finishCallExpression", "unfinished", "optional", "callee", "source", "arguments", "hasPlugin", "_node$arguments$", "attributes", "toReferencedArguments", "parseExport", "exported", "specifiers", "parseSubscript", "base", "noCalls", "state", "optionalChainMember", "substring", "stop", "chain", "startNodeAtNode", "hasPropertyAsPrivateName", "isOptionalChain", "isObjectMethod", "finishNodeAt", "endLoc", "resetStartLocation", "resetEndLocation", "lastTokEndLoc", "TokContext", "preserveSpace", "types", "brace", "j_oTag", "j_cTag", "j_expr", "beforeExpr", "startsExpr", "isLoop", "isAssign", "postfix", "ExportedTokenType", "label", "conf", "rightAssociative", "binop", "updateContext", "keywords", "Map", "createKeyword", "createToken", "createBinop", "tokenTypeCounter", "tokenTypes", "tokenLabels", "tokenBinops", "tokenBeforeExprs", "tokenStartsExprs", "tokenPrefixes", "_options$binop", "_options$beforeExpr", "_options$startsExpr", "_options$prefix", "createKeywordLike", "_options$binop2", "_options$beforeExpr2", "_options$startsExpr2", "_options$prefix2", "tt", "bracketL", "bracketHashL", "bracketBarL", "bracketR", "bracketBarR", "braceL", "braceBarL", "braceHashL", "braceR", "braceBarR", "parenL", "parenR", "comma", "semi", "colon", "doubleColon", "dot", "question", "questionDot", "arrow", "ellipsis", "backQuote", "dollarBraceL", "templateTail", "templateNonTail", "hash", "interpreterDirective", "eq", "slashAssign", "xorAssign", "moduloAssign", "incDec", "bang", "tilde", "doubleCaret", "doubleAt", "pipeline", "nullishCoalescing", "logicalOR", "logicalAND", "bitwiseOR", "bitwiseXOR", "bitwiseAND", "equality", "lt", "gt", "relational", "bitShift", "bitShiftL", "bitShiftR", "plusMin", "modulo", "star", "slash", "exponent", "_in", "_instanceof", "_break", "_case", "_catch", "_continue", "_debugger", "_default", "_else", "_finally", "_function", "_if", "_return", "_switch", "_throw", "_try", "_var", "_const", "_with", "_new", "_this", "_super", "_class", "_extends", "_export", "_import", "_null", "_true", "_false", "_typeof", "_void", "_delete", "_do", "_for", "_while", "_as", "_assert", "_async", "_await", "_from", "_get", "_let", "_meta", "_of", "_sent", "_set", "_static", "_yield", "_asserts", "_checks", "_exports", "_global", "_implements", "_intrinsic", "_infer", "_is", "_mixins", "_proto", "_require", "_keyof", "_readonly", "_unique", "_abstract", "_declare", "_enum", "_module", "_namespace", "_interface", "_type", "_opaque", "string", "num", "regexp", "privateName", "eof", "jsxName", "jsxText", "jsxTagStart", "jsxTagEnd", "placeholder", "tokenIsIdentifier", "tokenKeywordOrIdentifierIsKeyword", "tokenIsKeywordOrIdentifier", "tokenIsLiteralPropertyName", "tokenComesBeforeExpression", "tokenCanStartExpression", "tokenIsAssignment", "tokenIsFlowInterfaceOrTypeOrOpaque", "tokenIsLoop", "tokenIsKeyword", "tokenIsOperator", "tokenIsPostfix", "tokenIsPrefix", "tokenIsTSTypeOperator", "tokenIsTSDeclarationStart", "tokenLabelName", "tokenOperatorPrecedence", "tokenIsRightAssociative", "tokenIsTemplate", "getExportedToken", "context", "pop", "tc", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "isIdentifierStart", "test", "fromCharCode", "isIdentifierChar", "reservedWords", "strict", "strictBind", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "isIteratorStart", "current", "next", "next2", "reservedWordLikeSet", "canBeReservedWord", "SCOPE_OTHER", "SCOPE_PROGRAM", "SCOPE_FUNCTION", "SCOPE_ARROW", "SCOPE_SIMPLE_CATCH", "SCOPE_SUPER", "SCOPE_DIRECT_SUPER", "SCOPE_CLASS", "SCOPE_STATIC_BLOCK", "SCOPE_TS_MODULE", "SCOPE_VAR", "BIND_KIND_VALUE", "BIND_KIND_TYPE", "BIND_SCOPE_VAR", "BIND_SCOPE_LEXICAL", "BIND_SCOPE_FUNCTION", "BIND_FLAGS_NONE", "BIND_FLAGS_CLASS", "BIND_FLAGS_TS_ENUM", "BIND_FLAGS_TS_CONST_ENUM", "BIND_FLAGS_TS_EXPORT_ONLY", "BIND_FLAGS_FLOW_DECLARE_FN", "BIND_FLAGS_TS_IMPORT", "BIND_CLASS", "BIND_LEXICAL", "BIND_VAR", "BIND_FUNCTION", "BIND_TS_INTERFACE", "BIND_TS_TYPE", "BIND_TS_ENUM", "BIND_TS_AMBIENT", "BIND_NONE", "BIND_OUTSIDE", "BIND_TS_CONST_ENUM", "BIND_TS_NAMESPACE", "BIND_TS_TYPE_IMPORT", "BIND_FLOW_DECLARE_FN", "CLASS_ELEMENT_FLAG_STATIC", "CLASS_ELEMENT_KIND_GETTER", "CLASS_ELEMENT_KIND_SETTER", "CLASS_ELEMENT_KIND_ACCESSOR", "CLASS_ELEMENT_STATIC_GETTER", "CLASS_ELEMENT_STATIC_SETTER", "CLASS_ELEMENT_INSTANCE_GETTER", "CLASS_ELEMENT_INSTANCE_SETTER", "CLASS_ELEMENT_OTHER", "Scope", "var", "lexical", "functions", "ScopeHandler", "parser", "scopeStack", "undefinedExports", "inFunction", "currentVarScopeFlags", "allowSuper", "currentThisScopeFlags", "inClass", "inClassAndNotInNonArrowFunction", "inStaticBlock", "inNonArrowFunction", "treatFunctionsAsVar", "treatFunctionsAsVarInScope", "currentScope", "createScope", "enter", "exit", "scope", "declareName", "bindingType", "checkRedeclarationInScope", "add", "maybeExportDefined", "delete", "isRedeclaredInScope", "values", "checkLocalExport", "topLevelScope", "FlowScope", "declareFunctions", "FlowScopeHandler", "BaseParser", "sawUnambiguousESM", "ambiguousScriptDifferentAst", "pluginConfig", "plugins", "pluginName", "pluginOptions", "actualOptions", "plugin", "_this$plugins$get", "setTrailingComments", "comments", "trailingComments", "undefined", "unshift", "setLeadingComments", "leadingComments", "setInnerComments", "innerComments", "adjustInnerComments", "elements", "commentWS", "lastElement", "CommentsParser", "addComment", "comment", "processComment", "commentStack", "commentStackLength", "lastCommentWS", "leadingNode", "nodeStart", "commentEnd", "containingNode", "finalizeComment", "splice", "trailingNode", "commentStart", "input", "charCodeAt", "finalizeRemainingComments", "resetPreviousNodeTrailingComments", "takeSurroundingComments", "lineBreak", "lineBreakG", "isNewLine", "skipWhiteSpace", "skipWhiteSpaceInLine", "skipWhiteSpaceToLineBreak", "isWhitespace", "State", "curLine", "lineStart", "errors", "potentialArrowAt", "noArrowAt", "noArrowParamsConversionAt", "maybeInArrowParameters", "inType", "noAnonFunctionType", "hasFlowComment", "isAmbientContext", "inAbstractClass", "inDisallowConditionalTypesContext", "topicContext", "maxNumOfResolvableTopics", "maxTopicIndex", "soloAwait", "inFSharpPipelineDirectBody", "labels", "decoratorStack", "lastTokStartLoc", "lastTokStart", "ct", "canStartJSXElement", "containsEsc", "strictErrors", "tokensLength", "init", "strictMode", "sourceType", "startLine", "startColumn", "curPosition", "skipArrays", "val", "slice", "forbiddenNumericSeparatorSiblings", "decBinOct", "hex", "isAllowedNumericSeparatorSibling", "bin", "ch", "oct", "dec", "readStringContents", "initialPos", "initialLineStart", "initialCurLine", "out", "containsInvalid", "chunkStart", "unterminated", "isStringEnd", "escaped", "readEscapedChar", "str", "inTemplate", "throwOnInvalid", "res", "readHexChar", "readCodePoint", "fromCodePoint", "strictNumericEscape", "octalStr", "match", "octal", "parseInt", "len", "forceLen", "n", "readInt", "invalidEscapeSequence", "allowNumSeparator", "forbiddenSiblings", "isAllowedSibling", "invalid", "total", "e", "Infinity", "prev", "Number", "isNaN", "unexpectedNumericSeparator", "numericSeparatorInEscapeSequence", "_isDigit", "invalidDigit", "indexOf", "invalidCodePoint", "buildPosition", "VALID_REGEX_FLAGS", "Token", "Tokenizer", "isLookahead", "errorHandlers_readInt", "errorRecovery", "errorBuilder", "errorHandlers_readCodePoint", "errorHandlers_readStringContents_string", "recordStrictModeErrors", "errorHandlers_readStringContents_template", "pushToken", "checkKeywordEscapes", "nextToken", "eat", "createLookaheadState", "curContext", "lookahead", "old", "curr", "nextTokenStart", "nextTokenStartSince", "lastIndex", "lookaheadCharCode", "codePointAtPos", "cp", "trail", "setStrict", "forEach", "toParseError", "clear", "skipSpace", "finishToken", "getTokenFromCode", "skipBlockComment", "skipLineComment", "startSkip", "spaceStart", "loop", "attachComment", "commentWhitespace", "prevType", "replaceToken", "readToken_numberSign", "readToken_interpreter", "nextPos", "expectPlugin", "readWord1", "finishOp", "readToken_dot", "readNumber", "readToken_slash", "readToken_mult_modulo", "width", "readToken_pipe_amp", "readToken_caret", "proposal", "topicToken", "codePointAt", "readToken_atSign", "readToken_plus_min", "readToken_lt", "readToken_gt", "size", "readToken_eq_excl", "readToken_question", "readTemplateToken", "readRadixNumber", "readString", "readWord", "readRegexp", "content", "mods", "char", "includes", "isBigInt", "replace", "startsWithDot", "isFloat", "isDecimal", "hasExponent", "isOctal", "hasLeadingZero", "integer", "underscorePos", "parseFloat", "quote", "readTemplateContinuation", "opening", "firstCode", "escStart", "identifierCheck", "esc", "keywordTypes", "raiseProperties", "error", "raiseOverwrite", "expectOnePlugin", "pluginNames", "some", "ClassScope", "privateNames", "loneAccessors", "undefinedPrivateNames", "ClassScopeHandler", "stack", "oldClassScope", "from", "declarePrivateName", "elementType", "redefined", "accessor", "oldStatic", "newStatic", "oldKind", "newKind", "kExpression", "kMaybeArrowParameterDeclaration", "kMaybeAsyncArrowParameterDeclaration", "kParameterDeclaration", "ExpressionScope", "canBeArrowParameterDeclaration", "isCertainlyParameterDeclaration", "ArrowHeadParsingScope", "declarationErrors", "recordDeclarationError", "ParsingErrorClass", "clearDeclarationError", "iterateErrors", "iterator", "ExpressionScopeHandler", "recordParameterInitializerError", "origin", "recordArrowParemeterBindingError", "recordAsyncArrowParametersError", "validateAsPattern", "newParameterDeclarationScope", "newArrowHeadScope", "newAsyncArrowScope", "newExpressionScope", "PARAM", "PARAM_YIELD", "PARAM_AWAIT", "PARAM_RETURN", "PARAM_IN", "ProductionParameterHandler", "stacks", "currentFlags", "hasAwait", "hasYield", "hasReturn", "hasIn", "functionFlags", "UtilParser", "addExtra", "isContextual", "isUnparsedContextual", "nameStart", "nameEnd", "nextCh", "isLookaheadContextual", "eatContextual", "expectContextual", "canInsertSemicolon", "hasPrecedingLineBreak", "hasFollowingLineBreak", "isLineTerminator", "semicolon", "allowAsi", "expect", "tryParse", "fn", "oldState", "abortSignal", "failState", "thrown", "aborted", "checkExpressionErrors", "andThrow", "shorthandAssignLoc", "doubleProtoLoc", "privateKeyLoc", "optionalParametersLoc", "hasErrors", "isLiteralPropertyName", "property", "initializeScopes", "oldLabels", "oldExportedIdentifiers", "exportedIdentifiers", "oldInModule", "oldScope", "getScopeHandler", "oldProdParam", "prodParam", "oldExpressionScope", "expressionScope", "enterInitialScopes", "paramFlags", "checkDestructuringPrivate", "ExpressionErrors", "Node", "ranges", "range", "NodePrototype", "prototype", "__clone", "newNode", "clonePlaceholder", "cloneIdentifier", "cloned", "create", "expectedNode", "cloneStringLiteral", "NodeUtils", "startNodeAt", "resetStartLocationFromNode", "locationNode", "reservedTypes", "FlowErrors", "AmbiguousConditionalArrow", "AmbiguousDeclareModuleKind", "AssignReservedType", "reservedType", "DeclareClassElement", "DeclareClassFieldInitializer", "DuplicateDeclareModuleExports", "EnumBooleanMemberNotInitialized", "memberName", "enumName", "EnumDuplicateMemberName", "EnumInconsistentMemberValues", "EnumInvalidExplicitType", "invalidEnumType", "EnumInvalidExplicitTypeUnknownSupplied", "EnumInvalidMemberInitializerPrimaryType", "explicitType", "EnumInvalidMemberInitializerSymbolType", "EnumInvalidMemberInitializerUnknownType", "EnumInvalidMemberName", "suggestion", "EnumNumberMemberNotInitialized", "EnumStringMemberInconsistentlyInitailized", "GetterMayNotHaveThisParam", "ImportTypeShorthandOnlyInPureImport", "InexactInsideExact", "InexactInsideNonObject", "InexactVariance", "InvalidNonTypeImportInDeclareModule", "MissingTypeParamDefault", "NestedDeclareModule", "NestedFlowComment", "PatternIsOptional", "SetterMayNotHaveThisParam", "SpreadVariance", "ThisParamAnnotationRequired", "ThisParamBannedInConstructor", "ThisParamMayNotBeOptional", "ThisParamMustBeFirst", "ThisParamNoDefault", "TypeBeforeInitializer", "TypeCastInPattern", "UnexpectedExplicitInexactInObject", "UnexpectedReservedType", "UnexpectedReservedUnderscore", "UnexpectedSpaceBetweenModuloChecks", "UnexpectedSpreadType", "UnexpectedSubtractionOperand", "UnexpectedTokenAfterTypeParameter", "UnexpectedTypeParameterBeforeAsyncArrowFunction", "UnsupportedDeclareExportKind", "unsupportedExportKind", "UnsupportedStatementInDeclareModule", "UnterminatedFlowComment", "isEsModuleType", "bodyElement", "declaration", "hasTypeImportKind", "importKind", "isMaybeDefaultImport", "exportSuggestions", "const", "let", "interface", "partition", "list", "list1", "list2", "FLOW_PRAGMA_REGEX", "flow", "flowPragma", "shouldParseTypes", "shouldParseEnums", "matches", "exec", "Error", "flowParseTypeInitialiser", "tok", "oldInType", "flowParseType", "flowParsePredicate", "moduloLoc", "parseExpression", "flowParseTypeAndPredicateInitialiser", "predicate", "flowParseDeclareClass", "flowParseInterfaceish", "flowParseDeclareFunction", "parseIdentifier", "typeNode", "typeContainer", "flowParseTypeParameterDeclaration", "tmp", "flowParseFunctionTypeParams", "this", "returnType", "typeAnnotation", "flowParseDeclare", "insideModule", "flowParseDeclareVariable", "flowParseDeclareModuleExports", "flowParseDeclareModule", "flowParseDeclareTypeAlias", "flowParseDeclareOpaqueType", "flowParseDeclareInterface", "flowParseDeclareExportDeclaration", "flowParseTypeAnnotatableIdentifier", "parseExprAtom", "bodyNode", "parseImport", "hasModuleExport", "default", "isLet", "exportKind", "flowParseTypeAnnotation", "finished", "flowParseTypeAlias", "flowParseOpaqueType", "isClass", "flowParseRestrictedIdentifier", "extends", "implements", "mixins", "flowParseInterfaceExtends", "flowParseObjectType", "allowStatic", "allowExact", "allowSpread", "allowProto", "allowInexact", "flowParseQualifiedTypeIdentifier", "flowParseTypeParameterInstantiation", "flowParseInterface", "checkNotUnderscore", "checkReservedType", "liberal", "right", "declare", "supertype", "impltype", "flowParseTypeParameter", "requireDefault", "nodeStartLoc", "variance", "flowParseVariance", "ident", "bound", "defaultRequired", "typeParameter", "oldNoAnonFunctionType", "flowParseTypeParameterInstantiationCallOrNew", "flowParseTypeOrImplicitInstantiation", "flowParseInterfaceType", "flowParseObjectPropertyKey", "flowParseObjectTypeIndexer", "isStatic", "static", "flowParseObjectTypeInternalSlot", "flowParseObjectTypeMethodish", "flowParseFunctionTypeParam", "flowParseObjectTypeCallProperty", "valueNode", "callProperties", "indexers", "internalSlots", "endDelim", "exact", "inexact", "protoStartLoc", "inexactStartLoc", "propOrInexact", "flowParseObjectTypeProperty", "flowObjectTypeSemicolon", "proto", "flowCheckGetterSetterParams", "paramCount", "node2", "qualification", "flowParseGenericType", "flowParseTypeofType", "flowParsePrimaryType", "flowParseTupleType", "first", "lh", "isThis", "reinterpretTypeAsFunctionTypeParam", "flowIdentToTypeAnnotation", "isGroupedType", "parseLiteralAtNode", "createIdentifier", "flowParsePostfixType", "seenOptionalIndexedAccess", "objectType", "indexType", "flowParsePrefixType", "flowParseAnonFunctionWithoutParens", "param", "flowParseIntersectionType", "flowParseUnionType", "allowPrimitiveOverride", "typeCastToParameter", "allowExpressionBody", "forwardNoArrowParamsConversionAt", "parseFunctionBodyAndFinish", "parseStatement", "flowParseEnumDeclaration", "parseExpressionStatement", "expr", "shouldParseExportDeclaration", "isExportDefaultSpecifier", "parseExportDefaultExpression", "parseConditional", "setOptionalParametersError", "originalNoArrowAt", "consequent", "failed", "tryParseConditionalConsequent", "valid", "getArrowLikeExpressions", "alternate", "parseMaybeAssign", "parseMaybeAssignAllowIn", "disallowInvalid", "arrows", "finishArrowValidation", "every", "_node$extra", "toAssignableList", "trailingCommaLoc", "checkParams", "result", "parseParenItem", "typeCastNode", "assertModuleNodeAllowed", "decl", "parseExportDeclaration", "declarationNode", "parseExportSpecifiers", "parseExportFrom", "eatExportStar", "maybeParseExportNamespaceSpecifier", "hasNamespace", "parseClassId", "isStatement", "optionalId", "parseClassMember", "member", "parseClassMemberFromModifier", "isIterator", "readIterator", "fullWord", "left", "exprList", "toReferencedList", "isParenthesizedExpr", "_expr$extra", "parseArrayLike", "close", "canBePattern", "isTuple", "isParenthesized", "isClassMethod", "isClassProperty", "isNonstaticConstructor", "isThisParam", "pushClassPrivateMethod", "parseClassSuper", "superTypeParameters", "implemented", "checkGetterSetterParams", "parsePropertyNamePrefixOperator", "parseObjPropValue", "parseAssignableListItemTypes", "parseMaybeDefault", "shouldParseDefaultImport", "parseImportSpecifierLocal", "specifier", "local", "finishImportSpecifier", "maybeParseDefaultImportSpecifier", "parseImportSpecifier", "importedIsString", "isInTypeOnlyImport", "isMaybeTypeOnly", "firstIdent", "imported", "specifierTypeKind", "as_ident", "specifierIsTypeImport", "checkReservedWord", "parseBindingAtom", "parseFunctionParams", "allowModifiers", "parseVarId", "parseAsyncArrowFromCallExpression", "call", "shouldParseAsyncArrow", "afterLeftParse", "_jsx", "jsx", "currentContext", "_jsx2", "_jsx3", "abort", "_arrowExpression$extr", "arrowExpression", "maybeUnwrapTypeCastExpression", "async", "parseArrow", "shouldParseArrow", "setArrowFunctionParameters", "allowDuplicates", "isArrowFunction", "strictModeChanged", "parseParenAndDistinguishExpression", "canBeArrow", "parseSubscripts", "parseCallExpressionArguments", "parseAsyncArrowWithTypeParameters", "subscriptState", "isLookaheadToken_lt", "typeArguments", "parseNewCallee", "targs", "parseArrowExpression", "parseTopLevel", "program", "fileNode", "skipFlowComment", "hasFlowCommentCompletion", "commentSkip", "shiftToFirstNonWhiteSpace", "ch2", "ch3", "flowEnumErrorBooleanMemberNotInitialized", "flowEnumErrorInvalidMemberInitializer", "enumContext", "flowEnumErrorNumberMemberNotInitialized", "flowEnumErrorStringMemberInconsistentlyInitailized", "flowEnumMemberInit", "endOfInit", "literal", "flowEnumMemberRaw", "flowEnumCheckExplicitTypeMismatch", "expectedType", "flowEnumMembers", "seenNames", "members", "booleanMembers", "numberMembers", "stringMembers", "defaultedMembers", "hasUnknownMembers", "memberNode", "toUpperCase", "flowEnumStringMembers", "initializedMembers", "flowEnumParseExplicitType", "flowEnumBody", "nameLoc", "empty", "boolsLen", "numsLen", "strsLen", "defaultedLen", "afterNext", "entities", "__proto__", "quot", "amp", "apos", "nbsp", "iexcl", "cent", "pound", "curren", "yen", "brvbar", "sect", "uml", "copy", "ordf", "laquo", "not", "shy", "reg", "macr", "deg", "plusmn", "sup2", "sup3", "acute", "micro", "para", "middot", "cedil", "sup1", "ordm", "raquo", "frac14", "frac12", "frac34", "iquest", "Agrave", "Aacute", "Acirc", "Atilde", "Auml", "Aring", "AElig", "Ccedil", "Egrave", "Eacute", "Ecirc", "Euml", "Igrave", "Iacute", "Icirc", "Iuml", "ETH", "Ntilde", "Ograve", "Oacute", "Ocirc", "Otilde", "Ouml", "times", "Oslash", "Ugrave", "Uacute", "Ucirc", "Uuml", "Yacute", "THORN", "szlig", "agrave", "aacute", "acirc", "atilde", "auml", "aring", "aelig", "ccedil", "egrave", "eacute", "ecirc", "euml", "igrave", "iacute", "icirc", "iuml", "eth", "ntilde", "ograve", "oacute", "ocirc", "otilde", "ouml", "divide", "oslash", "ugrave", "uacute", "ucirc", "uuml", "yacute", "thorn", "yuml", "OElig", "oelig", "Scaron", "scaron", "Yuml", "fnof", "circ", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmaf", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "thetasym", "upsih", "piv", "ensp", "emsp", "thinsp", "zwnj", "zwj", "lrm", "rlm", "ndash", "mdash", "lsquo", "rsquo", "sbquo", "ldquo", "rdquo", "bdquo", "dagger", "Dagger", "bull", "hellip", "permil", "prime", "Prime", "lsaquo", "rsaquo", "oline", "frasl", "euro", "image", "weierp", "real", "trade", "alefsym", "larr", "uarr", "rarr", "darr", "harr", "crarr", "lArr", "uArr", "rArr", "dArr", "hArr", "forall", "part", "exist", "nabla", "isin", "notin", "ni", "prod", "sum", "minus", "lowast", "radic", "infin", "ang", "and", "or", "cap", "cup", "int", "there4", "sim", "cong", "asymp", "ne", "equiv", "le", "ge", "sub", "sup", "nsub", "sube", "supe", "oplus", "otimes", "perp", "sdot", "lceil", "rceil", "lfloor", "rfloor", "lang", "rang", "loz", "spades", "clubs", "hearts", "diams", "JsxErrors", "AttributeIsEmpty", "MissingClosingTagElement", "openingTagName", "MissingClosingTagFragment", "UnexpectedSequenceExpression", "HTMLEntity", "UnsupportedJsxValue", "UnterminatedJsxContent", "UnwrappedAdjacentJSXElements", "isFragment", "getQualifiedJSXName", "namespace", "jsxReadToken", "jsxReadEntity", "jsxReadNewLine", "normalizeCRLF", "jsxReadString", "codePoint", "count", "desc", "entity", "XHTMLEntities", "jsxReadWord", "jsxParseIdentifier", "jsxParseNamespacedName", "jsxParseElementName", "jsxParseAttributeValue", "setContext", "jsxParseExpressionContainer", "jsxParseEmptyExpression", "jsxParseSpreadChild", "previousContext", "jsxParseAttribute", "jsxParseOpeningElementAt", "jsxParseOpeningElementAfterName", "selfClosing", "jsxParseClosingElementAt", "jsxParseElementAt", "children", "openingElement", "closingElement", "contents", "openingFragment", "closingFragment", "jsxParseElement", "newContext", "TypeScriptScope", "enums", "constEnums", "classes", "exportOnlyBindings", "TypeScriptScopeHandler", "importsStack", "hasImport", "allowShadow", "isConst", "wasConst", "getOwn", "hasOwnProperty", "nonNull", "x", "assert", "TSErrors", "AbstractMethodHasImplementation", "methodName", "AbstractPropertyHasInitializer", "propertyName", "AccesorCannotDeclareThisParameter", "AccesorCannotHaveTypeParameters", "CannotFindName", "ClassMethodHasDeclare", "ClassMethodHasReadonly", "ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference", "ConstructorHasTypeParameters", "DeclareAccessor", "DeclareClassFieldHasInitializer", "DeclareFunctionHasImplementation", "DuplicateAccessibilityModifier", "modifier", "DuplicateModifier", "EmptyHeritageClauseType", "EmptyTypeArguments", "EmptyTypeParameters", "ExpectedAmbientAfterExportDeclare", "ImportAliasHasImportType", "IncompatibleModifiers", "modifiers", "IndexSignatureHasAbstract", "IndexSignatureHasAccessibility", "IndexSignatureHasDeclare", "IndexSignatureHasOverride", "IndexSignatureHasStatic", "InitializerNotAllowedInAmbientContext", "InvalidModifierOnTypeMember", "InvalidModifierOnTypeParameter", "InvalidModifierOnTypeParameterPositions", "InvalidModifiersOrder", "orderedModifiers", "InvalidPropertyAccessAfterInstantiationExpression", "InvalidTupleMemberLabel", "MissingInterfaceName", "MixedLabeledAndUnlabeledElements", "NonAbstractClassHasAbstractMethod", "NonClassMethodPropertyHasAbstractModifer", "OptionalTypeBeforeRequired", "OverrideNotInSubClass", "PrivateElementHasAbstract", "PrivateElementHasAccessibility", "ReadonlyForMethodSignature", "ReservedArrowTypeParam", "ReservedTypeAssertion", "SetAccesorCannotHaveOptionalParameter", "SetAccesorCannotHaveRestParameter", "SetAccesorCannotHaveReturnType", "SingleTypeParameterWithoutTrailingComma", "typeParameterName", "StaticBlockCannotHaveModifier", "TypeAnnotationAfterAssign", "TypeImportCannotSpecifyDefaultAndNamed", "TypeModifierIsUsedInTypeExports", "TypeModifierIsUsedInTypeImports", "UnexpectedParameterModifier", "UnexpectedReadonly", "UnexpectedTypeAnnotation", "UnexpectedTypeCastInParameter", "UnsupportedImportTypeArgument", "UnsupportedParameterPropertyKind", "UnsupportedSignatureParameterKind", "keywordTypeFromName", "tsIsAccessModifier", "tsIsVarianceAnnotations", "typescript", "tsIsIdentifier", "tsTokenCanFollowModifier", "tsNextTokenCanFollowModifier", "tsParseModifier", "allowedModifiers", "stopOnStartOfClassStaticBlock", "tsIsStartOfStaticBlocks", "tsTryParse", "bind", "tsParseModifiers", "modified", "disallowedModifiers", "errorTemplate", "enforceOrder", "before", "after", "incompatible", "mod1", "mod2", "accessibility", "tsIsListTerminator", "tsParseList", "parseElement", "tsParseDelimitedList", "refTrailingCommaPos", "tsParseDelimitedListWorker", "expectSuccess", "trailingCommaPos", "element", "tsParseBracketedList", "bracket", "skipFirstToken", "tsParseImportType", "qualifier", "tsParseEntityName", "tsParseTypeArguments", "allowReservedWords", "tsParseTypeReference", "typeName", "tsParseThisTypePredicate", "lhs", "parameterName", "tsParseTypeAnnotation", "asserts", "tsParseThisTypeNode", "tsParseTypeQuery", "exprName", "tsParseInOutModifiers", "tsParseNoneModifiers", "tsParseTypeParameter", "parseModifiers", "tsParseTypeParameterName", "constraint", "tsEatThenParseType", "tsTryParseTypeParameters", "tsParseTypeParameters", "tsTryNextParseConstantContext", "typeReference", "tsFillSignature", "returnToken", "signature", "returnTokenRequired", "paramsKey", "returnTypeKey", "tsParseBindingListForSignature", "tsParseTypeOrTypePredicateAnnotation", "parseBindingList", "tsParseTypeMemberSemicolon", "tsParseSignatureMember", "tsIsUnambiguouslyIndexSignature", "tsTryParseIndexSignature", "tsLookAhead", "parameters", "tsTryParseTypeAnnotation", "tsParsePropertyOrMethodSignature", "readonly", "nodeAny", "firstParameter", "tsParseTypeMember", "idx", "parsePropertyName", "tsParseTypeLiteral", "tsParseObjectTypeMembers", "tsIsStartOfMappedType", "tsParseMappedTypeParameter", "tsExpectThenParseType", "tsParseMappedType", "nameType", "tsParseType", "tsTryParseType", "tsParseTupleType", "elementTypes", "tsParseTupleElementType", "seenOptionalElement", "labeledElements", "elementNode", "_labeledElements", "checkType", "isLabeled", "labeledNode", "optionalTypeNode", "restNode", "tsParseParenthesizedType", "tsParseFunctionOrConstructorType", "abstract", "tsInAllowConditionalTypesContext", "tsParseLiteralTypeNode", "tsParseTemplateLiteralType", "parseTemplate", "parseTemplateSubstitution", "tsParseThisTypeOrThisTypePredicate", "thisKeyword", "tsParseNonArrayType", "parseMaybeUnary", "nodeType", "tsParseArrayTypeOrHigher", "tsParseTypeOperator", "operator", "tsParseTypeOperatorOrHigher", "tsCheckTypeAnnotationForReadOnly", "tsParseInferType", "tsParseConstraintForInferType", "tsInDisallowConditionalTypesContext", "tsParseUnionOrIntersectionType", "parseConstituentType", "hasLeadingOperator", "tsParseIntersectionTypeOrHigher", "tsParseUnionTypeOrHigher", "tsIsStartOfFunctionType", "tsIsUnambiguouslyStartOfFunctionType", "tsSkipParameterStart", "previousErrorCount", "parseObjectLike", "tsInType", "t", "tsParseTypePredicateAsserts", "thisTypePredicate", "typePredicateVariable", "tsParseTypePredicatePrefix", "tsTryParseTypeOrTypePredicateAnnotation", "eatColon", "tsParseNonConditionalType", "extendsType", "trueType", "falseType", "isAbstractConstructorSignature", "tsParseTypeAssertion", "tsNextThenParseType", "tsParseHeritageClause", "originalStartLoc", "delimitedList", "tsParseInterfaceDeclaration", "checkIdentifier", "tsParseTypeAliasDeclaration", "tsInNoContext", "cb", "oldContext", "oldInDisallowConditionalTypesContext", "tsDoThenParseType", "tsParseEnumMember", "initializer", "tsParseEnumDeclaration", "tsParseModuleBlock", "parseBlockOrModuleBlockBody", "tsParseModuleOrNamespaceDeclaration", "nested", "inner", "tsParseAmbientExternalModuleDeclaration", "global", "tsParseImportEqualsDeclaration", "isExport", "moduleReference", "tsParseModuleReference", "tsIsExternalModuleReference", "tsParseExternalModuleReference", "f", "tsTryParseAndCatch", "tsTryParseDeclare", "nany", "starttype", "tsInAmbientContext", "parseFunctionStatement", "parseClass", "parseVarStatement", "tsParseDeclaration", "tsTryParseExportDeclaration", "tsParseExpressionStatement", "mod", "tsCheckLineTerminator", "tsParseAbstractDeclaration", "tsTryParseGenericAsyncArrowFunction", "oldMaybeInArrowParameters", "tsParseTypeArgumentsInExpression", "reScan_lt", "tsIsDeclarationStart", "parseAssignableListItem", "decorators", "override", "elt", "pp", "parameter", "isSimpleParameter", "bodilessType", "registerFunctionStatementId", "tsCheckForInvalidTypeCasts", "items", "isInParens", "nonNullExpression", "isOptionalCall", "missingParenErrorLoc", "atPossibleAsyncArrow", "asyncArrowFn", "parseTaggedTemplateExpression", "tokenType", "_callee$extra", "parseExprOp", "leftStartPos", "leftStartLoc", "minPrec", "reScan_lt_gt", "checkKeywords", "checkDuplicateExports", "ahead", "importNode", "isAbstractClass", "cls", "allowMissingInitializer", "declarations", "expressions", "isPossiblyLiteralEnum", "parseStatementContent", "parseAccessModifier", "tsHasSomeModifiers", "callParseClassMemberWithIsStatic", "parseClassStaticBlock", "parseClassMemberWithIsStatic", "hadSuperClass", "parsePostMemberNameModifiers", "methodOrProp", "isDeclare", "parseClassPropertyAnnotation", "definite", "declareClassPrivateMethodInScope", "_typeCast", "_typeCast2", "_jsx4", "_typeCast3", "typeCast", "_typeParameters", "reportReservedArrowTypeParam", "trailingComma", "sawUnary", "toAssignableParenthesizedExpression", "checkToRestConversion", "allowPattern", "TSTypeCastExpression", "TSParameterProperty", "TSNonNullExpression", "TSAsExpression", "TSTypeAssertion", "parseMaybeDecoratorArguments", "checkCommaAfterRest", "canHaveLeadingDecorator", "getGetterSetterExpectedParamCount", "baseCount", "firstParam", "parseCatchClauseParam", "oldIsAmbientContext", "oldInAbstractClass", "shouldParseAsAmbientContext", "getExpression", "parseExportSpecifier", "isString", "isInTypeExport", "parseTypeOnlyImportExportSpecifier", "isImport", "isInTypeOnlyImportExport", "leftOfAsKey", "rightOfAsKey", "leftOfAs", "rightOfAs", "hasTypeSpecifier", "canParseAsKeyword", "firstAs", "secondAs", "parseModuleExportName", "kindKey", "isUncomputedMemberExpressionChain", "PlaceholderErrors", "ClassNameIsRequired", "UnexpectedSpace", "placeholders", "parsePlaceholder", "assertNoSpace", "finishPlaceholder", "isFinished", "verifyBreakContinue", "isBreak", "parseBlock", "createNewLexicalScope", "parseFunctionId", "requireId", "takeDecorators", "oldStrict", "parseClassBody", "startsWith", "maybeParseExportDefaultSpecifier", "checkExport", "maybeParseStarImportSpecifier", "parseNamedImportSpecifiers", "parseImportSource", "v8intrinsic", "parseV8Intrinsic", "v8IntrinsicStartLoc", "parseIdentifierName", "identifier", "expectedConfig", "expectedName", "expectedOptions", "expectedKeys", "expectedOptionsIsEmpty", "p", "option", "find", "PIPELINE_PROPOSALS", "TOPIC_TOKENS", "RECORD_AND_TUPLE_SYNTAX_TYPES", "validatePlugins", "decoratorsBeforeExport", "allowCallParenthesized", "proposalList", "tupleSyntaxIsHash", "syntaxType", "tokenList", "missingPlugins", "mixinPlugins", "mixinPluginNames", "defaultOptions", "sourceFilename", "allowAwaitOutsideFunction", "allowReturnOutsideFunction", "allowImportExportEverywhere", "allowSuperOutsideMethod", "allowUndeclaredExports", "createParenthesizedExpressions", "getOptions", "opts", "unwrapParenthesizedExpression", "LValParser", "_node$extra3", "_node$extra2", "arg", "toReferencedListDeep", "parseSpread", "parseRestBinding", "closeCharCode", "allowEmpty", "elts", "parseDecorator", "parseBindingRestProperty", "parseBindingProperty", "_startLoc", "_startPos", "_left", "ObjectProperty", "checkLVal", "in", "checkClashes", "allowingSloppyLetBinding", "hasParenthesizedAncestor", "_expression$extra", "validity", "ParseErrorClass", "isParenthesizedExpression", "nextAncestor", "child", "allowLetBinding", "declareNameFromIdentifier", "ExpressionParser", "checkProto", "isRecord", "protoRef", "used", "shouldExitDescending", "disallowIn", "disallowInAnd", "parseExpressionBase", "allowInAnd", "parseMaybeAssignDisallowIn", "resultError", "_resultError$loc", "parseYield", "ownExpressionErrors", "parseMaybeConditional", "parseExprOps", "parseMaybeUnaryOrPrivate", "op", "prec", "checkPipelineAtInfixOperator", "logical", "coalesce", "parseExprOpRightExpr", "finishedNode", "nextOp", "withTopicBindingContext", "parseHackPipeBody", "parseSmartPipelineBodyInStyle", "parseExprOpBaseRightExpr", "withSoloAwaitPermittingContext", "parseFSharpPipelineBody", "_body$extra", "topicReferenceWasUsedInCurrentContext", "checkExponentialAfterUnary", "isAwait", "isAwaitAllowed", "parseAwait", "update", "isDelete", "parseUpdate", "isAmbiguousAwait", "updateExpressionNode", "parseExprSubscripts", "maybeAsyncArrow", "parseBind", "parseCoverCallAndAsyncArrowHead", "parseMember", "parseNoCallExpr", "tag", "quasi", "dynamicImport", "allowPlaceholder", "nodeForExtra", "oldInFSharpPipelineDirectBody", "addTrailingCommaExtraToNode", "parseExprListItem", "_call$extra", "parseSuper", "parseImportMetaProperty", "parseDo", "parseFunctionOrFunctionSent", "parseDecorators", "parseNewOrNewTarget", "parseTopicReferenceThenEqualsSign", "parseTopicReference", "pipeProposal", "lookaheadCh", "parseModuleExpression", "parseFunction", "parseAsyncArrowUnaryFunction", "topicTokenType", "topicTokenValue", "finishTopicReference", "testTopicReferenceConfiguration", "topicReferenceIsAllowedInCurrentContext", "registerTopicReference", "meta", "parseMetaProperty", "innerStartPos", "innerStartLoc", "spreadStartLoc", "optionalCommaStartLoc", "spreadNodeStartPos", "spreadNodeStartLoc", "innerEndLoc", "arrowNode", "wrapParenthesis", "parenExpression", "metaProp", "parseNew", "parseExprList", "parseTemplateElement", "isTagged", "elemStart", "elem", "isTail", "endOffset", "elemEnd", "cooked", "tail", "curElt", "quasis", "propHash", "parsePropertyDefinition", "maybeAsyncOrAccessorProp", "keyName", "_params", "finishedProp", "generator", "isExpression", "hasStrictModeDirective", "nonSimple", "isSimpleParamList", "formalParameters", "delegating", "delegate", "childExpr", "isSimpleReference", "checkSmartPipeTopicBodyEarlyErrors", "callback", "outerContextTopicState", "withSmartMixTopicForbiddingContext", "outerContextSoloAwaitState", "ret", "revertScopes", "parseProgram", "loopLabel", "switchLabel", "FUNC_NO_FLAGS", "FUNC_STATEMENT", "FUNC_HANGING_STATEMENT", "FUNC_NULLABLE_ID", "loneSurrogate", "keywordRelationalOperator", "babel7CompatTokens", "hashEndPos", "hashEndLoc", "backquoteEnd", "backquoteEndLoc", "startToken", "templateValue", "templateElementEnd", "templateElementEndLoc", "endToken", "StatementParser", "interpreter", "parseInterpreterDirective", "stmtToDirective", "directiveLiteral", "isLetKeyword", "endCh", "parseBreakContinueStatement", "parseDebuggerStatement", "parseDoStatement", "parseForStatement", "parseIfStatement", "parseReturnStatement", "parseSwitchStatement", "parseThrowStatement", "parseTryStatement", "parseWhileStatement", "parseWithStatement", "parseEmptyStatement", "nextTokenCharCode", "isAsyncFunction", "maybeName", "parseLabeledStatement", "allowExport", "currentContextDecorators", "decorator", "paramsStartLoc", "lab", "parseHeaderExpression", "awaitAt", "parseFor", "startsWithLet", "initNode", "parseVar", "parseForIn", "startsWithAsync", "isForOf", "declarationPosition", "discriminant", "cases", "cur", "sawDefault", "isCase", "simple", "block", "handler", "clause", "finalizer", "statementStart", "parsedNonDirective", "isForIn", "await", "isFor", "statement", "isHangingStatement", "hadConstructor", "publicMethod", "privateMethod", "publicProp", "privateProp", "accessorProp", "publicMember", "parseClassElementName", "isPrivate", "maybeQuestionTokenStartLoc", "pushClassPrivateProperty", "pushClassProperty", "pushClassAccessorProperty", "_member$decorators", "parseClassAccessorProperty", "parseInitializer", "hasDefault", "parseAfterDefault", "hasStar", "parseAfterNamespace", "isFromRequired", "hasSpecifiers", "maybeParseExportNamedSpecifiers", "hasDeclaration", "maybeParseExportDeclaration", "isTypeExport", "assertions", "nextType", "hasFrom", "nextAfterFrom", "maybeParseImportAssertions", "checkJSONModuleImport", "checkNames", "isDefault", "isFrom", "_declaration$extra", "nodes", "surrogate", "isJSONModuleImport", "nonDefaultNamedSpecifier", "parseNext", "maybeParseModuleAttributes", "parseAssertEntries", "attrs", "attrNames", "importSpecifier", "Parser", "pluginsMap", "pluginMap", "_options", "getParser", "ast", "moduleError", "generateExportedTokenTypes", "internalTokenTypes", "tokTypes", "getParserClass", "parserClassCache", "pluginsFromOptions", "pluginList", "shallowEqual", "actual", "expected", "keys", "Object", "key", "_shallowEqual", "isArrayExpression", "node", "opts", "type", "shallowEqual", "isAssignmentExpression", "isBinaryExpression", "isInterpreterDirective", "isDirective", "isDirectiveLiteral", "isBlockStatement", "isBreakStatement", "isCallExpression", "isCatchClause", "isConditionalExpression", "isContinueStatement", "isDebuggerStatement", "isDoWhileStatement", "isEmptyStatement", "isExpressionStatement", "isFile", "isForInStatement", "isForStatement", "isFunctionDeclaration", "isFunctionExpression", "isIdentifier", "isIfStatement", "isLabeledStatement", "isStringLiteral", "isNumericLiteral", "isNullLiteral", "isBooleanLiteral", "isRegExpLiteral", "isLogicalExpression", "isMemberExpression", "isNewExpression", "isProgram", "isObjectExpression", "isObjectMethod", "isObjectProperty", "isRestElement", "isReturnStatement", "isSequenceExpression", "isParenthesizedExpression", "isSwitchCase", "isSwitchStatement", "isThisExpression", "isThrowStatement", "isTryStatement", "isUnaryExpression", "isUpdateExpression", "isVariableDeclaration", "isVariableDeclarator", "isWhileStatement", "isWithStatement", "isAssignmentPattern", "isArrayPattern", "isArrowFunctionExpression", "isClassBody", "isClassExpression", "isClassDeclaration", "isExportAllDeclaration", "isExportDefaultDeclaration", "isExportNamedDeclaration", "isExportSpecifier", "isForOfStatement", "isImportDeclaration", "isImportDefaultSpecifier", "isImportNamespaceSpecifier", "isImportSpecifier", "isMetaProperty", "isClassMethod", "isObjectPattern", "isSpreadElement", "isSuper", "isTaggedTemplateExpression", "isTemplateElement", "isTemplateLiteral", "isYieldExpression", "isAwaitExpression", "isImport", "isBigIntLiteral", "isExportNamespaceSpecifier", "isOptionalMemberExpression", "isOptionalCallExpression", "isClassProperty", "isClassAccessorProperty", "isClassPrivateProperty", "isClassPrivateMethod", "isPrivateName", "isStaticBlock", "isAnyTypeAnnotation", "isArrayTypeAnnotation", "isBooleanTypeAnnotation", "isBooleanLiteralTypeAnnotation", "isNullLiteralTypeAnnotation", "isClassImplements", "isDeclareClass", "isDeclareFunction", "isDeclareInterface", "isDeclareModule", "isDeclareModuleExports", "isDeclareTypeAlias", "isDeclareOpaqueType", "isDeclareVariable", "isDeclareExportDeclaration", "isDeclareExportAllDeclaration", "isDeclaredPredicate", "isExistsTypeAnnotation", "isFunctionTypeAnnotation", "isFunctionTypeParam", "isGenericTypeAnnotation", "isInferredPredicate", "isInterfaceExtends", "isInterfaceDeclaration", "isInterfaceTypeAnnotation", "isIntersectionTypeAnnotation", "isMixedTypeAnnotation", "isEmptyTypeAnnotation", "isNullableTypeAnnotation", "isNumberLiteralTypeAnnotation", "isNumberTypeAnnotation", "isObjectTypeAnnotation", "isObjectTypeInternalSlot", "isObjectTypeCallProperty", "isObjectTypeIndexer", "isObjectTypeProperty", "isObjectTypeSpreadProperty", "isOpaqueType", "isQualifiedTypeIdentifier", "isStringLiteralTypeAnnotation", "isStringTypeAnnotation", "isSymbolTypeAnnotation", "isThisTypeAnnotation", "isTupleTypeAnnotation", "isTypeofTypeAnnotation", "isTypeAlias", "isTypeAnnotation", "isTypeCastExpression", "isTypeParameter", "isTypeParameterDeclaration", "isTypeParameterInstantiation", "isUnionTypeAnnotation", "isVariance", "isVoidTypeAnnotation", "isEnumDeclaration", "isEnumBooleanBody", "isEnumNumberBody", "isEnumStringBody", "isEnumSymbolBody", "isEnumBooleanMember", "isEnumNumberMember", "isEnumStringMember", "isEnumDefaultedMember", "isIndexedAccessType", "isOptionalIndexedAccessType", "isJSXAttribute", "isJSXClosingElement", "isJSXElement", "isJSXEmptyExpression", "isJSXExpressionContainer", "isJSXSpreadChild", "isJSXIdentifier", "isJSXMemberExpression", "isJSXNamespacedName", "isJSXOpeningElement", "isJSXSpreadAttribute", "isJSXText", "isJSXFragment", "isJSXOpeningFragment", "isJSXClosingFragment", "isNoop", "isPlaceholder", "isV8IntrinsicIdentifier", "isArgumentPlaceholder", "isBindExpression", "isImportAttribute", "isDecorator", "isDoExpression", "isExportDefaultSpecifier", "isRecordExpression", "isTupleExpression", "isDecimalLiteral", "isModuleExpression", "isTopicReference", "isPipelineTopicExpression", "isPipelineBareFunction", "isPipelinePrimaryTopicReference", "isTSParameterProperty", "isTSDeclareFunction", "isTSDeclareMethod", "isTSQualifiedName", "isTSCallSignatureDeclaration", "isTSConstructSignatureDeclaration", "isTSPropertySignature", "isTSMethodSignature", "isTSIndexSignature", "isTSAnyKeyword", "isTSBooleanKeyword", "isTSBigIntKeyword", "isTSIntrinsicKeyword", "isTSNeverKeyword", "isTSNullKeyword", "isTSNumberKeyword", "isTSObjectKeyword", "isTSStringKeyword", "isTSSymbolKeyword", "isTSUndefinedKeyword", "isTSUnknownKeyword", "isTSVoidKeyword", "isTSThisType", "isTSFunctionType", "isTSConstructorType", "isTSTypeReference", "isTSTypePredicate", "isTSTypeQuery", "isTSTypeLiteral", "isTSArrayType", "isTSTupleType", "isTSOptionalType", "isTSRestType", "isTSNamedTupleMember", "isTSUnionType", "isTSIntersectionType", "isTSConditionalType", "isTSInferType", "isTSParenthesizedType", "isTSTypeOperator", "isTSIndexedAccessType", "isTSMappedType", "isTSLiteralType", "isTSExpressionWithTypeArguments", "isTSInterfaceDeclaration", "isTSInterfaceBody", "isTSTypeAliasDeclaration", "isTSInstantiationExpression", "isTSAsExpression", "isTSTypeAssertion", "isTSEnumDeclaration", "isTSEnumMember", "isTSModuleDeclaration", "isTSModuleBlock", "isTSImportType", "isTSImportEqualsDeclaration", "isTSExternalModuleReference", "isTSNonNullExpression", "isTSExportAssignment", "isTSNamespaceExportDeclaration", "isTSTypeAnnotation", "isTSTypeParameterInstantiation", "isTSTypeParameterDeclaration", "isTSTypeParameter", "isStandardized", "nodeType", "expectedNode", "isExpression", "isBinary", "isScopable", "isBlockParent", "isBlock", "isStatement", "isTerminatorless", "isCompletionStatement", "isConditional", "isLoop", "isWhile", "isExpressionWrapper", "isFor", "isForXStatement", "isFunction", "isFunctionParent", "isPureish", "isDeclaration", "isPatternLike", "isLVal", "isTSEntityName", "isLiteral", "isImmutable", "isUserWhitespacable", "isMethod", "isObjectMember", "isProperty", "isUnaryLike", "isPattern", "isClass", "isModuleDeclaration", "isExportDeclaration", "isModuleSpecifier", "isAccessor", "isPrivate", "isFlow", "isFlowType", "isFlowBaseAnnotation", "isFlowDeclaration", "isFlowPredicate", "isEnumBody", "isEnumMember", "isJSX", "isMiscellaneous", "isTypeScript", "isTSTypeElement", "isTSType", "isTSBaseType", "isNumberLiteral", "console", "trace", "isRegexLiteral", "isRestProperty", "isSpreadProperty", "_generated", "matchesPattern", "member", "match", "allowPartial", "isMemberExpression", "parts", "Array", "isArray", "split", "nodes", "node", "object", "push", "property", "length", "i", "j", "value", "isIdentifier", "name", "isStringLiteral", "isThisExpression", "_matchesPattern", "buildMatchMemberExpression", "match", "allowPartial", "parts", "split", "member", "matchesPattern", "_buildMatchMemberExpression", "isReactComponent", "buildMatchMemberExpression", "isCompatTag", "tagName", "test", "require_to_fast_properties", "__commonJSMin", "exports", "module", "fastProto", "FastObject", "o", "result", "_definitions", "isType", "nodeType", "targetType", "ALIAS_KEYS", "aliases", "FLIPPED_ALIAS_KEYS", "alias", "_definitions", "isPlaceholderType", "placeholderType", "targetType", "aliases", "PLACEHOLDERS_ALIAS", "alias", "_shallowEqual", "_isType", "_isPlaceholderType", "_definitions", "is", "type", "node", "opts", "isType", "shallowEqual", "FLIPPED_ALIAS_KEYS", "isPlaceholderType", "expectedNode", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "RegExp", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "code", "set", "pos", "i", "length", "isIdentifierStart", "test", "String", "fromCharCode", "isIdentifierChar", "isIdentifierName", "name", "isFirst", "cp", "charCodeAt", "trail", "reservedWords", "keyword", "strict", "strictBind", "keywords", "Set", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "_identifier", "_keyword", "_helperValidatorIdentifier", "isValidIdentifier", "name", "reserved", "isKeyword", "isStrictReservedWord", "isIdentifierName", "require_lib", "__commonJSMin", "exports", "readCodePoint", "readInt", "readStringContents", "_isDigit", "code", "forbiddenNumericSeparatorSiblings", "isAllowedNumericSeparatorSibling", "ch", "type", "input", "pos", "lineStart", "curLine", "errors", "initialPos", "initialLineStart", "initialCurLine", "out", "containsInvalid", "chunkStart", "length", "isStringEnd", "escaped", "readEscapedChar", "inTemplate", "throwOnInvalid", "res", "readHexChar", "startPos", "octalStr", "octal", "next", "len", "forceLen", "n", "radix", "allowNumSeparator", "start", "forbiddenSiblings", "isAllowedSibling", "invalid", "total", "i", "e", "val", "prev", "STATEMENT_OR_BLOCK_KEYS", "FLATTENABLE_KEYS", "FOR_INIT_KEYS", "COMMENT_KEYS", "LOGICAL_OPERATORS", "UPDATE_OPERATORS", "BOOLEAN_NUMBER_BINARY_OPERATORS", "EQUALITY_BINARY_OPERATORS", "COMPARISON_BINARY_OPERATORS", "BOOLEAN_BINARY_OPERATORS", "NUMBER_BINARY_OPERATORS", "BINARY_OPERATORS", "ASSIGNMENT_OPERATORS", "map", "op", "BOOLEAN_UNARY_OPERATORS", "NUMBER_UNARY_OPERATORS", "STRING_UNARY_OPERATORS", "UNARY_OPERATORS", "INHERIT_KEYS", "optional", "force", "BLOCK_SCOPED_SYMBOL", "Symbol", "for", "NOT_LOCAL_BINDING", "_is", "_validate", "VISITOR_KEYS", "ALIAS_KEYS", "FLIPPED_ALIAS_KEYS", "NODE_FIELDS", "BUILDER_KEYS", "DEPRECATED_KEYS", "NODE_PARENT_VALIDATIONS", "getType", "val", "Array", "isArray", "validate", "typeIs", "typeName", "assertNodeType", "validateType", "validateOptional", "optional", "validateOptionalType", "arrayOf", "elementType", "chain", "assertValueType", "assertEach", "arrayOfType", "validateArrayOfType", "callback", "validator", "node", "key", "i", "length", "subkey", "v", "process", "env", "BABEL_TYPES_8_BREAKING", "validateChild", "each", "assertOneOf", "values", "indexOf", "TypeError", "JSON", "stringify", "oneOf", "types", "type", "is", "oneOfNodeTypes", "assertNodeOrValueType", "oneOfNodeOrValueTypes", "assertShape", "shape", "errors", "property", "Object", "keys", "validateField", "error", "push", "message", "join", "shapeOf", "assertOptionalChainStart", "_current", "current", "callee", "object", "fns", "args", "fn", "chainOf", "Error", "validTypeOpts", "validFieldKeys", "defineAliasedType", "aliases", "opts", "defined", "_store$opts$inherits$", "_defined", "inherits", "store", "slice", "additional", "filter", "a", "includes", "unshift", "defineType", "fields", "getOwnPropertyNames", "field", "def", "default", "visitor", "builder", "k", "deprecatedAlias", "concat", "undefined", "forEach", "alias", "_is", "_isValidIdentifier", "_helperValidatorIdentifier", "_helperStringParser", "_constants", "_utils", "defineType", "defineAliasedType", "fields", "elements", "validate", "chain", "assertValueType", "assertEach", "assertNodeOrValueType", "default", "process", "env", "BABEL_TYPES_8_BREAKING", "undefined", "visitor", "aliases", "operator", "identifier", "assertOneOf", "ASSIGNMENT_OPERATORS", "pattern", "node", "key", "val", "is", "left", "assertNodeType", "right", "builder", "BINARY_OPERATORS", "expression", "inOp", "Object", "assign", "oneOfNodeTypes", "value", "directives", "body", "label", "optional", "callee", "arguments", "typeArguments", "typeParameters", "param", "test", "consequent", "alternate", "program", "comments", "each", "tokens", "type", "init", "update", "functionCommon", "params", "generator", "async", "functionTypeAnnotationCommon", "returnType", "functionDeclarationCommon", "declare", "id", "predicate", "parent", "inherits", "patternLikeCommon", "typeAnnotation", "decorators", "name", "isValidIdentifier", "TypeError", "match", "exec", "parentKey", "nonComp", "computed", "imported", "meta", "isKeyword", "isReservedWord", "deprecatedAlias", "flags", "invalid", "LOGICAL_OPERATORS", "object", "property", "normal", "validator", "sourceFile", "sourceType", "interpreter", "properties", "kind", "shorthand", "argument", "Error", "listKey", "index", "length", "expressions", "discriminant", "cases", "block", "handler", "finalizer", "prefix", "UNARY_OPERATORS", "UPDATE_OPERATORS", "declarations", "without", "definite", "superClass", "superTypeParameters", "implements", "mixins", "abstract", "source", "exportKind", "validateOptional", "assertions", "declaration", "specifiers", "sourced", "sourceless", "local", "exported", "lval", "await", "importKind", "classMethodOrPropertyCommon", "accessibility", "static", "override", "classMethodOrDeclareMethodCommon", "access", "tag", "quasi", "assertShape", "raw", "cooked", "str", "containsInvalid", "unterminatedCalled", "error", "readStringContents", "unterminated", "strictNumericEscape", "invalidEscapeSequence", "numericSeparatorInEscapeSequence", "unexpectedNumericSeparator", "invalidDigit", "invalidCodePoint", "tail", "quasis", "delegate", "assertOptionalChainStart", "readonly", "variance", "_utils", "defineType", "defineAliasedType", "defineInterfaceishType", "name", "builder", "visitor", "aliases", "fields", "id", "validateType", "typeParameters", "validateOptionalType", "extends", "validateOptional", "arrayOfType", "mixins", "implements", "body", "elementType", "value", "validate", "assertValueType", "predicate", "kind", "assertOneOf", "typeAnnotation", "right", "supertype", "impltype", "declaration", "specifiers", "source", "default", "exportKind", "params", "rest", "this", "returnType", "optional", "types", "properties", "indexers", "callProperties", "internalSlots", "exact", "inexact", "static", "method", "key", "variance", "proto", "argument", "qualification", "expression", "bound", "explicitType", "members", "validateArrayOfType", "hasUnknownMembers", "init", "objectType", "indexType", "_utils", "defineType", "defineAliasedType", "visitor", "aliases", "fields", "name", "validate", "assertNodeType", "value", "optional", "builder", "openingElement", "closingElement", "children", "chain", "assertValueType", "assertEach", "selfClosing", "expression", "object", "property", "namespace", "default", "attributes", "typeParameters", "argument", "openingFragment", "closingFragment", "_utils", "PLACEHOLDERS", "PLACEHOLDERS_ALIAS", "Declaration", "Pattern", "type", "alias", "ALIAS_KEYS", "length", "PLACEHOLDERS_FLIPPED_ALIAS", "Object", "keys", "forEach", "hasOwnProperty", "call", "push", "_utils", "_placeholders", "defineType", "defineAliasedType", "visitor", "builder", "fields", "name", "validate", "assertNodeType", "expectedNode", "assertOneOf", "PLACEHOLDERS", "assertValueType", "_utils", "defineType", "visitor", "aliases", "fields", "process", "env", "BABEL_TYPES_8_BREAKING", "object", "validate", "assertNodeType", "callee", "Object", "assign", "oneOfNodeTypes", "key", "value", "expression", "builder", "body", "async", "assertValueType", "default", "exported", "properties", "chain", "assertEach", "elements", "_utils", "_core", "_is", "defineType", "defineAliasedType", "bool", "assertValueType", "tSFunctionTypeAnnotationCommon", "returnType", "validate", "assertNodeType", "optional", "typeParameters", "aliases", "visitor", "fields", "accessibility", "assertOneOf", "readonly", "parameter", "override", "decorators", "chain", "assertEach", "functionDeclarationCommon", "classMethodOrDeclareMethodCommon", "left", "validateType", "right", "signatureDeclarationCommon", "validateOptionalType", "validateArrayOfType", "callConstructSignatureDeclaration", "namedTypeElementCommon", "key", "computed", "default", "validateOptional", "typeAnnotation", "initializer", "kind", "static", "parameters", "tsKeywordTypes", "type", "fnOrCtrBase", "abstract", "typeName", "builder", "parameterName", "asserts", "exprName", "members", "elementType", "elementTypes", "label", "unionOrIntersection", "types", "checkType", "extendsType", "trueType", "falseType", "typeParameter", "operator", "objectType", "indexType", "nameType", "literal", "unaryExpression", "unaryOperator", "validator", "parent", "node", "is", "argument", "oneOfNodeTypes", "expression", "declare", "id", "extends", "arrayOfType", "body", "const", "global", "qualifier", "isExport", "moduleReference", "importKind", "params", "name", "in", "out", "constraint", "_toFastProperties", "_utils", "_placeholders", "toFastProperties", "VISITOR_KEYS", "ALIAS_KEYS", "FLIPPED_ALIAS_KEYS", "NODE_FIELDS", "BUILDER_KEYS", "DEPRECATED_KEYS", "PLACEHOLDERS_ALIAS", "PLACEHOLDERS_FLIPPED_ALIAS", "TYPES", "concat", "Object", "keys", "_definitions", "validate", "node", "key", "val", "fields", "NODE_FIELDS", "type", "field", "validateField", "validateChild", "optional", "NODE_PARENT_VALIDATIONS", "_validate", "_", "validateNode", "node", "keys", "BUILDER_KEYS", "type", "key", "validate", "_validateNode", "arrayExpression", "elements", "validateNode", "type", "assignmentExpression", "operator", "left", "right", "binaryExpression", "interpreterDirective", "value", "directive", "directiveLiteral", "blockStatement", "body", "directives", "breakStatement", "label", "callExpression", "callee", "_arguments", "arguments", "catchClause", "param", "conditionalExpression", "test", "consequent", "alternate", "continueStatement", "debuggerStatement", "doWhileStatement", "emptyStatement", "expressionStatement", "expression", "file", "program", "comments", "tokens", "forInStatement", "forStatement", "init", "update", "functionDeclaration", "id", "params", "generator", "async", "functionExpression", "identifier", "name", "ifStatement", "labeledStatement", "stringLiteral", "numericLiteral", "nullLiteral", "booleanLiteral", "regExpLiteral", "pattern", "flags", "logicalExpression", "memberExpression", "object", "property", "computed", "optional", "newExpression", "sourceType", "interpreter", "sourceFile", "objectExpression", "properties", "objectMethod", "kind", "key", "objectProperty", "shorthand", "decorators", "restElement", "argument", "returnStatement", "sequenceExpression", "expressions", "parenthesizedExpression", "switchCase", "switchStatement", "discriminant", "cases", "thisExpression", "throwStatement", "tryStatement", "block", "handler", "finalizer", "unaryExpression", "prefix", "updateExpression", "variableDeclaration", "declarations", "variableDeclarator", "whileStatement", "withStatement", "assignmentPattern", "arrayPattern", "arrowFunctionExpression", "classBody", "classExpression", "superClass", "classDeclaration", "exportAllDeclaration", "source", "exportDefaultDeclaration", "declaration", "exportNamedDeclaration", "specifiers", "exportSpecifier", "local", "exported", "forOfStatement", "_await", "await", "importDeclaration", "importDefaultSpecifier", "importNamespaceSpecifier", "importSpecifier", "imported", "metaProperty", "meta", "classMethod", "_static", "static", "objectPattern", "spreadElement", "_super", "taggedTemplateExpression", "tag", "quasi", "templateElement", "tail", "templateLiteral", "quasis", "yieldExpression", "delegate", "awaitExpression", "_import", "bigIntLiteral", "exportNamespaceSpecifier", "optionalMemberExpression", "optionalCallExpression", "classProperty", "typeAnnotation", "classAccessorProperty", "classPrivateProperty", "classPrivateMethod", "privateName", "staticBlock", "anyTypeAnnotation", "arrayTypeAnnotation", "elementType", "booleanTypeAnnotation", "booleanLiteralTypeAnnotation", "nullLiteralTypeAnnotation", "classImplements", "typeParameters", "declareClass", "_extends", "extends", "declareFunction", "declareInterface", "declareModule", "declareModuleExports", "declareTypeAlias", "declareOpaqueType", "supertype", "declareVariable", "declareExportDeclaration", "declareExportAllDeclaration", "declaredPredicate", "existsTypeAnnotation", "functionTypeAnnotation", "rest", "returnType", "functionTypeParam", "genericTypeAnnotation", "inferredPredicate", "interfaceExtends", "interfaceDeclaration", "interfaceTypeAnnotation", "intersectionTypeAnnotation", "types", "mixedTypeAnnotation", "emptyTypeAnnotation", "nullableTypeAnnotation", "numberLiteralTypeAnnotation", "numberTypeAnnotation", "objectTypeAnnotation", "indexers", "callProperties", "internalSlots", "exact", "objectTypeInternalSlot", "method", "objectTypeCallProperty", "objectTypeIndexer", "variance", "objectTypeProperty", "proto", "objectTypeSpreadProperty", "opaqueType", "impltype", "qualifiedTypeIdentifier", "qualification", "stringLiteralTypeAnnotation", "stringTypeAnnotation", "symbolTypeAnnotation", "thisTypeAnnotation", "tupleTypeAnnotation", "typeofTypeAnnotation", "typeAlias", "typeCastExpression", "typeParameter", "bound", "_default", "default", "typeParameterDeclaration", "typeParameterInstantiation", "unionTypeAnnotation", "voidTypeAnnotation", "enumDeclaration", "enumBooleanBody", "members", "explicitType", "hasUnknownMembers", "enumNumberBody", "enumStringBody", "enumSymbolBody", "enumBooleanMember", "enumNumberMember", "enumStringMember", "enumDefaultedMember", "indexedAccessType", "objectType", "indexType", "optionalIndexedAccessType", "jsxAttribute", "jsxClosingElement", "jsxElement", "openingElement", "closingElement", "children", "selfClosing", "jsxEmptyExpression", "jsxExpressionContainer", "jsxSpreadChild", "jsxIdentifier", "jsxMemberExpression", "jsxNamespacedName", "namespace", "jsxOpeningElement", "attributes", "jsxSpreadAttribute", "jsxText", "jsxFragment", "openingFragment", "closingFragment", "jsxOpeningFragment", "jsxClosingFragment", "noop", "placeholder", "expectedNode", "v8IntrinsicIdentifier", "argumentPlaceholder", "bindExpression", "importAttribute", "decorator", "doExpression", "exportDefaultSpecifier", "recordExpression", "tupleExpression", "decimalLiteral", "moduleExpression", "topicReference", "pipelineTopicExpression", "pipelineBareFunction", "pipelinePrimaryTopicReference", "tsParameterProperty", "parameter", "tsDeclareFunction", "tsDeclareMethod", "tsQualifiedName", "tsCallSignatureDeclaration", "parameters", "tsConstructSignatureDeclaration", "tsPropertySignature", "initializer", "tsMethodSignature", "tsIndexSignature", "tsAnyKeyword", "tsBooleanKeyword", "tsBigIntKeyword", "tsIntrinsicKeyword", "tsNeverKeyword", "tsNullKeyword", "tsNumberKeyword", "tsObjectKeyword", "tsStringKeyword", "tsSymbolKeyword", "tsUndefinedKeyword", "tsUnknownKeyword", "tsVoidKeyword", "tsThisType", "tsFunctionType", "tsConstructorType", "tsTypeReference", "typeName", "tsTypePredicate", "parameterName", "asserts", "tsTypeQuery", "exprName", "tsTypeLiteral", "tsArrayType", "tsTupleType", "elementTypes", "tsOptionalType", "tsRestType", "tsNamedTupleMember", "tsUnionType", "tsIntersectionType", "tsConditionalType", "checkType", "extendsType", "trueType", "falseType", "tsInferType", "tsParenthesizedType", "tsTypeOperator", "tsIndexedAccessType", "tsMappedType", "nameType", "tsLiteralType", "literal", "tsExpressionWithTypeArguments", "tsInterfaceDeclaration", "tsInterfaceBody", "tsTypeAliasDeclaration", "tsInstantiationExpression", "tsAsExpression", "tsTypeAssertion", "tsEnumDeclaration", "tsEnumMember", "tsModuleDeclaration", "tsModuleBlock", "tsImportType", "qualifier", "tsImportEqualsDeclaration", "moduleReference", "isExport", "tsExternalModuleReference", "tsNonNullExpression", "tsExportAssignment", "tsNamespaceExportDeclaration", "tsTypeAnnotation", "tsTypeParameterInstantiation", "tsTypeParameterDeclaration", "tsTypeParameter", "constraint", "NumberLiteral", "console", "trace", "RegexLiteral", "RestProperty", "SpreadProperty", "_generated", "cleanJSXElementLiteralChild", "child", "args", "lines", "value", "split", "lastNonEmptyLine", "i", "length", "match", "str", "line", "isFirstLine", "isLastLine", "isLastNonEmptyLine", "trimmedLine", "replace", "push", "stringLiteral", "_generated", "_cleanJSXElementLiteralChild", "buildChildren", "node", "elements", "i", "children", "length", "child", "isJSXText", "cleanJSXElementLiteralChild", "isJSXExpressionContainer", "expression", "isJSXEmptyExpression", "push", "_definitions", "isNode", "node", "VISITOR_KEYS", "type", "_isNode", "assertNode", "node", "isNode", "_node$type", "type", "JSON", "stringify", "TypeError", "_is", "assert", "type", "node", "opts", "is", "Error", "JSON", "stringify", "assertArrayExpression", "assertAssignmentExpression", "assertBinaryExpression", "assertInterpreterDirective", "assertDirective", "assertDirectiveLiteral", "assertBlockStatement", "assertBreakStatement", "assertCallExpression", "assertCatchClause", "assertConditionalExpression", "assertContinueStatement", "assertDebuggerStatement", "assertDoWhileStatement", "assertEmptyStatement", "assertExpressionStatement", "assertFile", "assertForInStatement", "assertForStatement", "assertFunctionDeclaration", "assertFunctionExpression", "assertIdentifier", "assertIfStatement", "assertLabeledStatement", "assertStringLiteral", "assertNumericLiteral", "assertNullLiteral", "assertBooleanLiteral", "assertRegExpLiteral", "assertLogicalExpression", "assertMemberExpression", "assertNewExpression", "assertProgram", "assertObjectExpression", "assertObjectMethod", "assertObjectProperty", "assertRestElement", "assertReturnStatement", "assertSequenceExpression", "assertParenthesizedExpression", "assertSwitchCase", "assertSwitchStatement", "assertThisExpression", "assertThrowStatement", "assertTryStatement", "assertUnaryExpression", "assertUpdateExpression", "assertVariableDeclaration", "assertVariableDeclarator", "assertWhileStatement", "assertWithStatement", "assertAssignmentPattern", "assertArrayPattern", "assertArrowFunctionExpression", "assertClassBody", "assertClassExpression", "assertClassDeclaration", "assertExportAllDeclaration", "assertExportDefaultDeclaration", "assertExportNamedDeclaration", "assertExportSpecifier", "assertForOfStatement", "assertImportDeclaration", "assertImportDefaultSpecifier", "assertImportNamespaceSpecifier", "assertImportSpecifier", "assertMetaProperty", "assertClassMethod", "assertObjectPattern", "assertSpreadElement", "assertSuper", "assertTaggedTemplateExpression", "assertTemplateElement", "assertTemplateLiteral", "assertYieldExpression", "assertAwaitExpression", "assertImport", "assertBigIntLiteral", "assertExportNamespaceSpecifier", "assertOptionalMemberExpression", "assertOptionalCallExpression", "assertClassProperty", "assertClassAccessorProperty", "assertClassPrivateProperty", "assertClassPrivateMethod", "assertPrivateName", "assertStaticBlock", "assertAnyTypeAnnotation", "assertArrayTypeAnnotation", "assertBooleanTypeAnnotation", "assertBooleanLiteralTypeAnnotation", "assertNullLiteralTypeAnnotation", "assertClassImplements", "assertDeclareClass", "assertDeclareFunction", "assertDeclareInterface", "assertDeclareModule", "assertDeclareModuleExports", "assertDeclareTypeAlias", "assertDeclareOpaqueType", "assertDeclareVariable", "assertDeclareExportDeclaration", "assertDeclareExportAllDeclaration", "assertDeclaredPredicate", "assertExistsTypeAnnotation", "assertFunctionTypeAnnotation", "assertFunctionTypeParam", "assertGenericTypeAnnotation", "assertInferredPredicate", "assertInterfaceExtends", "assertInterfaceDeclaration", "assertInterfaceTypeAnnotation", "assertIntersectionTypeAnnotation", "assertMixedTypeAnnotation", "assertEmptyTypeAnnotation", "assertNullableTypeAnnotation", "assertNumberLiteralTypeAnnotation", "assertNumberTypeAnnotation", "assertObjectTypeAnnotation", "assertObjectTypeInternalSlot", "assertObjectTypeCallProperty", "assertObjectTypeIndexer", "assertObjectTypeProperty", "assertObjectTypeSpreadProperty", "assertOpaqueType", "assertQualifiedTypeIdentifier", "assertStringLiteralTypeAnnotation", "assertStringTypeAnnotation", "assertSymbolTypeAnnotation", "assertThisTypeAnnotation", "assertTupleTypeAnnotation", "assertTypeofTypeAnnotation", "assertTypeAlias", "assertTypeAnnotation", "assertTypeCastExpression", "assertTypeParameter", "assertTypeParameterDeclaration", "assertTypeParameterInstantiation", "assertUnionTypeAnnotation", "assertVariance", "assertVoidTypeAnnotation", "assertEnumDeclaration", "assertEnumBooleanBody", "assertEnumNumberBody", "assertEnumStringBody", "assertEnumSymbolBody", "assertEnumBooleanMember", "assertEnumNumberMember", "assertEnumStringMember", "assertEnumDefaultedMember", "assertIndexedAccessType", "assertOptionalIndexedAccessType", "assertJSXAttribute", "assertJSXClosingElement", "assertJSXElement", "assertJSXEmptyExpression", "assertJSXExpressionContainer", "assertJSXSpreadChild", "assertJSXIdentifier", "assertJSXMemberExpression", "assertJSXNamespacedName", "assertJSXOpeningElement", "assertJSXSpreadAttribute", "assertJSXText", "assertJSXFragment", "assertJSXOpeningFragment", "assertJSXClosingFragment", "assertNoop", "assertPlaceholder", "assertV8IntrinsicIdentifier", "assertArgumentPlaceholder", "assertBindExpression", "assertImportAttribute", "assertDecorator", "assertDoExpression", "assertExportDefaultSpecifier", "assertRecordExpression", "assertTupleExpression", "assertDecimalLiteral", "assertModuleExpression", "assertTopicReference", "assertPipelineTopicExpression", "assertPipelineBareFunction", "assertPipelinePrimaryTopicReference", "assertTSParameterProperty", "assertTSDeclareFunction", "assertTSDeclareMethod", "assertTSQualifiedName", "assertTSCallSignatureDeclaration", "assertTSConstructSignatureDeclaration", "assertTSPropertySignature", "assertTSMethodSignature", "assertTSIndexSignature", "assertTSAnyKeyword", "assertTSBooleanKeyword", "assertTSBigIntKeyword", "assertTSIntrinsicKeyword", "assertTSNeverKeyword", "assertTSNullKeyword", "assertTSNumberKeyword", "assertTSObjectKeyword", "assertTSStringKeyword", "assertTSSymbolKeyword", "assertTSUndefinedKeyword", "assertTSUnknownKeyword", "assertTSVoidKeyword", "assertTSThisType", "assertTSFunctionType", "assertTSConstructorType", "assertTSTypeReference", "assertTSTypePredicate", "assertTSTypeQuery", "assertTSTypeLiteral", "assertTSArrayType", "assertTSTupleType", "assertTSOptionalType", "assertTSRestType", "assertTSNamedTupleMember", "assertTSUnionType", "assertTSIntersectionType", "assertTSConditionalType", "assertTSInferType", "assertTSParenthesizedType", "assertTSTypeOperator", "assertTSIndexedAccessType", "assertTSMappedType", "assertTSLiteralType", "assertTSExpressionWithTypeArguments", "assertTSInterfaceDeclaration", "assertTSInterfaceBody", "assertTSTypeAliasDeclaration", "assertTSInstantiationExpression", "assertTSAsExpression", "assertTSTypeAssertion", "assertTSEnumDeclaration", "assertTSEnumMember", "assertTSModuleDeclaration", "assertTSModuleBlock", "assertTSImportType", "assertTSImportEqualsDeclaration", "assertTSExternalModuleReference", "assertTSNonNullExpression", "assertTSExportAssignment", "assertTSNamespaceExportDeclaration", "assertTSTypeAnnotation", "assertTSTypeParameterInstantiation", "assertTSTypeParameterDeclaration", "assertTSTypeParameter", "assertStandardized", "assertExpression", "assertBinary", "assertScopable", "assertBlockParent", "assertBlock", "assertStatement", "assertTerminatorless", "assertCompletionStatement", "assertConditional", "assertLoop", "assertWhile", "assertExpressionWrapper", "assertFor", "assertForXStatement", "assertFunction", "assertFunctionParent", "assertPureish", "assertDeclaration", "assertPatternLike", "assertLVal", "assertTSEntityName", "assertLiteral", "assertImmutable", "assertUserWhitespacable", "assertMethod", "assertObjectMember", "assertProperty", "assertUnaryLike", "assertPattern", "assertClass", "assertModuleDeclaration", "assertExportDeclaration", "assertModuleSpecifier", "assertAccessor", "assertPrivate", "assertFlow", "assertFlowType", "assertFlowBaseAnnotation", "assertFlowDeclaration", "assertFlowPredicate", "assertEnumBody", "assertEnumMember", "assertJSX", "assertMiscellaneous", "assertTypeScript", "assertTSTypeElement", "assertTSType", "assertTSBaseType", "assertNumberLiteral", "console", "trace", "assertRegexLiteral", "assertRestProperty", "assertSpreadProperty", "_generated", "createTypeAnnotationBasedOnTypeof", "type", "stringTypeAnnotation", "numberTypeAnnotation", "voidTypeAnnotation", "booleanTypeAnnotation", "genericTypeAnnotation", "identifier", "anyTypeAnnotation", "Error", "_generated", "getQualifiedName", "node", "isIdentifier", "name", "id", "qualification", "removeTypeDuplicates", "nodes", "generics", "Map", "bases", "typeGroups", "Set", "types", "i", "length", "indexOf", "isAnyTypeAnnotation", "isFlowBaseAnnotation", "set", "type", "isUnionTypeAnnotation", "has", "concat", "add", "isGenericTypeAnnotation", "existing", "get", "typeParameters", "params", "push", "baseType", "genericName", "_generated", "_removeTypeDuplicates", "createFlowUnionType", "types", "flattened", "removeTypeDuplicates", "length", "unionTypeAnnotation", "_generated", "getQualifiedName", "node", "isIdentifier", "name", "right", "left", "removeTypeDuplicates", "nodes", "generics", "Map", "bases", "typeGroups", "Set", "types", "i", "length", "indexOf", "isTSAnyKeyword", "isTSBaseType", "set", "type", "isTSUnionType", "has", "push", "add", "isTSTypeReference", "typeParameters", "typeName", "existing", "get", "params", "concat", "baseType", "genericName", "_generated", "_removeTypeDuplicates", "_index", "createTSUnionType", "typeAnnotations", "types", "map", "type", "isTSTypeAnnotation", "typeAnnotation", "flattened", "removeTypeDuplicates", "length", "tsUnionType", "_index", "_definitions", "_generated", "has", "Function", "call", "bind", "Object", "prototype", "hasOwnProperty", "cloneIfNode", "obj", "deep", "withoutLoc", "commentsCache", "type", "cloneNodeInternal", "cloneIfNodeOrArray", "Array", "isArray", "map", "node", "cloneNode", "Map", "newNode", "isIdentifier", "name", "optional", "typeAnnotation", "NODE_FIELDS", "field", "keys", "isFile", "maybeCloneComments", "comments", "Error", "loc", "leadingComments", "innerComments", "trailingComments", "extra", "comment", "cache", "get", "value", "ret", "set", "_cloneNode", "clone", "node", "cloneNode", "_cloneNode", "cloneDeep", "node", "cloneNode", "_cloneNode", "cloneDeepWithoutLoc", "node", "cloneNode", "_cloneNode", "cloneWithoutLoc", "node", "cloneNode", "addComments", "node", "type", "comments", "key", "concat", "push", "_addComments", "addComment", "node", "type", "content", "line", "addComments", "value", "inherit", "key", "child", "parent", "Array", "from", "Set", "concat", "filter", "Boolean", "_inherit", "inheritInnerComments", "child", "parent", "inherit", "_inherit", "inheritLeadingComments", "child", "parent", "inherit", "_inherit", "inheritTrailingComments", "child", "parent", "inherit", "_inheritTrailingComments", "_inheritLeadingComments", "_inheritInnerComments", "inheritsComments", "child", "parent", "inheritTrailingComments", "inheritLeadingComments", "inheritInnerComments", "_constants", "removeComments", "node", "COMMENT_KEYS", "forEach", "key", "_definitions", "STANDARDIZED_TYPES", "FLIPPED_ALIAS_KEYS", "EXPRESSION_TYPES", "BINARY_TYPES", "SCOPABLE_TYPES", "BLOCKPARENT_TYPES", "BLOCK_TYPES", "STATEMENT_TYPES", "TERMINATORLESS_TYPES", "COMPLETIONSTATEMENT_TYPES", "CONDITIONAL_TYPES", "LOOP_TYPES", "WHILE_TYPES", "EXPRESSIONWRAPPER_TYPES", "FOR_TYPES", "FORXSTATEMENT_TYPES", "FUNCTION_TYPES", "FUNCTIONPARENT_TYPES", "PUREISH_TYPES", "DECLARATION_TYPES", "PATTERNLIKE_TYPES", "LVAL_TYPES", "TSENTITYNAME_TYPES", "LITERAL_TYPES", "IMMUTABLE_TYPES", "USERWHITESPACABLE_TYPES", "METHOD_TYPES", "OBJECTMEMBER_TYPES", "PROPERTY_TYPES", "UNARYLIKE_TYPES", "PATTERN_TYPES", "CLASS_TYPES", "MODULEDECLARATION_TYPES", "EXPORTDECLARATION_TYPES", "MODULESPECIFIER_TYPES", "ACCESSOR_TYPES", "PRIVATE_TYPES", "FLOW_TYPES", "FLOWTYPE_TYPES", "FLOWBASEANNOTATION_TYPES", "FLOWDECLARATION_TYPES", "FLOWPREDICATE_TYPES", "ENUMBODY_TYPES", "ENUMMEMBER_TYPES", "JSX_TYPES", "MISCELLANEOUS_TYPES", "TYPESCRIPT_TYPES", "TSTYPEELEMENT_TYPES", "TSTYPE_TYPES", "TSBASETYPE_TYPES", "_generated", "_generated2", "toBlock", "node", "parent", "isBlockStatement", "blockNodes", "isEmptyStatement", "isStatement", "isFunction", "returnStatement", "expressionStatement", "blockStatement", "_toBlock", "ensureBlock", "node", "key", "result", "toBlock", "_isValidIdentifier", "_helperValidatorIdentifier", "toIdentifier", "input", "name", "c", "isIdentifierChar", "codePointAt", "replace", "match", "toUpperCase", "isValidIdentifier", "_toIdentifier", "toBindingIdentifierName", "name", "toIdentifier", "_generated", "_generated2", "toComputedKey", "node", "key", "property", "computed", "isIdentifier", "stringLiteral", "name", "_generated", "toExpression", "node", "isExpressionStatement", "expression", "isExpression", "isClass", "type", "isFunction", "Error", "_definitions", "traverseFast", "node", "enter", "opts", "keys", "VISITOR_KEYS", "type", "key", "subNode", "Array", "isArray", "_constants", "CLEAR_KEYS", "CLEAR_KEYS_PLUS_COMMENTS", "COMMENT_KEYS", "removeProperties", "node", "opts", "map", "preserveComments", "key", "undefined", "Object", "keys", "symbols", "getOwnPropertySymbols", "sym", "_traverseFast", "_removeProperties", "removePropertiesDeep", "tree", "opts", "traverseFast", "removeProperties", "_generated", "_cloneNode", "_removePropertiesDeep", "toKeyAlias", "node", "key", "alias", "kind", "increment", "isIdentifier", "name", "isStringLiteral", "JSON", "stringify", "value", "removePropertiesDeep", "cloneNode", "computed", "static", "uid", "Number", "MAX_SAFE_INTEGER", "_generated", "getBindingIdentifiers", "node", "duplicates", "outerOnly", "search", "concat", "ids", "Object", "create", "length", "id", "shift", "keys", "type", "isIdentifier", "name", "push", "isExportDeclaration", "isExportAllDeclaration", "isDeclaration", "declaration", "isFunctionDeclaration", "isFunctionExpression", "i", "key", "nodes", "Array", "isArray", "DeclareClass", "DeclareFunction", "DeclareModule", "DeclareVariable", "DeclareInterface", "DeclareTypeAlias", "DeclareOpaqueType", "InterfaceDeclaration", "TypeAlias", "OpaqueType", "CatchClause", "LabeledStatement", "UnaryExpression", "AssignmentExpression", "ImportSpecifier", "ImportNamespaceSpecifier", "ImportDefaultSpecifier", "ImportDeclaration", "ExportSpecifier", "ExportNamespaceSpecifier", "ExportDefaultSpecifier", "FunctionDeclaration", "FunctionExpression", "ArrowFunctionExpression", "ObjectMethod", "ClassMethod", "ClassPrivateMethod", "ForInStatement", "ForOfStatement", "ClassDeclaration", "ClassExpression", "RestElement", "UpdateExpression", "ObjectProperty", "AssignmentPattern", "ArrayPattern", "ObjectPattern", "VariableDeclaration", "VariableDeclarator", "_getBindingIdentifiers", "_generated", "_generated2", "_cloneNode", "gatherSequenceExpressions", "nodes", "scope", "declars", "exprs", "ensureLastUndefined", "node", "isEmptyStatement", "isExpression", "push", "isExpressionStatement", "expression", "isVariableDeclaration", "kind", "declar", "declarations", "bindings", "getBindingIdentifiers", "key", "Object", "keys", "id", "cloneNode", "init", "assignmentExpression", "isIfStatement", "consequent", "buildUndefinedNode", "alternate", "conditionalExpression", "test", "isBlockStatement", "body", "indexOf", "length", "sequenceExpression", "_gatherSequenceExpressions", "toSequenceExpression", "nodes", "scope", "length", "declars", "result", "gatherSequenceExpressions", "declar", "push", "_generated", "_generated2", "toStatement", "node", "ignore", "isStatement", "mustHaveId", "newType", "isClass", "isFunction", "isAssignmentExpression", "expressionStatement", "id", "Error", "type", "_isValidIdentifier", "_generated", "valueToNode", "objectToString", "Function", "call", "bind", "Object", "prototype", "toString", "isRegExp", "value", "isPlainObject", "proto", "getPrototypeOf", "undefined", "identifier", "booleanLiteral", "nullLiteral", "stringLiteral", "result", "Number", "isFinite", "numericLiteral", "Math", "abs", "numerator", "isNaN", "binaryExpression", "is", "unaryExpression", "pattern", "source", "flags", "match", "regExpLiteral", "Array", "isArray", "arrayExpression", "map", "props", "key", "keys", "nodeKey", "isValidIdentifier", "push", "objectProperty", "objectExpression", "Error", "_generated", "appendToMemberExpression", "member", "append", "computed", "object", "memberExpression", "property", "_constants", "_inheritsComments", "inherits", "child", "parent", "key", "INHERIT_KEYS", "optional", "Object", "keys", "force", "inheritsComments", "_generated", "_", "prependToMemberExpression", "member", "prepend", "isSuper", "object", "Error", "memberExpression", "_getBindingIdentifiers", "getOuterBindingIdentifiers", "node", "duplicates", "getBindingIdentifiers", "_definitions", "traverse", "node", "handlers", "state", "enter", "exit", "traverseSimpleImpl", "ancestors", "keys", "VISITOR_KEYS", "type", "key", "subNode", "Array", "isArray", "i", "length", "child", "push", "index", "pop", "_getBindingIdentifiers", "isBinding", "node", "parent", "grandparent", "type", "keys", "getBindingIdentifiers", "i", "length", "key", "val", "Array", "isArray", "indexOf", "_generated", "_constants", "isLet", "node", "isVariableDeclaration", "kind", "BLOCK_SCOPED_SYMBOL", "_generated", "_isLet", "isBlockScoped", "node", "isFunctionDeclaration", "isClassDeclaration", "isLet", "_isType", "_generated", "isImmutable", "node", "isType", "type", "isIdentifier", "name", "_definitions", "isNodesEquivalent", "a", "b", "type", "fields", "Object", "keys", "NODE_FIELDS", "visitorKeys", "VISITOR_KEYS", "field", "val_a", "val_b", "Array", "isArray", "length", "i", "includes", "key", "isReferenced", "node", "parent", "grandparent", "type", "property", "computed", "object", "init", "body", "key", "superClass", "right", "source", "local", "id", "_generated", "isScope", "node", "parent", "isBlockStatement", "isFunction", "isCatchClause", "isPattern", "isScopable", "_generated", "isSpecifierDefault", "specifier", "isImportDefaultSpecifier", "isIdentifier", "imported", "exported", "name", "_isValidIdentifier", "RESERVED_WORDS_ES3_ONLY", "Set", "isValidES3Identifier", "name", "isValidIdentifier", "has", "_generated", "_constants", "isVar", "node", "isVariableDeclaration", "kind", "BLOCK_SCOPED_SYMBOL", "require_generated", "__commonJSMin", "_isReactComponent", "_isCompatTag", "_buildChildren", "_assertNode", "_generated", "key", "_exportNames", "exports", "_createTypeAnnotationBasedOnTypeof", "_createFlowUnionType", "_createTSUnionType", "_generated2", "_uppercase", "_cloneNode", "_clone", "_cloneDeep", "_cloneDeepWithoutLoc", "_cloneWithoutLoc", "_addComment", "_addComments", "_inheritInnerComments", "_inheritLeadingComments", "_inheritsComments", "_inheritTrailingComments", "_removeComments", "_generated3", "_constants", "_ensureBlock", "_toBindingIdentifierName", "_toBlock", "_toComputedKey", "_toExpression", "_toIdentifier", "_toKeyAlias", "_toSequenceExpression", "_toStatement", "_valueToNode", "_definitions", "_appendToMemberExpression", "_inherits", "_prependToMemberExpression", "_removeProperties", "_removePropertiesDeep", "_removeTypeDuplicates", "_getBindingIdentifiers", "_getOuterBindingIdentifiers", "_traverse", "_traverseFast", "_shallowEqual", "_is", "_isBinding", "_isBlockScoped", "_isImmutable", "_isLet", "_isNode", "_isNodesEquivalent", "_isPlaceholderType", "_isReferenced", "_isScope", "_isSpecifierDefault", "_isType", "_isValidES3Identifier", "_isValidIdentifier", "_isVar", "_matchesPattern", "_validate", "_buildMatchMemberExpression", "_generated4", "_generated5", "react", "isReactComponent", "isCompatTag", "buildChildren", "require_binaryOperation", "__commonJSMin", "exports", "binaryOperation", "operator", "left", "right", "require_lib", "__commonJSMin", "exports", "module", "parser_1", "b", "binaryOperation_1", "expressionToConstant", "expression", "options", "constant", "toConstant", "result_1", "i", "element", "spread", "isSpreadable", "left", "right", "args", "arg", "object", "member", "canCallMethod", "callee", "test", "result_2", "property", "key", "value", "argument", "result_3", "quasi", "result", "shallowEqual", "a", "EMPTY_OBJECT", "lastSrc", "lastConstants", "lastOptions", "lastResult", "lastWasConstant", "isConstant", "src", "constants", "ast", "_a", "require_handle_filters", "__commonJSMin", "exports", "module", "dirname", "constantinople", "walk", "error", "runFilter", "handleFilters", "ast", "filters", "options", "filterAliases", "node", "dir", "handleNestedFilters", "text", "getBodyAsText", "attrs", "getAttributes", "filterWithFallback", "firstFilter", "filename", "filterFileWithFallback", "filter", "funcName", "filterName", "getFilterName", "ex", "file", "attr", "opts", "opt", "require_pug_filters", "__commonJSMin", "exports", "require_pug_linker", "__commonJSMin", "exports", "module", "assert", "walk", "error", "link", "ast", "extendsNode", "hasExtends", "checkExtendPosition", "applyIncludes", "findDeclaredBlocks", "mixins", "expectedBlocks", "addNode", "node", "parent", "extend", "foundBlockNames", "expectedBlock", "name", "definitions", "flattenParentBlocks", "parentBlocks", "accumulator", "parentBlock", "stack", "parentBlockList", "child", "replace", "childAST", "removeBlocks", "applyYield", "block", "replaced", "defaultYieldLocation", "res", "i", "legitExtendsReached", "require_doctypes", "__commonJSMin", "exports", "module", "require_dependencies", "__commonJSMin", "exports", "module", "require_internals", "__commonJSMin", "exports", "module", "require_sources", "__commonJSMin", "exports", "module", "require_build", "__commonJSMin", "exports", "module", "fs", "dependencies", "internals", "sources", "build", "functions", "fns", "fn", "i", "name", "require_pug_runtime", "__commonJSMin", "exports", "pug_has_own_property", "pug_merge", "a", "b", "attrs", "key", "valA", "pug_style", "valB", "pug_classes", "pug_classes_array", "val", "escaping", "classString", "className", "padding", "escapeEnabled", "i", "pug_escape", "pug_classes_object", "out", "style", "pug_attr", "escaped", "terse", "type", "pug_attrs", "obj", "pug_match_html", "_html", "html", "regexResult", "result", "lastIndex", "escape", "pug_rethrow", "err", "filename", "lineno", "str", "context", "lines", "start", "end", "ex", "line", "curr", "require_js_stringify", "__commonJSMin", "exports", "module", "stringify", "obj", "require_pug_attrs", "__commonJSMin", "exports", "module", "assert", "constantinople", "runtime", "stringify", "isConstant", "src", "toConstant", "compileAttrs", "attrs", "options", "attr", "buf", "classes", "classEscaping", "addAttribute", "key", "val", "mustEscape", "str", "last", "classesBuf", "cls", "i", "require_void_elements", "__commonJSMin", "exports", "module", "t", "__importStar", "FLIPPED_ALIAS_KEYS", "TYPES", "key", "v", "explode", "input", "results", "aliases", "concreteKey", "exports", "t", "__importStar", "explode_1", "__importDefault", "VISITOR_KEYS", "key", "v", "simple", "visitors", "vis", "node", "state", "recurse", "visitor", "subNode", "subSubNode", "exports", "ancestor", "ancestors", "isNew", "recursive", "require_assert_never", "__commonJSMin", "exports", "assertNever", "value", "noThrow", "t", "__importStar", "isReferenced", "node", "parent", "exports", "assert_never_1", "__importDefault", "babel_walk_1", "t", "__importStar", "reference_1", "isScope", "node", "isBlockScope", "declaresArguments", "declaresThis", "LOCALS_SYMBOL", "getLocals", "declareLocals", "setLocal", "name", "declareFunction", "param", "declarePattern", "id", "parent", "prop", "element", "declareModuleSpecifier", "_state", "parents", "firstPass", "declaration", "secondPass", "state", "lastParent", "_a", "findGlobals", "ast", "globals", "groupedGlobals", "existing", "nodes", "a", "b", "exports", "parser_1", "babel_walk_1", "t", "__importStar", "globals_1", "__importDefault", "parseOptions", "addWith", "obj", "src", "exclude", "ast", "e", "objAst", "excludeSet", "g", "vars", "global", "v", "declareLocal", "local", "result", "args", "unwrapped", "unwrapReturns", "exports", "unwrapReturnsVisitors", "_node", "_state", "_c", "node", "state", "value", "charArray", "str", "module", "require_pug_code_gen", "__commonJSMin", "exports", "module", "doctypes", "makeError", "buildRuntime", "runtime", "compileAttrs", "selfClosing", "constantinople", "stringify", "addWith", "WHITE_SPACE_SENSITIVE_TAGS", "INTERNAL_VARIABLES", "generateCode", "Compiler", "ast", "options", "isConstant", "src", "toConstant", "node", "name", "message", "code", "err", "mixinNames", "i", "mixin", "x", "y", "js", "globals", "str", "self", "offset", "newline", "parent", "debug", "msg", "block", "escapePrettyMode", "pp", "doctype", "args", "attrs", "attrsBlocks", "dynamic", "key", "_indents", "val", "mixin_start", "rest", "mixin_end", "tag", "interpolated", "bufferName", "tagCanInline", "text", "comment", "cond", "test", "loop", "each", "indexVarName", "attributeBlocks", "buffer", "res", "attrBlock", "isInline", "require_wrap", "__commonJSMin", "exports", "module", "runtime", "wrap", "template", "templateName", "require_lib", "__commonJSMin", "exports", "fs", "path", "lex", "stripComments", "parse", "load", "filters", "link", "generateCode", "runtime", "runtimeWrap", "applyPlugins", "value", "options", "plugins", "name", "plugin", "findReplacementFunc", "eligiblePlugins", "compileBody", "str", "debug_sources", "dependencies", "ast", "lexOptions", "key", "contents", "tokens", "token", "parseOptions", "filename", "source", "loadOptions", "replacementFunc", "filtersSet", "js", "handleTemplateCache", "templ", "parsed", "res", "body", "fn", "ex", "out", "PostProcessResult", "exports", "TranslatorCollection", "keys", "config", "preserveBase", "el", "res", "base", "args", "key", "isTranslatorConfig", "v", "createTranslatorContext", "visitor", "node", "metadata", "instance", "nodeMetadata", "require_he", "__commonJSMin", "exports", "module", "root", "freeExports", "freeModule", "freeGlobal", "regexAstralSymbols", "regexAsciiWhitelist", "regexBmpWhitelist", "regexEncodeNonAscii", "encodeMap", "regexEscape", "escapeMap", "regexInvalidEntity", "regexInvalidRawCodePoint", "regexDecode", "decodeMap", "decodeMapLegacy", "decodeMapNumeric", "invalidReferenceCodePoints", "stringFromCharCode", "object", "hasOwnProperty", "has", "propertyName", "contains", "array", "value", "index", "length", "merge", "options", "defaults", "result", "key", "codePointToSymbol", "codePoint", "strict", "output", "parseError", "hexEscape", "decEscape", "message", "encode", "string", "encodeEverything", "useNamedReferences", "allowUnsafeSymbols", "escapeCodePoint", "escapeBmpSymbol", "symbol", "$0", "high", "low", "decode", "html", "$1", "$2", "$3", "$4", "$5", "$6", "$7", "$8", "semicolon", "decDigits", "hexDigits", "reference", "next", "escape", "he", "require_node", "__commonJSMin", "exports", "he_1", "Node", "parentNode", "range", "_this", "children", "child", "val", "require_type", "__commonJSMin", "exports", "NodeType", "require_comment", "__commonJSMin", "exports", "__extends", "extendStatics", "d", "b", "p", "__", "__importDefault", "mod", "node_1", "type_1", "CommentNode", "_super", "rawText", "parentNode", "range", "_this", "require_lib", "__commonJSMin", "exports", "ElementType", "isTag", "elem", "require_node", "__commonJSMin", "exports", "__extends", "extendStatics", "d", "b", "p", "__", "__assign", "t", "s", "i", "n", "domelementtype_1", "nodeTypes", "Node", "type", "_a", "parent", "prev", "next", "recursive", "cloneNode", "DataNode", "_super", "data", "_this", "Text", "Comment", "ProcessingInstruction", "name", "NodeWithChildren", "children", "Document", "Element", "attribs", "_b", "isTag", "node", "isCDATA", "isText", "isComment", "isDirective", "isDocument", "hasChildren", "result", "cloneChildren", "clone_1", "child", "clone_2", "clone_3", "instruction", "childs", "require_lib", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "domelementtype_1", "node_1", "reWhitespace", "defaultOpts", "DomHandler", "callback", "options", "elementCB", "parser", "error", "elem", "name", "attribs", "type", "element", "data", "normalizeWhitespace", "lastNode", "node", "text", "parent", "previousSibling", "require_entities", "__commonJSMin", "exports", "module", "require_legacy", "__commonJSMin", "exports", "module", "require_xml", "__commonJSMin", "exports", "module", "require_decode", "__commonJSMin", "exports", "module", "require_decode_codepoint", "__commonJSMin", "exports", "__importDefault", "mod", "decode_json_1", "fromCodePoint", "codePoint", "output", "decodeCodePoint", "require_decode", "__commonJSMin", "exports", "__importDefault", "mod", "entities_json_1", "legacy_json_1", "xml_json_1", "decode_codepoint_1", "strictEntityRe", "getStrictDecoder", "map", "replace", "getReplacer", "str", "sorter", "a", "b", "legacy", "keys", "i", "j", "re", "replacer", "secondChar", "require_encode", "__commonJSMin", "exports", "__importDefault", "mod", "xml_json_1", "inverseXML", "getInverseObj", "xmlReplacer", "getInverseReplacer", "getASCIIEncoder", "entities_json_1", "inverseHTML", "htmlReplacer", "getInverse", "obj", "inverse", "name", "single", "multiple", "_i", "_a", "k", "start", "end", "count", "reNonASCII", "getCodePoint", "str", "c", "singleCharReplacer", "re", "data", "reEscapeChars", "escape", "escapeUTF8", "require_lib", "__commonJSMin", "exports", "decode_1", "encode_1", "decode", "data", "level", "decodeStrict", "encode", "encode_2", "decode_2", "require_foreignNames", "__commonJSMin", "exports", "require_lib", "__commonJSMin", "exports", "__assign", "t", "s", "i", "n", "p", "__createBinding", "o", "m", "k", "k2", "__setModuleDefault", "v", "__importStar", "mod", "result", "ElementType", "entities_1", "foreignNames_1", "unencodedElements", "formatAttributes", "attributes", "opts", "key", "_a", "_b", "value", "singleTag", "render", "node", "options", "nodes", "output", "renderNode", "renderDirective", "renderComment", "renderCdata", "renderTag", "renderText", "foreignModeIntegrationPoints", "foreignElements", "elem", "tag", "attribs", "data", "require_stringify", "__commonJSMin", "exports", "__importDefault", "mod", "domhandler_1", "dom_serializer_1", "domelementtype_1", "getOuterHTML", "node", "options", "getInnerHTML", "getText", "textContent", "innerText", "require_traversal", "__commonJSMin", "exports", "domhandler_1", "emptyArray", "getChildren", "elem", "_a", "getParent", "getSiblings", "_b", "parent", "siblings", "prev", "next", "getAttributeValue", "name", "hasAttrib", "getName", "nextElementSibling", "prevElementSibling", "require_manipulation", "__commonJSMin", "exports", "removeElement", "elem", "childs", "replaceElement", "replacement", "prev", "next", "parent", "appendChild", "child", "sibling", "append", "currNext", "prependChild", "prepend", "require_querying", "__commonJSMin", "exports", "domhandler_1", "filter", "test", "node", "recurse", "limit", "find", "nodes", "result", "_i", "nodes_1", "elem", "children", "findOneChild", "findOne", "i", "checked", "existsOne", "findAll", "_a", "stack", "require_legacy", "__commonJSMin", "exports", "domhandler_1", "querying_1", "Checks", "name", "elem", "type", "data", "getAttribCheck", "attrib", "value", "combineFuncs", "a", "b", "compileTest", "options", "funcs", "key", "testElement", "node", "test", "getElements", "nodes", "recurse", "limit", "getElementById", "id", "getElementsByTagName", "tagName", "getElementsByTagType", "require_helpers", "__commonJSMin", "exports", "domhandler_1", "removeSubsets", "nodes", "idx", "node", "ancestor", "compareDocumentPosition", "nodeA", "nodeB", "aParents", "bParents", "current", "maxIdx", "sharedParent", "siblings", "aSibling", "bSibling", "uniqueSort", "i", "arr", "a", "b", "relative", "require_feeds", "__commonJSMin", "exports", "stringify_1", "legacy_1", "getFeed", "doc", "feedRoot", "getOneElement", "isValidFeed", "getAtomFeed", "getRssFeed", "_a", "childs", "feed", "item", "children", "entry", "getMediaElements", "addConditionally", "href", "description", "fetch", "pubDate", "updated", "_b", "MEDIA_KEYS_STRING", "MEDIA_KEYS_INT", "where", "elem", "attribs", "media", "_i", "MEDIA_KEYS_STRING_1", "attrib", "MEDIA_KEYS_INT_1", "tagName", "node", "recurse", "obj", "prop", "val", "value", "require_lib", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "__exportStar", "p", "domhandler_1", "require_boolbase", "__commonJSMin", "exports", "module", "require_types", "__commonJSMin", "exports", "SelectorType", "AttributeAction", "require_parse", "__commonJSMin", "exports", "types_1", "reName", "reEscape", "actionTypes", "unpackPseudos", "isTraversal", "selector", "stripQuotesFromPseudos", "funescape", "_", "escaped", "escapedWhitespace", "high", "unescapeCSS", "str", "isQuote", "c", "isWhitespace", "parse", "subselects", "endIndex", "parseSelector", "selectorIndex", "tokens", "getName", "offset", "match", "name", "stripWhitespace", "readValueWithParenthesis", "start", "counter", "isEscaped", "pos", "slashCount", "ensureNotTraversal", "addTraversal", "type", "addSpecialAttribute", "action", "finalizeSubselector", "loop", "firstChar", "name_1", "namespace", "possibleAction", "value", "ignoreCase", "quote", "sectionEnd", "valueStart", "forceIgnore", "attributeSelector", "name_2", "data", "quot", "name_3", "require_stringify", "__commonJSMin", "exports", "__spreadArray", "to", "from", "pack", "l", "ar", "types_1", "attribValChars", "pseudoValChars", "charsToEscapeInAttributeValue", "c", "charsToEscapeInPseudoValue", "charsToEscapeInName", "stringify", "selector", "token", "stringifyToken", "index", "arr", "getNamespace", "getNamespacedName", "escapeName", "name_1", "getActionValue", "action", "namespace", "str", "charsToEscape", "lastIdx", "ret", "i", "require_commonjs", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "parse_1", "stringify_1", "require_procedure", "__commonJSMin", "exports", "isTraversal", "t", "require_sort", "__commonJSMin", "exports", "css_what_1", "procedure_1", "attributes", "sortByProcedure", "arr", "procs", "getProcedure", "i", "procNew", "j", "token", "proc", "cur", "require_attributes", "__commonJSMin", "exports", "boolbase_1", "reChars", "escapeRegex", "value", "caseInsensitiveAttributes", "shouldIgnoreCase", "selector", "options", "next", "data", "adapter", "name", "elem", "attr", "len", "regex", "_a", "_b", "regex_1", "whitespace", "ZERO", "NINE", "parse", "formula", "idx", "a", "sign", "readSign", "number", "readNumber", "skipWhitespace", "start", "value", "exports", "boolbase_1", "__importDefault", "compile", "parsed", "a", "b", "index", "absA", "bMod", "exports", "generate", "n", "aPos_1", "minValue_1", "val", "parse_js_1", "exports", "compile_js_1", "nthCheck", "formula", "sequence", "require_filters", "__commonJSMin", "exports", "__importDefault", "mod", "nth_check_1", "boolbase_1", "getChildFunc", "next", "adapter", "elem", "parent", "text", "_a", "itext", "rule", "equals", "func", "siblings", "pos", "i", "currentSibling", "_rule", "options", "context", "dynamicStatePseudo", "name", "require_pseudos", "__commonJSMin", "exports", "elem", "_a", "adapter", "equals", "firstChild", "siblings", "i", "elemName", "currentSibling", "sibling", "verifyPseudoArgs", "func", "name", "subselect", "require_aliases", "__commonJSMin", "exports", "require_subselects", "__commonJSMin", "exports", "__spreadArray", "to", "from", "pack", "l", "ar", "boolbase_1", "procedure_1", "ensureIsTag", "next", "adapter", "elem", "getNextSiblings", "siblings", "elemIndex", "is", "token", "options", "context", "compileToken", "opts", "func", "subselect", "_context", "s", "compiled", "hasElement", "_a", "shouldTestNextSiblings", "childs", "nextElements", "require_pseudo_selectors", "__commonJSMin", "exports", "boolbase_1", "css_what_1", "filters_1", "pseudos_1", "aliases_1", "subselects_1", "compilePseudoSelector", "next", "selector", "options", "context", "compileToken", "name", "data", "alias", "pseudo_1", "elem", "require_general", "__commonJSMin", "exports", "attributes_1", "pseudo_selectors_1", "css_what_1", "compileGeneralSelector", "next", "selector", "options", "context", "compileToken", "adapter", "equals", "name_1", "elem", "current", "isFalseCache_1", "parent", "siblings", "i", "currentSibling", "previous", "lastElement", "require_compile", "__commonJSMin", "exports", "__importDefault", "mod", "css_what_1", "boolbase_1", "sort_1", "procedure_1", "general_1", "subselects_1", "compile", "selector", "options", "context", "next", "compileUnsafe", "token", "compileToken", "includesScopePseudo", "t", "data", "DESCENDANT_TOKEN", "FLEXIBLE_DESCENDANT_TOKEN", "SCOPE_TOKEN", "absolutize", "_a", "adapter", "hasContext", "e", "parent", "_i", "token_1", "isArrayContext", "finalContext", "shouldTestNextSiblings", "query", "rules", "first", "second", "compileRules", "reduceRules", "previous", "rule", "a", "b", "elem", "require_lib", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "DomUtils", "boolbase_1", "compile_1", "subselects_1", "defaultEquals", "a", "b", "defaultOptions", "convertOptionFormats", "options", "_a", "_b", "_c", "_d", "opts", "wrapCompile", "func", "selector", "context", "getSelectorFunc", "searchFunc", "query", "elements", "filteredElements", "prepareContext", "elems", "adapter", "shouldTestNextSiblings", "appendNextSiblings", "elem", "elemsLength", "i", "nextSiblings", "is", "pseudo_selectors_1", "require_back", "__commonJSMin", "exports", "arr_back", "arr", "require_matcher", "__commonJSMin", "exports", "__importDefault", "mod", "type_1", "isTag", "node", "getAttributeValue", "elem", "name", "getName", "getChildren", "getParent", "getText", "removeSubsets", "nodes", "idx", "ancestor", "replace", "existsOne", "test", "elems", "getSiblings", "parent", "hasAttrib", "findOne", "l", "el", "childs", "findAll", "result", "j", "require_void_tag", "__commonJSMin", "exports", "VoidTag", "addClosingSlash", "tags", "set", "tag", "attrs", "innerHTML", "closingSpace", "closingSlash", "require_text", "__commonJSMin", "exports", "__extends", "extendStatics", "d", "b", "p", "__", "__importDefault", "mod", "he_1", "node_1", "type_1", "TextNode", "_super", "rawText", "parentNode", "range", "_this", "text", "trimText", "i", "startPos", "endPos", "hasLeadingSpace", "hasTrailingSpace", "require_html", "__commonJSMin", "exports", "__extends", "extendStatics", "d", "b", "p", "__", "__assign", "t", "s", "i", "n", "__spreadArray", "to", "from", "pack", "l", "ar", "__importDefault", "mod", "css_select_1", "he_1", "back_1", "matcher_1", "void_tag_1", "comment_1", "node_1", "text_1", "type_1", "decode", "val", "Htags", "Dtags", "Ftags", "tableTags", "htmlTags", "kBlockElements", "addToKBlockElement", "args", "_i", "addToSet", "array", "index", "element", "_a", "args_1", "arg", "DOMTokenList", "valuesInit", "afterUpdate", "c", "c1", "c2", "HTMLElement", "_super", "tagName", "keyAttrs", "rawAttrs", "parentNode", "range", "voidTag", "_this", "classList", "cls", "attr", "node", "child", "oldNode", "newNode", "children", "newname", "pre", "cur", "content", "currentBlock", "blocks", "dfs", "text", "block", "tag", "attrs", "r", "parse", "nodes", "resetParent", "options", "parent", "idx", "pattern", "childNode", "res", "indention", "write", "str", "idStr", "classStr", "o", "selector", "upperCasedTagName", "re", "stack", "currentNodeReference", "id", "mapChild", "el", "old", "findOne", "test", "elems", "elem", "el_1", "e", "key", "ret_attrs", "match", "name", "value", "k2", "k", "attributes", "where", "html", "_b", "_c", "find", "kMarkupPattern", "kAttributePattern", "kSelfClosingElements", "kElementsClosedByOpening", "kElementsClosedByClosing", "frameflag", "base_parse", "data", "elements", "element_names", "kBlockTextElements", "it", "kIgnoreElements", "element_should_be_ignore", "is_block_text_element", "createRange", "startPos", "endPos", "frameFlagOffset", "root", "currentParent", "lastTextPos", "noNestedTagIndex", "lowerCaseTagName", "dataEndPos", "matchText", "leadingSlash", "closingSlash", "matchLength", "tagStartPos", "tagEndPos", "attMatch", "isQuoted", "parentTagName", "tagEndPos_1", "tagStartPos_1", "closeMarkup", "closeIndex", "textEndPos", "_loop_1", "last", "oneBefore", "require_parse", "__commonJSMin", "exports", "html_1", "require_valid", "__commonJSMin", "exports", "html_1", "valid", "data", "options", "stack", "require_dist", "__commonJSMin", "exports", "__importDefault", "mod", "comment_1", "html_1", "node_1", "text_1", "type_1", "parse_1", "valid_1", "parse", "data", "options", "config_1", "trimNewLines", "s", "exports", "surround", "source", "surroundStr", "isWhiteSpaceOnly", "splitSpecial", "lines", "strLen", "startPos", "char", "newLineChar", "endPos", "tagSurround", "content", "res", "text", "i", "leadingSpace", "trailingSpace", "slicedText", "getTrailingWhitespaceInfo", "minI", "token", "truthyStr", "v", "value", "tryParseWithNativeDom", "html", "doc", "e", "ActiveXObject", "getNodeHtmlParser", "parseHTML", "options", "nodeHtmlParse", "perfStart", "el", "perfStop", "getChildNodes", "node", "isNodeList", "n", "label", "utilities_1", "translator_1", "exports", "node", "content", "strongDelimiter", "emDelimiter", "listKind", "bulletMarker", "indentLevel", "listItemNumber", "indentationLevel", "parent", "codeFence", "codeBlockStyle", "visitor", "delimiter", "_b", "_a", "a", "b", "padding", "language", "nodeMetadata", "rawRows", "text", "rows", "colWidth", "row", "cols", "c", "i", "maxCols", "res", "caption", "rowNumber", "w", "options", "href", "encodedHref", "chr", "title", "src", "alt", "node_html_parser_1", "exports", "isTextNode", "node", "isCommentNode", "isElementNode", "nodes_1", "utilities_1", "translator_1", "config_1", "Visitor", "instance", "rootNode", "fileName", "url", "id", "u", "s", "startPos", "spaceIfRepeatingChar", "result", "count", "newLines", "node", "translators", "visit", "res", "childNodes", "child", "translator", "text", "metadata", "lineStartEscape", "globalEscape", "textReplace", "pattern", "r", "textOnly", "translatorCfgOrFactory", "_a", "_b", "cfg", "ctx", "startPosOuter", "postRes", "exports", "getMarkdownForHtmlNodes", "visitor", "idx", "maxConsecutiveNewlines", "translator_1", "config_1", "utilities_1", "visitor_1", "NodeHtmlMarkdown", "options", "customTranslators", "customCodeBlockTranslators", "ignoredElements", "_b", "_a", "blockElements", "_d", "_c", "el", "elems", "cfg", "htmlOrFiles", "opt", "inputIsCollection", "inputFiles", "outputFiles", "fileName", "html", "parsedHtml", "exports", "main_1", "exports", "translator_1", "pug_to_markdown_exports", "__export", "pug_to_markdown_default", "__toCommonJS", "import_pug", "import_node_html_markdown", "import_react", "useForm", "transformDeps", "transform", "input", "setInput", "output", "setOutput", "import_api", "import_jsx_runtime", "DefaultForm", "inputProps", "outputProps", "Actions", "Options", "Output", "Input", "import_jsx_runtime", "pug_to_markdown_default", "formProps", "useForm", "value", "html", "pug", "DefaultForm"]
}
