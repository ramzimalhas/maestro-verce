{
  "version": 3,
  "sources": ["../node_modules/strings-to-regex/lib/utils/trie.js", "../node_modules/escape-string-regexp/index.js", "../node_modules/strings-to-regex/lib/utils/pattern.js", "../node_modules/strings-to-regex/lib/index.js", "../src/string-to-regex.tsx", "../src/lib/use-form.ts", "../src/components/DefaultForm.tsx"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.build = build;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar leafNode = new Map();\n\nfunction groupWordsByHeadChar(words, firstChar) {\n  var matched = [];\n  var missed = [];\n  words.forEach(function (word) {\n    if (word[0] === firstChar) {\n      matched.push(word);\n    } else {\n      missed.push(word);\n    }\n  });\n  return [matched, missed];\n}\n/**\n * Arrange a head character and its suffixes into a trie.\n * Flatten leaves of the character trie containing a single letter.\n * For example, { f: { o: { o: { '': {}, bar: {} } } } } flattens\n * to { foo: { '': {}, bar: {} } }\n *\n * @param headChar A character prefix\n * @param tailGroup A character trie of suffixes to headChar\n * @returns A character trie with tailGroup branching from headChar\n */\n\n\nfunction mergeGroups(headChar, tailGroup) {\n  if (tailGroup.size !== 1) {\n    return new Map([[headChar, tailGroup]]);\n  }\n\n  var _tailGroup$entries$ne = _slicedToArray(tailGroup.entries().next().value, 2),\n      onlyTail = _tailGroup$entries$ne[0],\n      onBranch = _tailGroup$entries$ne[1];\n\n  return new Map([[headChar + onlyTail, onBranch]]);\n}\n/** @borrows buildUnique as build */\n\n\nfunction build(words) {\n  var uniqueWords = _toConsumableArray(new Set(words)); // eslint-disable-next-line no-use-before-define\n\n\n  return buildUnique(uniqueWords);\n}\n/**\n * Parse a list of words to build a trie of common prefixes.\n *\n * @param words A list of words to parse\n * @returns A trie of words grouped by the initial characters they share\n */\n\n\nfunction buildUnique(words) {\n  if (words.length === 0) {\n    return leafNode;\n  }\n\n  var wordToMatch = words[0];\n\n  if (wordToMatch === '') {\n    // End of the target word reached. Include an empty string to signify that\n    // a word ends at this spot, and group any remaining words in the trie.\n    var nonEmptyWords = words.filter(function (word) {\n      return word !== '';\n    });\n    return new Map([['', leafNode]].concat(_toConsumableArray(build(nonEmptyWords))));\n  } // Begin a new trie containing all words starting with the same letter as wordToMatch\n\n\n  var charToMatch = wordToMatch[0];\n\n  var _groupWordsByHeadChar = groupWordsByHeadChar(words, charToMatch),\n      _groupWordsByHeadChar2 = _slicedToArray(_groupWordsByHeadChar, 2),\n      wordsMatched = _groupWordsByHeadChar2[0],\n      wordsMissed = _groupWordsByHeadChar2[1];\n\n  var tailsMatched = wordsMatched.map(function (word) {\n    return word.substring(1);\n  });\n  var tailsMatchedGrouped = build(tailsMatched);\n  var groupWithChildren = mergeGroups(charToMatch, tailsMatchedGrouped);\n  return new Map([].concat(_toConsumableArray(groupWithChildren), _toConsumableArray(build(wordsMissed))));\n}", "'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it\u2019s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns\u2019 stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.build = build;\n\nvar _escapeStringRegexp = _interopRequireDefault(require(\"escape-string-regexp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Generate a regular expression pattern that captures the strings\n * represented in a character trie.\n *\n * @param charTrie A character trie\n * @returns A regular expression pattern\n */\nfunction build(charTrie) {\n  var patternSegments = Array.from(_toConsumableArray(charTrie), function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        head = _ref2[0],\n        suffixTrie = _ref2[1];\n\n    return \"\".concat((0, _escapeStringRegexp[\"default\"])(head)).concat(build(suffixTrie));\n  });\n  var pattern = patternSegments.join('|');\n\n  if (charTrie.size > 1) {\n    pattern = \"(\".concat(pattern, \")\");\n  }\n\n  return pattern;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.condense = condense;\nexports.condenseIgnoreCase = condenseIgnoreCase;\n\nvar _trie = require(\"./utils/trie\");\n\nvar _pattern = require(\"./utils/pattern\");\n\nfunction condense(wordList) {\n  var wordTrie = (0, _trie.build)(wordList);\n  var pattern = (0, _pattern.build)(wordTrie);\n  return new RegExp(pattern);\n}\n\nfunction condenseIgnoreCase(wordList) {\n  var wordListLowercase = wordList.map(function (word) {\n    return word.toLowerCase();\n  });\n  var caseSensitiveRegex = condense(wordListLowercase);\n  return new RegExp(caseSensitiveRegex, 'i');\n}", "import { Form } from \"@raycast/api\";\nimport { condense } from \"strings-to-regex\";\nimport { useState } from \"react\";\nimport { useForm } from \"./lib/use-form\";\nimport { DefaultForm } from \"./components/DefaultForm\";\n\nenum SplitBy {\n  NewLine = \"\\n\",\n  Comma = \",\",\n  Space = \" \",\n}\n\nexport default () => {\n  const [splitBy, setSplitBy] = useState(SplitBy.Space);\n  const formProps = useForm({\n    transformDeps: [splitBy],\n    transform: (value: string) => {\n      return `/${condense(value.split(splitBy)).source}/`;\n    },\n  });\n\n  return (\n    <DefaultForm\n      {...formProps}\n      options={\n        <Form.Dropdown id=\"splitBy\" title=\"Split by\" onChange={(newValue) => setSplitBy(newValue as SplitBy)}>\n          <Form.Dropdown.Item value={SplitBy.Space} title=\"Space\" />\n          <Form.Dropdown.Item value={SplitBy.Comma} title=\"Comma\" />\n          <Form.Dropdown.Item value={SplitBy.NewLine} title=\"Newline\" />\n        </Form.Dropdown>\n      }\n    />\n  );\n};\n", "import { useEffect, useState } from \"react\";\n\nexport const useForm = ({\n  transformDeps = [],\n  transform,\n}: {\n  transformDeps?: unknown[];\n  transform: (value: string) => Promise<string> | string;\n}) => {\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setOutput(await transform(input));\n      } catch (err) {\n        setOutput(\"Invalid input\");\n      }\n    })();\n  }, [input, ...transformDeps]);\n\n  return {\n    inputProps: { value: input, onChange: setInput, id: \"input\", title: \"Input\", autoFocus: true },\n    outputProps: {\n      value: output,\n      id: \"output\",\n      title: \"Output\",\n      onChange: () => {\n        //\n      },\n    },\n  };\n};\n", "import { Action, ActionPanel, Form } from \"@raycast/api\";\nimport { useForm } from \"../lib/use-form\";\n\ntype DefaultFormProps = ReturnType<typeof useForm> & {\n  actions?: React.ReactNode;\n  options?: React.ReactNode;\n  output?: React.ReactNode;\n  input?: React.ReactNode;\n};\n\nexport function DefaultForm({\n  inputProps,\n  outputProps,\n  actions: Actions,\n  options: Options,\n  output: Output,\n  input: Input,\n}: DefaultFormProps) {\n  return (\n    <Form\n      actions={\n        Actions || (\n          <ActionPanel>\n            <Action.CopyToClipboard content={outputProps.value} />\n            <Action.Paste content={outputProps.value} />\n          </ActionPanel>\n        )\n      }\n    >\n      {Input ? Input : <Form.TextArea {...inputProps} />}\n      {Options}\n      {Output ? Output : <Form.TextArea {...outputProps} />}\n    </Form>\n  );\n}\n"],
  "mappings": "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",
  "names": ["require_trie", "__commonJSMin", "exports", "build", "_toConsumableArray", "arr", "_arrayWithoutHoles", "_iterableToArray", "_unsupportedIterableToArray", "_nonIterableSpread", "iter", "_arrayLikeToArray", "_slicedToArray", "i", "_arrayWithHoles", "_iterableToArrayLimit", "_nonIterableRest", "o", "minLen", "n", "len", "arr2", "_i", "_arr", "_n", "_d", "_s", "_e", "err", "leafNode", "groupWordsByHeadChar", "words", "firstChar", "matched", "missed", "word", "mergeGroups", "headChar", "tailGroup", "_tailGroup$entries$ne", "onlyTail", "onBranch", "uniqueWords", "buildUnique", "wordToMatch", "nonEmptyWords", "charToMatch", "_groupWordsByHeadChar", "_groupWordsByHeadChar2", "wordsMatched", "wordsMissed", "tailsMatched", "tailsMatchedGrouped", "groupWithChildren", "require_escape_string_regexp", "__commonJSMin", "exports", "module", "string", "require_pattern", "__commonJSMin", "exports", "build", "_escapeStringRegexp", "_interopRequireDefault", "obj", "_slicedToArray", "arr", "i", "_arrayWithHoles", "_iterableToArrayLimit", "_unsupportedIterableToArray", "_nonIterableRest", "_i", "_arr", "_n", "_d", "_s", "_e", "err", "_toConsumableArray", "_arrayWithoutHoles", "_iterableToArray", "_nonIterableSpread", "o", "minLen", "_arrayLikeToArray", "n", "iter", "len", "arr2", "charTrie", "patternSegments", "_ref", "_ref2", "head", "suffixTrie", "pattern", "require_lib", "__commonJSMin", "exports", "condense", "condenseIgnoreCase", "_trie", "_pattern", "wordList", "wordTrie", "pattern", "wordListLowercase", "word", "caseSensitiveRegex", "string_to_regex_exports", "__export", "string_to_regex_default", "__toCommonJS", "import_api", "import_strings_to_regex", "import_react", "import_react", "useForm", "transformDeps", "transform", "input", "setInput", "output", "setOutput", "import_api", "import_jsx_runtime", "DefaultForm", "inputProps", "outputProps", "Actions", "Options", "Output", "Input", "import_jsx_runtime", "string_to_regex_default", "splitBy", "setSplitBy", "formProps", "useForm", "value", "DefaultForm", "newValue"]
}
