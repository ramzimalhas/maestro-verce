{
  "version": 3,
  "sources": ["../src/json-to-jsdoc.tsx", "../node_modules/json-to-jsdoc/dist/index.mjs", "../src/lib/use-form.ts", "../src/components/DefaultForm.tsx"],
  "sourcesContent": ["import { jsonToJSDoc } from \"json-to-jsdoc\";\nimport { useForm } from \"./lib/use-form\";\nimport { DefaultForm } from \"./components/DefaultForm\";\n\nexport default () => {\n  const formProps = useForm({\n    transform: async (value: string) => {\n      return jsonToJSDoc(value);\n    },\n  });\n\n  return <DefaultForm {...formProps} />;\n};\n", "function checkIfNeededToAddUndefinedType(obj, objectKey) {\n  const temporaryObject = {};\n  let maxLenghtOfObject = 0;\n  Object.keys(obj).forEach((currentKey) => {\n    if (currentKey.includes(objectKey) && currentKey !== objectKey) {\n      temporaryObject[currentKey] = obj[currentKey];\n    }\n  });\n  Object.keys(temporaryObject).forEach((key) => {\n    const currentKeyLength = temporaryObject[key].length;\n    if (currentKeyLength > maxLenghtOfObject)\n      maxLenghtOfObject = currentKeyLength;\n  });\n  Object.keys(temporaryObject).forEach((key) => {\n    if (key.split(\".\").length < 2) {\n      if (maxLenghtOfObject > temporaryObject[key].length) {\n        this[key].push(\"undefined\");\n      }\n    }\n  });\n}\nfunction keepUniqueTypes(obj, jsonObjects) {\n  const temporaryObject = obj;\n  const remainingObject = {};\n  const numberOfJSONDefinitions = jsonObjects.length;\n  Object.keys(obj).forEach((objectKey) => {\n    if (!objectKey.includes(\".\")) {\n      if (obj[objectKey].length < numberOfJSONDefinitions) {\n        temporaryObject[objectKey].push(\"undefined\");\n      }\n    }\n    obj[objectKey].forEach((anyValue) => {\n      if (anyValue === \"object\" || anyValue === \"object[]\") {\n        checkIfNeededToAddUndefinedType.bind(temporaryObject, obj, objectKey)();\n      }\n    });\n  });\n  Object.keys(temporaryObject).forEach((key) => {\n    remainingObject[key] = getUnique(temporaryObject[key]);\n  });\n  return remainingObject;\n}\nfunction getUnique(array) {\n  const u = {};\n  const a = [];\n  for (let i = 0, l = array.length; i < l; ++i) {\n    if (u.hasOwnProperty(array[i]))\n      continue;\n    a.push(array[i]);\n    u[array[i]] = 1;\n  }\n  return a;\n}\nfunction getTypeOfValue(value) {\n  let currentType = Object.prototype.toString.call(value).split(\" \")[1].slice(0, -1).toLowerCase();\n  if (!currentType)\n    currentType = \"*\";\n  return currentType;\n}\nfunction parseArray(array, objectName) {\n  const currentArrayTypes = [];\n  const prefix = objectName ? `${objectName}` : \"\";\n  array.forEach((currentValue) => {\n    currentArrayTypes.push(`${getTypeOfValue(currentValue)}[]`);\n  });\n  if (!(objectName in this))\n    this[objectName] = [];\n  this[objectName].push(getUnique(currentArrayTypes).join(\"|\"));\n  array.forEach((currentValue) => {\n    const currentValueType = getTypeOfValue(currentValue);\n    if (currentValueType === \"array\") {\n      parseArray.bind(this, currentValue, prefix)();\n    } else if (currentValueType === \"object\") {\n      parseObject.bind(this, currentValue, prefix, true)();\n    }\n  });\n}\nfunction parseObject(obj, objectName, doNotReinsert = false) {\n  const prefix = objectName ? `${objectName}.` : \"\";\n  Object.keys(obj).forEach((propertyName) => {\n    const currentValue = obj[propertyName];\n    const propertyType = getTypeOfValue(currentValue);\n    const currentPrefix = `${prefix}${propertyName}`;\n    let result = null;\n    if (!doNotReinsert && objectName) {\n      if (!(objectName in this))\n        this[objectName] = [];\n      this[objectName].push(\"object\");\n    }\n    if (propertyType === \"array\")\n      parseArray.bind(this, currentValue, currentPrefix)();\n    else if (propertyType === \"object\")\n      parseObject.bind(this, currentValue, currentPrefix)();\n    else {\n      result = propertyType;\n      if (!(currentPrefix in this))\n        this[currentPrefix] = [];\n      this[currentPrefix].push(result);\n    }\n  });\n}\nfunction ParseRootDefinition(obj) {\n  const jsonType = typeof obj;\n  if (jsonType === \"array\")\n    parseArray.bind(this, obj)();\n  else if (jsonType === \"object\")\n    parseObject.bind(this, obj)();\n}\nfunction printTheTypeDef(obj, jsonObjects) {\n  let output = \"\";\n  const jsonDef = \"json\";\n  const jsonTypes = [];\n  Object.keys(jsonObjects).forEach((key) => {\n    jsonTypes.push(getTypeOfValue(jsonObjects[key]));\n  });\n  output = `/** @typedef {${getUnique(jsonTypes)}} ${jsonDef} \n`;\n  Object.keys(obj).forEach((key) => {\n    output += `* @property {${obj[key].join(\"|\")}} ${key} \n`;\n  });\n  output += \"*/\";\n  return output;\n}\nfunction goThroughAndParse(jsonObjects) {\n  const theObjectDefinition = {};\n  jsonObjects.forEach((obj) => ParseRootDefinition.bind(theObjectDefinition, obj)());\n  return printTheTypeDef(keepUniqueTypes(theObjectDefinition, jsonObjects), jsonObjects);\n}\nfunction jsonToJSDoc(json) {\n  const jsonObjects = [];\n  jsonObjects.push(JSON.parse(json));\n  return goThroughAndParse(jsonObjects);\n}\n\nexport { jsonToJSDoc };\n", "import { useEffect, useState } from \"react\";\n\nexport const useForm = ({\n  transformDeps = [],\n  transform,\n}: {\n  transformDeps?: unknown[];\n  transform: (value: string) => Promise<string> | string;\n}) => {\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setOutput(await transform(input));\n      } catch (err) {\n        setOutput(\"Invalid input\");\n      }\n    })();\n  }, [input, ...transformDeps]);\n\n  return {\n    inputProps: { value: input, onChange: setInput, id: \"input\", title: \"Input\", autoFocus: true },\n    outputProps: {\n      value: output,\n      id: \"output\",\n      title: \"Output\",\n      onChange: () => {\n        //\n      },\n    },\n  };\n};\n", "import { Action, ActionPanel, Form } from \"@raycast/api\";\nimport { useForm } from \"../lib/use-form\";\n\ntype DefaultFormProps = ReturnType<typeof useForm> & {\n  actions?: React.ReactNode;\n  options?: React.ReactNode;\n  output?: React.ReactNode;\n  input?: React.ReactNode;\n};\n\nexport function DefaultForm({\n  inputProps,\n  outputProps,\n  actions: Actions,\n  options: Options,\n  output: Output,\n  input: Input,\n}: DefaultFormProps) {\n  return (\n    <Form\n      actions={\n        Actions || (\n          <ActionPanel>\n            <Action.CopyToClipboard content={outputProps.value} />\n            <Action.Paste content={outputProps.value} />\n          </ActionPanel>\n        )\n      }\n    >\n      {Input ? Input : <Form.TextArea {...inputProps} />}\n      {Options}\n      {Output ? Output : <Form.TextArea {...outputProps} />}\n    </Form>\n  );\n}\n"],
  "mappings": "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",
  "names": ["json_to_jsdoc_exports", "__export", "json_to_jsdoc_default", "__toCommonJS", "checkIfNeededToAddUndefinedType", "obj", "objectKey", "temporaryObject", "maxLenghtOfObject", "currentKey", "key", "currentKeyLength", "keepUniqueTypes", "jsonObjects", "remainingObject", "numberOfJSONDefinitions", "anyValue", "getUnique", "array", "u", "a", "i", "l", "getTypeOfValue", "value", "currentType", "parseArray", "objectName", "currentArrayTypes", "prefix", "currentValue", "currentValueType", "parseObject", "doNotReinsert", "propertyName", "propertyType", "currentPrefix", "result", "ParseRootDefinition", "jsonType", "printTheTypeDef", "output", "jsonDef", "jsonTypes", "goThroughAndParse", "theObjectDefinition", "jsonToJSDoc", "json", "import_react", "useForm", "transformDeps", "transform", "input", "setInput", "output", "setOutput", "import_api", "import_jsx_runtime", "DefaultForm", "inputProps", "outputProps", "Actions", "Options", "Output", "Input", "import_jsx_runtime", "json_to_jsdoc_default", "formProps", "useForm", "value", "jsonToJSDoc", "DefaultForm"]
}
