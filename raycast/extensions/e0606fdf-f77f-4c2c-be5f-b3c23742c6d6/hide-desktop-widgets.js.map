{
  "version": 3,
  "sources": ["../src/hide-desktop-widgets.tsx", "../src/utils/index.ts", "../src/utils/sonoma.ts"],
  "sourcesContent": ["import { showHUD } from \"@raycast/api\";\nimport { hideDesktopWidgets } from \"./utils\";\n\nexport default async function () {\n  try {\n    hideDesktopWidgets();\n    await showHUD(\"Desktop Widgets Hidden\");\n  } catch (error) {\n    await showHUD(error as string);\n  }\n}\n", "import { spawnSync } from \"child_process\";\nimport * as MontereyAndBefore from \"./monterey-and-before\";\nimport * as Sonoma from \"./sonoma\";\n\nfunction getMacosMajorVersion() {\n  const { stdout } = spawnSync(\"sw_vers\", [\"-productVersion\"], { encoding: \"utf-8\" });\n  return parseInt(stdout.trim().split(\".\")[0]);\n}\n\nfunction isSonoma() {\n  return getMacosMajorVersion() == 14;\n}\n\nexport function areDesktopIconsHidden() {\n  if (isSonoma()) {\n    return Sonoma.areDesktopIconsHidden();\n  } else {\n    return MontereyAndBefore.areDesktopIconsHidden();\n  }\n}\n\nexport function hideDesktopIcons() {\n  if (isSonoma()) {\n    Sonoma.hideDesktopIcons();\n  } else {\n    MontereyAndBefore.hideDesktopIcons();\n  }\n}\n\nexport function showDesktopIcons() {\n  if (isSonoma()) {\n    Sonoma.showDesktopIcons();\n  } else {\n    MontereyAndBefore.showDesktopIcons();\n  }\n}\n\nexport function areDesktopWidgetsHidden() {\n  if (isSonoma()) {\n    return Sonoma.areDesktopWidgetsHidden();\n  } else {\n    throw new Error(\"Not supported on Monterey and before\");\n  }\n}\n\nexport function hideDesktopWidgets() {\n  if (isSonoma()) {\n    Sonoma.hideDesktopWidgets();\n  } else {\n    throw new Error(\"Not supported on Monterey and before\");\n  }\n}\n\nexport function showDesktopWidgets() {\n  if (isSonoma()) {\n    Sonoma.showDesktopWidgets();\n  } else {\n    throw new Error(\"Not supported on Monterey and before\");\n  }\n}\n", "import { spawnSync } from \"child_process\";\n\nexport function areDesktopIconsHidden() {\n  const { stdout } = spawnSync(\"defaults\", [\"read\", \"com.apple.WindowManager\", \"StandardHideDesktopIcons\"], {\n    encoding: \"utf-8\",\n  });\n  return stdout.trim() === \"0\";\n}\n\nexport function hideDesktopIcons() {\n  spawnSync(\"defaults\", [\"write\", \"com.apple.WindowManager\", \"StandardHideDesktopIcons\", \"-bool\", \"true\"]);\n}\n\nexport function showDesktopIcons() {\n  spawnSync(\"defaults\", [\"write\", \"com.apple.WindowManager\", \"StandardHideDesktopIcons\", \"-bool\", \"false\"]);\n}\n\nexport function areDesktopWidgetsHidden() {\n  // ## show/hide widgets on desktop\n  // com.apple.WindowManager\n  // StandardHideWidgets\n  // 0=show\n  // 1=hide\n\n  const { stdout } = spawnSync(\"defaults\", [\"read\", \"com.apple.WindowManager\", \"StandardHideWidgets\"], {\n    encoding: \"utf-8\",\n  });\n  return stdout.trim() === \"0\";\n}\n\nexport function hideDesktopWidgets() {\n  spawnSync(\"defaults\", [\"write\", \"com.apple.WindowManager\", \"StandardHideWidgets\", \"-bool\", \"true\"]);\n}\n\nexport function showDesktopWidgets() {\n  spawnSync(\"defaults\", [\"write\", \"com.apple.WindowManager\", \"StandardHideWidgets\", \"-bool\", \"false\"]);\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAwB,wBCAxB,IAAAC,EAA0B,yBCA1B,IAAAC,EAA0B,yBA8BnB,SAASC,GAAqB,IACnC,aAAU,WAAY,CAAC,QAAS,0BAA2B,sBAAuB,QAAS,MAAM,CAAC,CACpG,CD5BA,SAASC,GAAuB,CAC9B,GAAM,CAAE,OAAAC,CAAO,KAAI,aAAU,UAAW,CAAC,iBAAiB,EAAG,CAAE,SAAU,OAAQ,CAAC,EAClF,OAAO,SAASA,EAAO,KAAK,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,CAC7C,CAEA,SAASC,GAAW,CAClB,OAAOF,EAAqB,GAAK,EACnC,CAkCO,SAASG,GAAqB,CACnC,GAAIC,EAAS,EACJD,EAAmB,MAE1B,OAAM,IAAI,MAAM,sCAAsC,CAE1D,CDhDA,eAAOE,GAA0B,CAC/B,GAAI,CACFC,EAAmB,EACnB,QAAM,WAAQ,wBAAwB,CACxC,OAASC,EAAP,CACA,QAAM,WAAQA,CAAe,CAC/B,CACF",
  "names": ["hide_desktop_widgets_exports", "__export", "hide_desktop_widgets_default", "__toCommonJS", "import_api", "import_child_process", "import_child_process", "hideDesktopWidgets", "getMacosMajorVersion", "stdout", "isSonoma", "hideDesktopWidgets", "isSonoma", "hide_desktop_widgets_default", "hideDesktopWidgets", "error"]
}
