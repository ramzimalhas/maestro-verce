{
  "version": 3,
  "sources": ["../node_modules/ts-md5/src/md5.ts", "../node_modules/ts-md5/src/md5_file_hasher.ts", "../node_modules/ts-md5/src/parallel_hasher.ts", "../node_modules/ts-md5/src/index.ts", "../node_modules/title/lib/lower-case.js", "../node_modules/title/lib/specials.js", "../node_modules/title/lib/index.js", "../src/run-shortcut-now.tsx", "../src/util/shortcut.ts", "../src/util/utils.ts", "../src/create-shortcut.tsx", "../src/types/types.ts", "../src/util/constants.ts", "../src/components/action-on-tactions.tsx", "../src/components/action-open-preferences.tsx", "../src/components/action-run-shortcut.tsx", "../src/util/input.ts"],
  "sourcesContent": ["/*\n\nTypeScript Md5\n==============\n\nBased on work by\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* Andr\u00E9 Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\nEffectively a TypeScrypt re-write of Raymond Hill JS Library\n\nThe MIT License (MIT)\n\nCopyright (C) 2014 Raymond Hill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2015 Andr\u00E9 Cruz <amdfcruz@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT YOU WANT TO.\n\n\n*/\n\n\ninterface HasherState {\n    buffer: string;\n    buflen: number;\n    length: number;\n    state: number[];\n};\n\nexport class Md5 {\n\n    /**\n     * Hash a UTF-8 string on the spot\n     * @param str String to hash\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    public static hashStr(str: string, raw?: false): string;\n    public static hashStr(str: string, raw: true): Int32Array;\n    public static hashStr(str: string, raw: boolean = false) {\n        return this.onePassHasher\n            .start()\n            .appendStr(str)\n            .end(raw);\n    }\n\n    /**\n     * Hash a ASCII string on the spot\n     * @param str String to hash\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    public static hashAsciiStr(str: string, raw?: false): string;\n    public static hashAsciiStr(str: string, raw: true): Int32Array;\n    public static hashAsciiStr(str: string, raw: boolean = false) {\n        return this.onePassHasher\n            .start()\n            .appendAsciiStr(str)\n            .end(raw);\n    }\n        // Private Static Variables\n    private static stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);\n    private static buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    private static hexChars = '0123456789abcdef';\n    private static hexOut: string[] = [];\n\n    // Permanent instance is to use for one-call hashing\n    private static onePassHasher = new Md5();\n\n    private static _hex(x: Int32Array): string {\n        const hc = Md5.hexChars;\n        const ho = Md5.hexOut;\n        let n;\n        let offset;\n        let j;\n        let i;\n\n        for (i = 0; i < 4; i += 1) {\n            offset = i * 8;\n            n = x[i];\n            for (j = 0; j < 8; j += 2) {\n                ho[offset + 1 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n                ho[offset + 0 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n            }\n        }\n        return ho.join('');\n    }\n\n    private static _md5cycle(x: Int32Array|Uint32Array, k: Int32Array|Uint32Array) {\n        let a = x[0];\n        let b = x[1];\n        let c = x[2];\n        let d = x[3];\n        // ff()\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        // gg()\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        // hh()\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        // ii()\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    private _dataLength = 0;\n    private _bufferLength = 0;\n\n    private _state: Int32Array = new Int32Array(4);\n    private _buffer: ArrayBuffer = new ArrayBuffer(68);\n    private _buffer8: Uint8Array;\n    private _buffer32: Uint32Array;\n\n    constructor() {\n        this._buffer8 = new Uint8Array(this._buffer, 0, 68);\n        this._buffer32 = new Uint32Array(this._buffer, 0, 17);\n        this.start();\n    }\n\n    /**\n     * Initialise buffer to be hashed\n     */\n    public start() {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state.set(Md5.stateIdentity);\n        return this;\n    }\n\n    // Char to code point to to array conversion:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n    // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown\n\n    /**\n     * Append a UTF-8 string to the hash buffer\n     * @param str String to append\n     */\n    public appendStr(str: string) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let code;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code = str.charCodeAt(i);\n            if (code < 128) {\n                buf8[bufLen++] = code;\n            } else if (code < 0x800) {\n                buf8[bufLen++] = (code >>> 6) + 0xC0;\n                buf8[bufLen++] = code & 0x3F | 0x80;\n            } else if (code < 0xD800 || code > 0xDBFF) {\n                buf8[bufLen++] = (code >>> 12) + 0xE0;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            } else {\n                code = ((code - 0xD800) * 0x400) + (str.charCodeAt(++i) - 0xDC00) + 0x10000;\n                if (code > 0x10FFFF) {\n                    throw new Error('Unicode standard supports code points up to U+10FFFF');\n                }\n                buf8[bufLen++] = (code >>> 18) + 0xF0;\n                buf8[bufLen++] = (code >>> 12 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            if (bufLen >= 64) {\n                this._dataLength += 64;\n                Md5._md5cycle(this._state, buf32);\n                bufLen -= 64;\n                buf32[0] = buf32[16];\n            }\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n\n    /**\n     * Append an ASCII string to the hash buffer\n     * @param str String to append\n     */\n    public appendAsciiStr(str: string) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n\n        for (; ;) {\n            i = Math.min(str.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = str.charCodeAt(j++);\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n\n    /**\n     * Append a byte array to the hash buffer\n     * @param input array to append\n     */\n    public appendByteArray(input: Uint8Array) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n\n        for (; ;) {\n            i = Math.min(input.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = input[j++];\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n\n    /**\n     * Get the state of the hash buffer\n     */\n    public getState(): HasherState {\n        const s = this._state;\n\n        return {\n            buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)),\n            buflen: this._bufferLength,\n            length: this._dataLength,\n            state: [s[0], s[1], s[2], s[3]]\n        };\n    }\n\n    /**\n     * Override the current state of the hash buffer\n     * @param state New hash buffer state\n     */\n    public setState(state: HasherState) {\n        const buf = state.buffer;\n        const x = state.state;\n        const s = this._state;\n        let i;\n\n        this._dataLength = state.length;\n        this._bufferLength = state.buflen;\n        s[0] = x[0];\n        s[1] = x[1];\n        s[2] = x[2];\n        s[3] = x[3];\n\n        for (i = 0; i < buf.length; i += 1) {\n            this._buffer8[i] = buf.charCodeAt(i);\n        }\n    }\n\n    /**\n     * Hash the current state of the hash buffer and return the result\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    public end(raw: boolean = false) {\n        const bufLen = this._bufferLength;\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        const i = (bufLen >> 2) + 1;\n\n        this._dataLength += bufLen;\n        const dataBitsLen = this._dataLength * 8\n\n        buf8[bufLen] = 0x80;\n        buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;\n        buf32.set(Md5.buffer32Identity.subarray(i), i);\n\n        if (bufLen > 55) {\n            Md5._md5cycle(this._state, buf32);\n            buf32.set(Md5.buffer32Identity);\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        if (dataBitsLen <= 0xFFFFFFFF) {\n            buf32[14] = dataBitsLen;\n        } else {\n            const matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);\n            if (matches === null) {\n                return;\n            }\n\n            const lo = parseInt(matches[2], 16);\n            const hi = parseInt(matches[1], 16) || 0;\n\n            buf32[14] = lo;\n            buf32[15] = hi;\n        }\n\n        Md5._md5cycle(this._state, buf32);\n\n        return raw ? this._state : Md5._hex(this._state);\n    }\n}\n\nif (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n    throw new Error('Md5 self test failed.');\n}\n", "import {Md5} from './md5';\n\ndeclare let FileReaderSync: any;\n\nexport interface HashingResponse {\n    success: boolean;\n    result?: string | Int32Array;\n}\n\n// Hashes any blob\nexport class Md5FileHasher {\n    private _reader: any;\n\n    private _md5!: Md5;\n    private _part!: number;\n    // private _length!: number;\n    private _blob: any;\n\n\n    constructor(\n        private _callback: (r: HashingResponse) => void,    // Callback to return the result\n        private _async: boolean = true,                     // Async version is not always available in a web worker\n        private _partSize: number = 1048576,                // 1mb\n    ) {\n        this._configureReader();\n    }\n\n    /**\n     * Hash a blob of data in the worker\n     * @param blob Data to hash\n     */\n    public hash(blob: any) {\n        const self = this;\n\n        self._blob = blob;\n        // self._length = Math.ceil(blob.size / self._partSize);\n        self._part = 0;\n        self._md5 = new Md5();\n        self._processPart();\n    }\n\n\n    private _fail() {\n        this._callback({\n            success: false,\n            result: 'data read failed'\n        });\n    }\n\n    private _hashData(e: any) {\n        let self = this;\n\n        self._md5.appendByteArray(new Uint8Array(e.target.result));\n        if (self._part * self._partSize >= self._blob.size) {\n            self._callback({\n                success: true,\n                result: self._md5.end()\n            });\n        } else {\n            self._processPart();\n        }\n    }\n\n    private _processPart() {\n        const self = this;\n        let endbyte = 0;\n        let current_part: any;\n\n        self._part += 1;\n\n        if (self._blob.size > self._partSize) {        // If blob bigger then part_size we will slice it up\n            endbyte = self._part * self._partSize;\n            if (endbyte > self._blob.size) {\n                endbyte = self._blob.size;\n            }\n            current_part = self._blob.slice((self._part - 1) * self._partSize, endbyte);\n        } else {\n            current_part = self._blob;\n        }\n\n        if (self._async) {\n            self._reader.readAsArrayBuffer(current_part);\n        } else {\n            setTimeout(() => {\n                try {\n                    self._hashData({\n                        target: {\n                            result: self._reader.readAsArrayBuffer(current_part)\n                        },\n                    });\n                } catch (e) {\n                    self._fail();\n                }\n            }, 0);\n        }\n    }\n\n    private _configureReader() {\n        const self = this;\n\n        if (self._async) {\n            self._reader = new FileReader();\n            self._reader.onload = self._hashData.bind(self);\n            self._reader.onerror = self._fail.bind(self);\n            self._reader.onabort = self._fail.bind(self);\n        } else {\n            self._reader = new FileReaderSync();\n        }\n    }\n}\n", "export interface WorkerOptions {\n    credentials?: 'omit' | 'same-origin' | 'include';\n    name?: string;\n    type?: 'classic' | 'module';\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new (stringUrl: string, options?: WorkerOptions): Worker;\n};\n\ninterface HashingRequest {\n    blob: any;\n    resolve: (...d: any) => void;\n    reject: (...d: any) => void;\n};\n\nexport class ParallelHasher {\n    private _queue: HashingRequest[] = [];\n    private _hashWorker: any;\n    private _processing?: HashingRequest;\n\n    private _ready: boolean = true;\n\n    constructor(workerUri: string, workerOptions?: WorkerOptions) {\n        const self = this;\n\n        if (Worker) {\n            self._hashWorker = new Worker(workerUri, workerOptions);\n            self._hashWorker.onmessage = self._recievedMessage.bind(self);\n            self._hashWorker.onerror = (err: any) => {\n                self._ready = false;\n                console.error('Hash worker failure', err);\n            };\n        } else {\n            self._ready = false;\n            console.error('Web Workers are not supported in this browser');\n        }\n    }\n\n    /**\n     * Hash a blob of data in the worker\n     * @param blob Data to hash\n     * @returns Promise of the Hashed result\n     */\n    public hash(blob: any) {\n        const self = this;\n        let promise;\n\n        promise = new Promise((resolve, reject) => {\n            self._queue.push({\n                blob,\n                resolve,\n                reject,\n            });\n\n            self._processNext();\n        });\n\n        return promise;\n    }\n\n    /** Terminate any existing hash requests */\n    public terminate() {\n        this._ready = false;\n        this._hashWorker.terminate();\n    }\n\n    // Processes the next item in the queue\n    private _processNext() {\n        if (this._ready && !this._processing && this._queue.length > 0) {\n            this._processing = this._queue.pop();\n            this._hashWorker.postMessage(this._processing!.blob);\n        }\n    }\n\n    // Hash result is returned from the worker\n    private _recievedMessage(evt: any) {\n        const data = evt.data;\n\n        if (data.success) {\n            this._processing?.resolve(data.result);\n        } else {\n            this._processing?.reject(data.result);\n        }\n\n        this._processing = undefined;\n        this._processNext();\n    }\n}\n", "\nexport { Md5 } from './md5';\nexport { Md5FileHasher, HashingResponse } from './md5_file_hasher';\nexport { ParallelHasher } from './parallel_hasher';\n", "const conjunctions = [\n  'for',\n  'and',\n  'nor',\n  'but',\n  'or',\n  'yet',\n  'so'\n]\n\nconst articles = [\n  'a',\n  'an',\n  'the'\n]\n\nconst prepositions = [\n  'aboard',\n  'about',\n  'above',\n  'across',\n  'after',\n  'against',\n  'along',\n  'amid',\n  'among',\n  'anti',\n  'around',\n  'as',\n  'at',\n  'before',\n  'behind',\n  'below',\n  'beneath',\n  'beside',\n  'besides',\n  'between',\n  'beyond',\n  'but',\n  'by',\n  'concerning',\n  'considering',\n  'despite',\n  'down',\n  'during',\n  'except',\n  'excepting',\n  'excluding',\n  'following',\n  'for',\n  'from',\n  'in',\n  'inside',\n  'into',\n  'like',\n  'minus',\n  'near',\n  'of',\n  'off',\n  'on',\n  'onto',\n  'opposite',\n  'over',\n  'past',\n  'per',\n  'plus',\n  'regarding',\n  'round',\n  'save',\n  'since',\n  'than',\n  'through',\n  'to',\n  'toward',\n  'towards',\n  'under',\n  'underneath',\n  'unlike',\n  'until',\n  'up',\n  'upon',\n  'versus',\n  'via',\n  'with',\n  'within',\n  'without'\n]\n\nmodule.exports = new Set([\n  ...conjunctions,\n  ...articles,\n  ...prepositions\n])\n", "const intended = [\n  'ZEIT',\n  'ZEIT Inc.',\n  'Vercel',\n  'Vercel Inc.',\n  'CLI',\n  'API',\n  'HTTP',\n  'HTTPS',\n  'JSX',\n  'DNS',\n  'URL',\n  'now.sh',\n  'now.json',\n  'vercel.app',\n  'vercel.json',\n  'CI',\n  'CD',\n  'CDN',\n  'package.json',\n  'package.lock',\n  'yarn.lock',\n  'GitHub',\n  'GitLab',\n  'CSS',\n  'Sass',\n  'JS',\n  'JavaScript',\n  'TypeScript',\n  'HTML',\n  'WordPress',\n  'Next.js',\n  'Node.js',\n  'Webpack',\n  'Docker',\n  'Bash',\n  'Kubernetes',\n  'SWR',\n  'TinaCMS',\n  'UI',\n  'UX',\n  'TS',\n  'TSX',\n  'iPhone',\n  'iPad',\n  'watchOS',\n  'iOS',\n  'iPadOS',\n  'macOS',\n  'PHP',\n  'composer.json',\n  'composer.lock',\n  'CMS',\n  'SQL',\n  'C',\n  'C#',\n  'GraphQL',\n  'GraphiQL',\n  'JWT',\n  'JWTs'\n]\n\nmodule.exports = intended\n", "// Utilities\nconst lowerCase = require('./lower-case')\nconst specials = require('./specials')\n\nconst word = \"[^\\\\s'\u2019\\\\(\\\\)!?;:\\\"-]\"\nconst regex = new RegExp(`(?:(?:(\\\\s?(?:^|[.\\\\(\\\\)!?;:\"-])\\\\s*)(${word}))|(${word}))(${word}*[\u2019']*${word}*)`, \"g\")\n\nconst convertToRegExp = specials => specials.map(s => [new RegExp(`\\\\b${s}\\\\b`, 'gi'), s])\n\nfunction parseMatch(match) {\n  const firstCharacter = match[0]\n\n  // test first character\n  if (/\\s/.test(firstCharacter)) {\n    // if whitespace - trim and return\n    return match.slice(1)\n  }\n  if (/[\\(\\)]/.test(firstCharacter)) {\n    // if parens - this shouldn't be replaced\n    return null\n  }\n\n  return match\n}\n\nmodule.exports = (str, options = {}) => {\n  str = str.toLowerCase().replace(regex, (m, lead = '', forced, lower, rest, offset, string) => {\n    const isLastWord = m.length + offset >= string.length;\n\n    const parsedMatch = parseMatch(m)\n    if (!parsedMatch) {\n      return m\n    }\n    if (!forced) {\n      const fullLower = lower + rest\n\n      if (lowerCase.has(fullLower) && !isLastWord) {\n        return parsedMatch\n      }\n    }\n\n    return lead + (lower || forced).toUpperCase() + rest\n  })\n\n  const customSpecials = options.special || []\n  const replace = [...specials, ...customSpecials]\n  const replaceRegExp = convertToRegExp(replace)\n\n  replaceRegExp.forEach(([pattern, s]) => {\n    str = str.replace(pattern, s)\n  })\n\n  return str\n}\n", "import React, { useState } from \"react\";\nimport { ActionPanel, Color, Form, getPreferenceValues, Icon } from \"@raycast/api\";\nimport { Shortcut, ShortcutInfo, ShortcutSource, Taction } from \"./util/shortcut\";\nimport { tactionForms } from \"./create-shortcut\";\nimport { shortcutTips } from \"./util/constants\";\nimport { ActionRunShortcut } from \"./components/action-run-shortcut\";\nimport { ActionOnTactions } from \"./components/action-on-tactions\";\nimport { ActionOpenPreferences } from \"./components/action-open-preferences\";\nimport { Preferences } from \"./types/preferences\";\n\nexport default function CreateShortcut() {\n  const [tactions, setTactions] = useState<Taction[]>([]);\n  const { primaryAction, closeMainWindow } = getPreferenceValues<Preferences>();\n\n  return (\n    <Form\n      actions={\n        <RunShortcutActions\n          primaryAction={primaryAction}\n          tactions={tactions}\n          setTactions={setTactions}\n          closeMainWindow={closeMainWindow}\n        />\n      }\n    >\n      {tactionForms(tactions, setTactions)}\n      <Form.Description text={shortcutTips.key} />\n      <Form.Description text={shortcutTips.action} />\n    </Form>\n  );\n}\n\nfunction RunShortcutActions(props: {\n  primaryAction: string;\n  tactions: Taction[];\n  setTactions: React.Dispatch<React.SetStateAction<Taction[]>>;\n  closeMainWindow: boolean;\n}) {\n  const { primaryAction, tactions, setTactions, closeMainWindow } = props;\n  const shortcutInfo: ShortcutInfo = {\n    name: \"test\",\n    tag: [\"other\"],\n    icon: Icon.Star,\n    iconColor: Color.Yellow,\n    source: ShortcutSource.USER,\n    id: \"user_\" + new Date().getTime(),\n    visibility: false,\n  };\n  const shortcut: Shortcut = new Shortcut(shortcutInfo, tactions);\n\n  return (\n    <ActionPanel>\n      <ActionRunShortcut\n        primaryAction={primaryAction}\n        closeMainWindow={closeMainWindow}\n        shortcut={shortcut}\n        visitItem={() => {}}\n      />\n\n      <ActionOnTactions tactions={tactions} setTactions={setTactions} />\n      <ActionOpenPreferences />\n    </ActionPanel>\n  );\n}\n", "import { Color, Icon, LocalStorage } from \"@raycast/api\";\nimport { buildRegexp, calculateCharacter, camelCaseToOtherCase, isEmpty, regexPunctuation } from \"./utils\";\nimport { Md5 } from \"ts-md5\";\n\nimport title from \"title\";\n\nexport enum Tags {\n  ANNOTATION = \"Annotation\",\n  CASE = \"Case\",\n  CODER = \"Coder\",\n  DELETION = \"Deletion\",\n  FORMAT = \"Format\",\n  MARKDOWN = \"Markdown\",\n  REPLACEMENT = \"Replacement\",\n  TIME = \"Time\",\n  OTHER = \"Other\",\n}\n\nexport const tags = Object.values(Tags);\n\nexport const icons = Object.entries(Icon);\n\nexport const iconColors = Object.entries(Color);\n\nenum Cases {\n  UPPER = \"UPPER CASE\",\n  LOWER = \"lower case\",\n  TITLE = \"Title case\",\n  CAMEL = \"camelCase\",\n  PASCAL = \"PascalCase\",\n  SNAKE = \"snake_case\",\n  KEBAB = \"kebab-case\",\n  CAMEL_TO_SNAKE = \"camelCase to snake_case\",\n  CAMEL_TO_KEBAB = \"camelCase to kebab-case\",\n}\n\nexport const cases = Object.values(Cases);\n\nenum Coders {\n  ENCODER_BASE64 = \"Encoder Base64\",\n  DECODER_BASE64 = \"Decoder Base64\",\n  ENCODER_MD5 = \"Encoder MD5\",\n  ENCODER_URL = \"Encoder URL\",\n  DECODER_URL = \"Decoder URL\",\n  ENCODER_URL_COMPONENT = \"Encoder URL Component\",\n  DECODER_URL_COMPONENT = \"Decoder URL Component\",\n  ENCODER_ESCAPE = \"Encoder Escape\",\n  DECODER_ESCAPE = \"Decoder Escape\",\n}\n\nexport const coders = Object.values(Coders);\n\nenum Transform {\n  STAMP_TO_TIME_LOCAL = \"Stamp to time\",\n  FORMAT_JSON = \"Format JSON\",\n  TRIM_LINE = \"Trim line\",\n  Sort_LINE1 = \"Sort line by A-Z\",\n  Sort_LINE2 = \"Sort line by Z-A\",\n}\n\nexport const transforms = Object.values(Transform);\n\nexport interface ShortcutInfo {\n  name: string;\n  id: string;\n  icon: Icon;\n  iconColor?: Color;\n  source: ShortcutSource; //0 from default, 1 from user\n  visibility: boolean;\n  tag: string[];\n}\n\nexport enum ShortcutSource {\n  BUILD_IN = \"Build-in\",\n  USER = \"User\",\n}\n\nexport enum TactionType {\n  DELETE = \"Delete\",\n  CODER = \"Encode & Decode\",\n  REPLACE = \"Replace\",\n  AFFIX = \"Live Template\",\n  CASE = \"Name Case\",\n  TRANSFORM = \"Transform\",\n}\n\nexport interface Taction {\n  type: TactionType;\n  content: string[];\n}\n\nexport class Shortcut {\n  id: string;\n  info: ShortcutInfo;\n  tactions: Taction[];\n\n  constructor(\n    info: ShortcutInfo = {\n      name: \"\",\n      id: \"\",\n      iconColor: Color.Blue,\n      icon: icons[0][1],\n      source: ShortcutSource.USER,\n      visibility: true,\n      tag: [] as string[],\n    },\n    tactions: Taction[] = [],\n  ) {\n    this.id = info.id;\n    this.info = info;\n    this.tactions = tactions;\n  }\n}\n\nexport function checkInfo(name: string, tactions: Taction[]) {\n  const isValid = { nameValid: true, tactionCountValid: true, tactionContentValid: { actionIndex: \"\", valid: true } };\n  if (isEmpty(name)) {\n    isValid.nameValid = false;\n  }\n  if (tactions.length == 0) {\n    isValid.tactionCountValid = false;\n  } else {\n    tactions.map((value, index) => {\n      value.content.map((value2) => {\n        if (isEmpty(value2)) {\n          const _index = index + 1;\n          isValid.tactionContentValid.actionIndex = isValid.tactionContentValid.actionIndex + \" \" + _index;\n          isValid.tactionContentValid.valid = false;\n        }\n      });\n    });\n  }\n  return isValid;\n}\n\nexport function checkAffix(affix: Taction[]) {\n  const reg = [/(\\$TEXT\\$)/, /(\\$LINE\\$)/, /(\\$WORD\\$)/];\n  const isValid = { affixIndex: \"\", valid: true };\n  affix.map((value, index) => {\n    if (value.type == TactionType.AFFIX) {\n      let count = 0;\n      reg.map((regex) => {\n        if (regex.test(value.content[0])) count++;\n      });\n      if (count > 1) {\n        const _index = index + 1;\n        isValid.affixIndex = isValid.affixIndex + \" \" + _index;\n        isValid.valid = false;\n      }\n    }\n  });\n  return isValid;\n}\n\nexport async function createShortcut(info: ShortcutInfo, tactions: Taction[], shortcuts: Shortcut[]) {\n  if (info.tag.length == 0) {\n    info.tag = [Tags.OTHER];\n  }\n  tactions = handleLiveTemplate(tactions);\n  if (!isEmpty(info.id) && info.id.length > 0) {\n    shortcuts.map((value, index) => {\n      if (value.info.id == info.id) {\n        shortcuts[index] = new Shortcut(info, tactions);\n        return;\n      }\n    });\n  } else {\n    info.id = \"user_\" + new Date().getTime();\n    info.source = ShortcutSource.USER;\n    const _shortcut = new Shortcut(info, tactions);\n    shortcuts.unshift(_shortcut);\n  }\n  await LocalStorage.setItem(\"shortcuts\", JSON.stringify(shortcuts));\n}\n\nexport function handleLiveTemplate(tactions: Taction[]) {\n  for (let i = 0; i < tactions.length; i++) {\n    if (tactions[i].type === TactionType.AFFIX) {\n      const match = Array.from(tactions[i].content[0].matchAll(/(\\$TEXT\\$)|(\\$LINE\\$)|(\\$WORD\\$)/g));\n      if (match.length > 0) {\n        tactions[i].content[1] = match[0][0];\n      }\n    }\n  }\n  return tactions;\n}\n\nexport function runShortcut(input: string, tactions: Taction[]) {\n  try {\n    let output = input;\n    tactions.map((value) => {\n      switch (value.type) {\n        case TactionType.DELETE: {\n          const searchValue = buildRegexp(value.content[0]);\n          if (typeof searchValue == \"string\") {\n            output = output.replaceAll(searchValue, \"\");\n          } else {\n            output = output.replace(searchValue, \"\");\n          }\n          output = output.length === 0 ? \" \" : output;\n          break;\n        }\n        case TactionType.REPLACE: {\n          const searchValue = buildRegexp(value.content[0]);\n          if (typeof searchValue == \"string\") {\n            output = output.replaceAll(searchValue, isEmpty(value.content[1]) ? \"\" : value.content[1]);\n          } else {\n            output = output.replace(searchValue, isEmpty(value.content[1]) ? \"\" : value.content[1]);\n          }\n          output = output.length === 0 ? \" \" : output;\n          break;\n        }\n        case TactionType.AFFIX: {\n          output = tactionAffix(output, value);\n          break;\n        }\n        case TactionType.CASE: {\n          output = tactionCase(output, value);\n          break;\n        }\n        case TactionType.CODER: {\n          output = tactionCoder(output, value);\n          break;\n        }\n        case TactionType.TRANSFORM: {\n          output = tactionTransform(output, value);\n          break;\n        }\n      }\n    });\n    return output;\n  } catch (e) {\n    console.error(\"runShortcut \" + String(e));\n    return input;\n  }\n}\n\nfunction tactionAffix(input: string, taction: Taction) {\n  const date = new Date();\n  let output = taction.content[0];\n  output = output.replaceAll(/(\\$YEAR\\$)/g, date.getFullYear() + \"\");\n  output = output.replaceAll(\n    /(\\$MONTH\\$)/g,\n    date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1 + \"\",\n  );\n  output = output.replaceAll(/(\\$DAY\\$)/g, date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate() + \"\");\n  output = output.replaceAll(/(\\$HOUR\\$)/g, date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours() + \"\");\n  output = output.replaceAll(\n    /(\\$MINUTE\\$)/g,\n    date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes() + \"\",\n  );\n  output = output.replaceAll(\n    /(\\$SECOND\\$)/g,\n    date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds() + \"\",\n  );\n  output = output.replaceAll(/(\\$TIMESTAMP\\$)/g, date.getTime() + \"\");\n\n  //calculate statistics\n  const _cc = calculateCharacter(input);\n  const statistics = `\nStatistics\nText length: ${_cc.textLength}\nEnglish character: ${_cc.englishCharacter}\nChinese character: ${_cc.chineseCharacter}\nLine count: ${_cc.line}\nNumber count: ${_cc.numberCharacter}\nPunctuation count: ${_cc.punctuationCharacter}\nCharacter without space: ${_cc.characterWithoutSpace}\nCharacter without punctuation: ${_cc.characterWithoutPunctuation}\n`;\n  output = output.replaceAll(/(\\$STATISTICS\\$)/g, statistics);\n\n  if (taction.content.length > 1) {\n    switch (taction.content[1]) {\n      case \"$TEXT$\": {\n        output = output.replaceAll(/(\\$TEXT\\$)/g, input);\n        break;\n      }\n      case \"$LINE$\": {\n        const inputArray = input.split(/\\n/g);\n        const outputArray: string[] = [];\n        let _output = \"\";\n        for (let i = 0; i < inputArray.length; i++) {\n          outputArray.push(output.replaceAll(/(\\$LINE\\$)/g, inputArray[i]));\n          _output = _output + outputArray[i] + (i == inputArray.length - 1 ? \"\" : \"\\n\");\n        }\n        output = _output;\n        break;\n      }\n      case \"$WORD$\": {\n        const lineArray = input.split(/\\n/g);\n        const outputLineArray: string[] = [];\n        let _outLine = \"\";\n\n        for (let i = 0; i < lineArray.length; i++) {\n          const wordArray = lineArray[i].split(/\\s/gu);\n          const outputArray: string[] = [];\n          let _output = \"\";\n          for (let j = 0; j < wordArray.length; j++) {\n            if (wordArray[j].length > 0) {\n              outputArray.push(output.replaceAll(/(\\$WORD\\$)/g, wordArray[j]));\n              _output = _output + outputArray[j] + (j == wordArray.length - 1 ? \"\" : \" \");\n            } else {\n              outputArray.push(\"\");\n            }\n          }\n          outputLineArray.push(_output);\n          _outLine = _outLine + outputLineArray[i] + (i == lineArray.length - 1 ? \"\" : \"\\n\");\n        }\n        output = _outLine;\n        break;\n      }\n    }\n  }\n\n  output = output.replaceAll(\"$LINEBREAK$\", \"\\n\");\n\n  return output;\n}\n\nfunction tactionCase(input: string, taction: Taction) {\n  switch (taction.content[0]) {\n    case Cases.UPPER: {\n      return input.toUpperCase();\n    }\n    case Cases.LOWER: {\n      return input.toLowerCase();\n    }\n    case Cases.TITLE: {\n      return title(input);\n    }\n    case Cases.CAMEL: {\n      const inputArray = input.toLowerCase().split(regexPunctuation);\n      const outputArray = [];\n      if (inputArray.length <= 1) {\n        return inputArray[0].toString();\n      } else {\n        outputArray.push(inputArray[0]);\n        for (let i = 1; i < inputArray.length; i++) {\n          if (!isEmpty(inputArray[i])) {\n            outputArray.push(inputArray[i].replace(inputArray[i][0], inputArray[i][0].toUpperCase()));\n          }\n        }\n        const _input = outputArray.join(\"\");\n        return _input.replace(_input[0], _input[0].toLowerCase());\n      }\n    }\n    case Cases.PASCAL: {\n      const inputArray = input.toLowerCase().split(regexPunctuation);\n      const outputArray = [];\n      for (let i = 0; i < inputArray.length; i++) {\n        if (!isEmpty(inputArray[i])) {\n          outputArray.push(inputArray[i].replace(inputArray[i][0], inputArray[i][0].toUpperCase()));\n        }\n      }\n      return outputArray.join(\"\");\n    }\n    case Cases.SNAKE: {\n      const inputArray = input.toLowerCase().split(regexPunctuation);\n      const outputArray = [];\n      for (let i = 0; i < inputArray.length; i++) {\n        if (!isEmpty(inputArray[i])) {\n          outputArray.push(inputArray[i].replace(inputArray[i][0], inputArray[i][0].toLowerCase()));\n        }\n      }\n      return outputArray.join(\"_\");\n    }\n    case Cases.KEBAB: {\n      const inputArray = input.toLowerCase().split(regexPunctuation);\n      const outputArray = [];\n      for (let i = 0; i < inputArray.length; i++) {\n        if (!isEmpty(inputArray[i])) {\n          outputArray.push(inputArray[i].replace(inputArray[i][0], inputArray[i][0].toLowerCase()));\n        }\n      }\n      return outputArray.join(\"-\");\n    }\n    case Cases.CAMEL_TO_SNAKE: {\n      return camelCaseToOtherCase(input, \"_\");\n    }\n    case Cases.CAMEL_TO_KEBAB: {\n      return camelCaseToOtherCase(input, \"-\");\n    }\n    default:\n      return input;\n  }\n}\n\nfunction tactionCoder(input: string, taction: Taction) {\n  switch (taction.content[0]) {\n    case Coders.ENCODER_BASE64: {\n      return Buffer.from(input, \"utf-8\").toString(\"base64\");\n    }\n    case Coders.DECODER_BASE64: {\n      return Buffer.from(input, \"base64\").toString(\"utf-8\");\n    }\n    case Coders.ENCODER_MD5: {\n      return Md5.hashStr(input);\n    }\n    case Coders.ENCODER_URL: {\n      return encodeURI(input);\n    }\n    case Coders.DECODER_URL: {\n      return decodeURI(input);\n    }\n    case Coders.ENCODER_URL_COMPONENT: {\n      return encodeURIComponent(input);\n    }\n    case Coders.DECODER_URL_COMPONENT: {\n      return decodeURIComponent(input);\n    }\n    case Coders.ENCODER_ESCAPE: {\n      return escape(input);\n    }\n    case Coders.DECODER_ESCAPE: {\n      return unescape(input);\n    }\n    default:\n      return input;\n  }\n}\n\nfunction tactionTransform(input: string, taction: Taction) {\n  switch (taction.content[0]) {\n    case Transform.STAMP_TO_TIME_LOCAL: {\n      if (/^[0-9]*$/.test(input)) {\n        return new Date(Number(input)).toLocaleString();\n      } else {\n        return input;\n      }\n    }\n    case Transform.FORMAT_JSON: {\n      try {\n        return JSON.stringify(JSON.parse(input), null, 2);\n      } catch (e) {\n        return input;\n      }\n    }\n    case Transform.TRIM_LINE: {\n      const inputArray = input.split(/\\n/g);\n      let _output = \"\";\n      for (let i = 0; i < inputArray.length; i++) {\n        _output = _output + inputArray[i].trim() + (i == inputArray.length - 1 ? \"\" : \"\\n\");\n      }\n      return _output;\n    }\n    case Transform.Sort_LINE1: {\n      const inputArray = input.split(/\\n/g);\n      let _output = \"\";\n      inputArray.sort();\n      for (let i = 0; i < inputArray.length; i++) {\n        _output = _output + inputArray[i] + (i == inputArray.length - 1 ? \"\" : \"\\n\");\n      }\n      return _output;\n    }\n    case Transform.Sort_LINE2: {\n      const inputArray = input.split(/\\n/g);\n      let _output = \"\";\n      inputArray.sort().reverse();\n      for (let i = 0; i < inputArray.length; i++) {\n        _output = _output + inputArray[i] + (i == inputArray.length - 1 ? \"\" : \"\\n\");\n      }\n      return _output;\n    }\n    default:\n      return input;\n  }\n}\n", "export const regexPunctuation = /\\p{Z}|\\p{P}|\\p{S}/gu;\n\nexport const isEmpty = (string: string | null | undefined) => {\n  return !(string != null && String(string).length > 0);\n};\n\nexport function calculateCharacter(input: string) {\n  let iTotal = 0;\n  let sTotal = 0;\n  let eTotal = 0;\n  let iNum = 0;\n  for (let i = 0; i < input.length; i++) {\n    const c = input.charAt(i);\n    //\u57FA\u672C\u6C49\u5B57\n    if (c.match(/[\\u4e00-\\u9fa5]/)) {\n      iTotal++;\n    }\n    //\u57FA\u672C\u6C49\u5B57\u8865\u5145\n    else if (c.match(/[\\u9FA6-\\u9fcb]/)) {\n      iTotal++;\n    }\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const c = input.charAt(i);\n    if (c.match(/[^x00-\\xff]/)) {\n      sTotal++;\n    } else {\n      eTotal++;\n    }\n    if (c.match(/[0-9]/)) {\n      iNum++;\n    }\n  }\n\n  return {\n    textLength: input.length,\n    englishCharacter: eTotal - iNum,\n    chineseCharacter: iTotal,\n    numberCharacter: iNum,\n    punctuationCharacter: sTotal - iTotal,\n    characterWithoutSpace: input.replaceAll(/\\s|(\\n)/g, \"\").length,\n    characterWithoutPunctuation: input.replaceAll(/\\p{Z}|\\p{P}|\\p{S}/gu, \"\").length,\n    line: Array.from(input.matchAll(/\\n/g)).length + 1,\n  };\n}\n\nexport function buildRegexp(content: string) {\n  try {\n    if (eval(content) instanceof RegExp) {\n      const regSource = content.substring(content.indexOf(\"/\") + 1, content.lastIndexOf(\"/\"));\n      const regModifier = content.substring(content.lastIndexOf(\"/\") + 1);\n      return new RegExp(regSource, regModifier);\n    }\n  } catch (e) {\n    console.error(\"[buildRegexp] \" + String(e));\n  }\n  return content;\n}\n\nexport function camelCaseToOtherCase(str: string, linkCharacter: string) {\n  let finalStr = str.replaceAll(\" \", \"\");\n  try {\n    let outString = \"\";\n    finalStr.split(\"\").forEach((value, index) => {\n      if (index === 0) {\n        outString = outString + value.toLowerCase();\n      } else {\n        isUpper(value)\n          ? (outString = outString + linkCharacter + value.toLowerCase())\n          : (outString = outString + value);\n      }\n    });\n    finalStr = outString;\n  } catch (e) {\n    console.error(String(e));\n  }\n  return finalStr;\n}\n\nfunction isUpper(char: string) {\n  return !/\\d/.test(char) && char !== char.toLowerCase();\n}\n", "import React, { useEffect, useState } from \"react\";\nimport { Action, ActionPanel, Color, Form, Icon, LocalStorage, showToast, Toast, useNavigation } from \"@raycast/api\";\nimport {\n  cases,\n  checkAffix,\n  checkInfo,\n  coders,\n  createShortcut,\n  iconColors,\n  icons,\n  Shortcut,\n  ShortcutInfo,\n  Taction,\n  TactionType,\n  tags,\n  transforms,\n} from \"./util/shortcut\";\nimport { variables } from \"./types/types\";\nimport { shortcutTips } from \"./util/constants\";\nimport { ActionOnTactions } from \"./components/action-on-tactions\";\nimport { ActionOpenPreferences } from \"./components/action-open-preferences\";\n\nexport default function CreateShortcut(props: {\n  shortcut: Shortcut | undefined;\n  setRefresh: React.Dispatch<React.SetStateAction<number>>;\n}) {\n  const _editShortcut = props.shortcut;\n  const setRefresh =\n    typeof props.setRefresh == \"undefined\"\n      ? () => {\n          return;\n        }\n      : props.setRefresh;\n  const editShortcut = typeof _editShortcut == \"undefined\" ? new Shortcut() : _editShortcut;\n  const isEdit = typeof _editShortcut != \"undefined\";\n  const [localShortcuts, setLocalShortcuts] = useState<Shortcut[]>([]);\n  const [info, setInfo] = useState<ShortcutInfo>(editShortcut.info);\n  const [tactions, setTactions] = useState<Taction[]>([]);\n\n  useEffect(() => {\n    async function _fetchLocalShortcut() {\n      setInfo(editShortcut.info);\n      setTactions(editShortcut.tactions);\n      const _localShortcut = await LocalStorage.getItem<string>(\"shortcuts\");\n      if (typeof _localShortcut == \"string\") {\n        setLocalShortcuts(JSON.parse(_localShortcut));\n      }\n    }\n\n    _fetchLocalShortcut().then();\n  }, []);\n\n  return (\n    <Form\n      navigationTitle={isEdit ? \"Edit Text Shortcut\" : \"Create Text Shortcut\"}\n      actions={\n        <CreateShortcutActions\n          isEdit={isEdit}\n          info={info}\n          tactions={tactions}\n          localShortcuts={localShortcuts}\n          setTactions={setTactions}\n          setRefresh={setRefresh}\n        />\n      }\n    >\n      <Form.TextField\n        id={\"name\"}\n        title={\"Name\"}\n        defaultValue={editShortcut.info.name}\n        placeholder={\"Shortcut name\"}\n        onChange={(newValue) => {\n          info.name = newValue;\n          setInfo(info);\n        }}\n      />\n      <Form.Dropdown\n        id={\"icon\"}\n        title={\"Icon\"}\n        value={info.icon}\n        onChange={(newValue) => {\n          const _info = { ...info };\n          _info.icon = newValue as Icon;\n          setInfo(_info);\n        }}\n      >\n        {icons.map((value) => {\n          return (\n            <Form.Dropdown.Item\n              key={value[0]}\n              title={value[0]}\n              icon={{ source: value[1] as Icon, tintColor: info.iconColor }}\n              value={value[1]}\n            />\n          );\n        })}\n      </Form.Dropdown>\n      <Form.Dropdown\n        id={\"iconColor\"}\n        title={\"Color\"}\n        value={info.iconColor}\n        onChange={(newValue) => {\n          const _info = { ...info };\n          _info.iconColor = newValue as Color;\n          setInfo(_info);\n        }}\n      >\n        {iconColors.map((value) => {\n          return (\n            <Form.Dropdown.Item\n              key={value[0]}\n              title={value[0]}\n              icon={{ source: Icon.CircleFilled, tintColor: value[1] as Color }}\n              value={value[1] + \"\"}\n            />\n          );\n        })}\n      </Form.Dropdown>\n\n      <Form.TagPicker\n        id={\"tags\"}\n        title={\"Tag\"}\n        value={info.tag}\n        placeholder={\"Shortcut tags\"}\n        onChange={(newValue) => {\n          const _info = { ...info };\n          _info.tag = newValue;\n          setInfo(_info);\n        }}\n      >\n        {tags.map((value) => {\n          return <Form.TagPicker.Item key={value} title={value} icon={Icon.Hashtag} value={value} />;\n        })}\n      </Form.TagPicker>\n\n      {tactionForms(tactions, setTactions)}\n\n      <Form.Description text={shortcutTips.key} />\n      <Form.Description text={shortcutTips.action} />\n    </Form>\n  );\n}\n\nexport function tactionForms(tactions: Taction[], setTactions: React.Dispatch<React.SetStateAction<Taction[]>>) {\n  return tactions.map((taction, index, array) => {\n    switch (taction.type) {\n      case TactionType.DELETE: {\n        return (\n          <React.Fragment key={\"delete_fragment\" + index}>\n            <Form.Separator />\n            <Form.TextField\n              id={\"delete\" + index}\n              key={\"delete\" + index}\n              title={TactionType.DELETE + \" \" + (index + 1)}\n              placeholder={\"Strings or Regular Expressions\"}\n              info={\n                \"Support regular expressions with // and modifiers.\\n\" +\n                \"Delete all numbers: /\\\\d/g\\n\" +\n                \"Delete all Blank characters: /\\\\s/g\\n\" +\n                \"Delete all letter, number and underline: /\\\\w/g\"\n              }\n              value={array[index].content[0]}\n              onChange={(newValue) => {\n                const _tactions = [...tactions];\n                _tactions[index].content[0] = newValue;\n                setTactions(_tactions);\n              }}\n            />\n          </React.Fragment>\n        );\n      }\n      case TactionType.REPLACE: {\n        return (\n          <React.Fragment key={\"replace_fragment\" + index}>\n            <Form.Separator />\n            <Form.TextField\n              id={\"replace\" + index}\n              key={\"replace\" + index}\n              title={TactionType.REPLACE + \" \" + (index + 1)}\n              placeholder={\"Strings or Regular Expressions\"}\n              info={\n                \"Support regular expressions with // and modifiers.\\n\" +\n                \"Replace all numbers: /\\\\d/g\\n\" +\n                \"Replace all Blank characters: /\\\\s/g\\n\" +\n                \"Replace all letter, number and underline: /\\\\w/g\"\n              }\n              value={array[index].content[0]}\n              onChange={(newValue) => {\n                const _tactions = [...tactions];\n                _tactions[index].content[0] = newValue;\n                setTactions(_tactions);\n              }}\n            />\n            <Form.TextField\n              id={\"replace_with\" + index}\n              key={\"replace_with\" + index}\n              title={\"\"}\n              placeholder={\"with string\"}\n              value={array[index].content[1]}\n              onChange={(newValue) => {\n                const _tactions = [...tactions];\n                _tactions[index].content[1] = newValue;\n                setTactions(_tactions);\n              }}\n            />\n          </React.Fragment>\n        );\n      }\n      case TactionType.AFFIX: {\n        return (\n          <React.Fragment key={\"affix_fragment\" + index}>\n            <Form.Separator />\n            <Form.TextArea\n              id={\"affix\" + index}\n              key={\"affix\" + index}\n              title={TactionType.AFFIX + \" \" + (index + 1)}\n              value={array[index].content[0]}\n              placeholder={'Such as Prefix$VARIABLE$Suffix\\n\\nTemplate can only have a maximum of one \"Input\" variable'}\n              onChange={(newValue) => {\n                updateTactionContent(newValue, index, [...array], setTactions);\n              }}\n            />\n            <Form.Dropdown\n              id={\"affix_variable\" + index}\n              key={\"affix_variable\" + index}\n              defaultValue={\"\"}\n              onChange={async (newValue) => {\n                updateTactionContent(`${tactions[index].content[0]}${newValue}`, index, [...array], setTactions);\n              }}\n            >\n              {variables.map((variable) => {\n                return (\n                  <Form.Dropdown.Item key={\"variable\" + variable.title} title={variable.title} value={variable.value} />\n                );\n              })}\n            </Form.Dropdown>\n          </React.Fragment>\n        );\n      }\n      case TactionType.CASE: {\n        return (\n          <React.Fragment key={\"case_fragment\" + index}>\n            <Form.Separator />\n            <Form.Dropdown\n              id={\"case\" + index}\n              key={\"case\" + index}\n              title={TactionType.CASE + \" \" + (index + 1)}\n              defaultValue={array[index].content[0]}\n              onChange={async (newValue) => {\n                updateTactionContent(newValue, index, [...array], setTactions);\n              }}\n            >\n              {cases.map((cases, caseIndex) => {\n                return <Form.Dropdown.Item key={\"case\" + caseIndex} title={cases} value={cases} />;\n              })}\n            </Form.Dropdown>\n          </React.Fragment>\n        );\n      }\n      case TactionType.CODER: {\n        return (\n          <React.Fragment key={\"coder_fragment\" + index}>\n            <Form.Separator />\n            <Form.Dropdown\n              id={\"coder\" + index}\n              key={\"coder\" + index}\n              title={TactionType.CODER + \" \" + (index + 1)}\n              defaultValue={array[index].content[0]}\n              onChange={async (newValue) => {\n                updateTactionContent(newValue, index, [...array], setTactions);\n              }}\n            >\n              {coders.map((coder) => {\n                return <Form.Dropdown.Item key={\"coder\" + coder} title={coder} value={coder} />;\n              })}\n            </Form.Dropdown>\n          </React.Fragment>\n        );\n      }\n      case TactionType.TRANSFORM: {\n        return (\n          <React.Fragment key={\"transform_fragment\" + index}>\n            <Form.Separator />\n            <Form.Dropdown\n              id={\"transform\" + index}\n              key={\"transform\" + index}\n              title={TactionType.TRANSFORM + \" \" + (index + 1)}\n              defaultValue={array[index].content[0]}\n              onChange={async (newValue) => {\n                updateTactionContent(newValue, index, [...array], setTactions);\n              }}\n            >\n              {transforms.map((transform) => {\n                return <Form.Dropdown.Item key={\"convert\" + transform} title={transform} value={transform} />;\n              })}\n            </Form.Dropdown>\n          </React.Fragment>\n        );\n      }\n    }\n  });\n}\n\nfunction CreateShortcutActions(props: {\n  isEdit: boolean;\n  info: ShortcutInfo;\n  tactions: Taction[];\n  setTactions: React.Dispatch<React.SetStateAction<Taction[]>>;\n  localShortcuts: Shortcut[];\n  setRefresh: React.Dispatch<React.SetStateAction<number>>;\n}) {\n  const { isEdit, info, tactions, setTactions, localShortcuts, setRefresh } = props;\n  const { pop } = useNavigation();\n  return (\n    <ActionPanel>\n      <Action\n        title={isEdit ? \"Update Shortcut\" : \"Create Shortcut\"}\n        icon={isEdit ? Icon.RotateClockwise : Icon.PlusCircle}\n        onAction={async () => {\n          const _checkInfo = checkInfo(info.name, tactions);\n          const _checkAffix = checkAffix(tactions);\n          if (!_checkInfo.nameValid) {\n            await showToast(Toast.Style.Failure, `Shortcut name can't be empty.`);\n          } else if (!_checkInfo.tactionCountValid) {\n            await showToast(Toast.Style.Failure, `Shortcut requires at least one action.`);\n          } else if (!_checkInfo.tactionContentValid.valid) {\n            await showToast(\n              Toast.Style.Failure,\n              `Shortcut has empty actions.`,\n              `Check action${_checkInfo.tactionContentValid.actionIndex}.`,\n            );\n          } else if (!_checkAffix.valid) {\n            await showToast(\n              Toast.Style.Failure,\n              `Affix has more than one \"Input\" variable.`,\n              `Check action${_checkAffix.affixIndex}.`,\n            );\n          } else {\n            await createShortcut(info, tactions, localShortcuts);\n            pop();\n            setRefresh(Date.now());\n            await showToast(Toast.Style.Success, `Create shortcut success!`);\n          }\n        }}\n      />\n      <ActionOnTactions tactions={tactions} setTactions={setTactions} />\n\n      <ActionOpenPreferences />\n    </ActionPanel>\n  );\n}\n\nfunction updateTactionContent(\n  content: string,\n  index: number,\n  taction: Taction[],\n  setTactions: React.Dispatch<React.SetStateAction<Taction[]>>,\n  contentIndex = 0,\n) {\n  taction[index].content[contentIndex] = content;\n  setTactions(taction);\n}\n", "class VariableDate {\n  year: string;\n  month: string;\n  day: string;\n  hour: string;\n  minute: string;\n  second: string;\n  constructor(date = new Date()) {\n    this.year = date.getFullYear().toString();\n    this.month = date.getMonth().toString();\n    this.day = date.getDate().toString();\n    this.hour = date.getHours().toString();\n    this.minute = date.getMinutes().toString();\n    this.second = date.getSeconds().toString();\n  }\n}\n\nclass VariableInput {\n  text: string;\n  line: string;\n  word: string;\n  character: string;\n\n  constructor(text = \"\", line = \"\", word = \"\", character = \"\") {\n    this.text = text;\n    this.line = line;\n    this.word = word;\n    this.character = character;\n  }\n}\nclass VariableInfo {\n  email: string;\n  user: string;\n\n  constructor(email = \"\", user = \"\") {\n    this.email = email;\n    this.user = user;\n  }\n}\n\nexport class Types {\n  info: VariableInfo;\n  date: VariableDate;\n  input: VariableInput;\n\n  constructor(info = new VariableInfo(), date = new VariableDate(), input = new VariableInput()) {\n    this.info = info;\n    this.date = date;\n    this.input = input;\n  }\n}\n\nexport const variables = [\n  { title: \"Types\", value: \"\" },\n\n  { title: \"input.text\", value: \"$TEXT$\" },\n  { title: \"input.line\", value: \"$LINE$\" },\n  { title: \"input.word\", value: \"$WORD$\" },\n\n  { title: \"form.lineBreak\", value: \"$LINEBREAK$\" },\n\n  { title: \"date.year\", value: \"$YEAR$\" },\n  { title: \"date.month\", value: \"$MONTH$\" },\n  { title: \"date.day\", value: \"$DAY$\" },\n\n  { title: \"date.hour\", value: \"$HOUR$\" },\n  { title: \"date.minute\", value: \"$MINUTE$\" },\n  { title: \"date.second\", value: \"$SECOND$\" },\n  { title: \"date.timestamp\", value: \"$TIMESTAMP$\" },\n\n  { title: \"text.statistics\", value: \"$STATISTICS$\" },\n];\n", "export const shortcutTips = {\n  key: \"\u2318D       \u2318E     \u2318N      \u2318R           \u2318T         \u2318L\",\n  action: \"Delete,Coder,Case,Replace,Transform,Template\",\n};\n", "import { Taction, TactionType } from \"../util/shortcut\";\nimport React from \"react\";\nimport { Action, ActionPanel, Icon } from \"@raycast/api\";\n\nexport function ActionOnTactions(props: {\n  tactions: Taction[];\n  setTactions: React.Dispatch<React.SetStateAction<Taction[]>>;\n}) {\n  const tactions = props.tactions;\n  const setTactions = props.setTactions;\n  return (\n    <>\n      <ActionPanel.Section title=\"Add Action\">\n        <Action\n          title={TactionType.DELETE}\n          icon={Icon.Plus}\n          shortcut={{ modifiers: [\"cmd\"], key: \"d\" }}\n          onAction={async () => {\n            setTactions([...tactions, { type: TactionType.DELETE, content: [\"\"] }]);\n          }}\n        />\n        <Action\n          title={TactionType.CODER}\n          icon={Icon.Plus}\n          shortcut={{ modifiers: [\"cmd\"], key: \"e\" }}\n          onAction={async () => {\n            setTactions([...tactions, { type: TactionType.CODER, content: [\"\"] }]);\n          }}\n        />\n        <Action\n          title={TactionType.CASE}\n          icon={Icon.Plus}\n          shortcut={{ modifiers: [\"cmd\"], key: \"n\" }}\n          onAction={async () => {\n            setTactions([...tactions, { type: TactionType.CASE, content: [\"\"] }]);\n          }}\n        />\n        <Action\n          title={TactionType.REPLACE}\n          icon={Icon.Plus}\n          shortcut={{ modifiers: [\"cmd\"], key: \"r\" }}\n          onAction={async () => {\n            setTactions([...tactions, { type: TactionType.REPLACE, content: [\"\"] }]);\n          }}\n        />\n        <Action\n          title={TactionType.TRANSFORM}\n          icon={Icon.Plus}\n          shortcut={{ modifiers: [\"cmd\"], key: \"t\" }}\n          onAction={async () => {\n            setTactions([...tactions, { type: TactionType.TRANSFORM, content: [\"\"] }]);\n          }}\n        />\n        <Action\n          title={TactionType.AFFIX}\n          icon={Icon.Plus}\n          shortcut={{ modifiers: [\"cmd\"], key: \"l\" }}\n          onAction={async () => {\n            setTactions([...tactions, { type: TactionType.AFFIX, content: [\"\"] }]);\n          }}\n        />\n      </ActionPanel.Section>\n\n      <ActionPanel.Section title=\"Remove Action\">\n        <Action\n          title=\"Remove Last Action\"\n          icon={Icon.Trash}\n          shortcut={{ modifiers: [\"ctrl\"], key: \"x\" }}\n          onAction={async () => {\n            const _tactions = [...tactions];\n            _tactions.pop();\n            setTactions(_tactions);\n          }}\n        />\n        <Action\n          title=\"Remove All Actions\"\n          icon={Icon.ExclamationMark}\n          shortcut={{ modifiers: [\"shift\", \"ctrl\"], key: \"x\" }}\n          onAction={async () => {\n            setTactions([]);\n          }}\n        />\n      </ActionPanel.Section>\n    </>\n  );\n}\n", "import React from \"react\";\nimport { Action, ActionPanel, Icon, openCommandPreferences } from \"@raycast/api\";\n\nexport function ActionOpenPreferences() {\n  return (\n    <ActionPanel.Section>\n      <Action\n        icon={Icon.Gear}\n        title=\"Open Command Preferences\"\n        shortcut={{ modifiers: [\"shift\", \"cmd\"], key: \",\" }}\n        onAction={openCommandPreferences}\n      />\n    </ActionPanel.Section>\n  );\n}\n", "import React from \"react\";\nimport { handleLiveTemplate, runShortcut, Shortcut } from \"../util/shortcut\";\nimport { Action, Clipboard, Icon, showHUD, showToast, Toast } from \"@raycast/api\";\nimport { fetchItemInput } from \"../util/input\";\n\nexport function ActionRunShortcut(props: {\n  primaryAction: string;\n  closeMainWindow: boolean;\n  shortcut: Shortcut;\n  visitItem: (item: Shortcut) => void;\n}) {\n  const { primaryAction, closeMainWindow, shortcut, visitItem } = props;\n  const tactions = shortcut.tactions;\n  return (\n    <>\n      <Action\n        title={primaryAction === \"Paste\" ? \"Paste to Active App\" : \"Copy to Clipboard\"}\n        icon={primaryAction === \"Paste\" ? Icon.Window : Icon.Clipboard}\n        onAction={async () => {\n          visitItem(shortcut);\n          const _runShortcut = runShortcut(await fetchItemInput(), handleLiveTemplate(tactions));\n          if (primaryAction === \"Paste\") {\n            await Clipboard.paste(_runShortcut);\n            if (closeMainWindow) {\n              await showHUD(\"Pasted result to active app\");\n            } else {\n              await showToast(Toast.Style.Success, \"Pasted result to active app!\");\n            }\n          } else {\n            await Clipboard.copy(_runShortcut);\n            if (closeMainWindow) {\n              await showHUD(\"Copy result to clipboard\");\n            } else {\n              await showToast(Toast.Style.Success, \"Copy result to clipboard!\");\n            }\n          }\n        }}\n      />\n      <Action\n        title={primaryAction === \"Copy\" ? \"Paste to Active App\" : \"Copy to Clipboard\"}\n        icon={primaryAction === \"Copy\" ? Icon.Window : Icon.Clipboard}\n        onAction={async () => {\n          visitItem(shortcut);\n          const _runShortcut = runShortcut(await fetchItemInput(), handleLiveTemplate(tactions));\n          if (primaryAction === \"Copy\") {\n            await Clipboard.paste(_runShortcut);\n            if (closeMainWindow) {\n              await showHUD(\"Copy result to clipboard\");\n            } else {\n              await showToast(Toast.Style.Success, \"Copy result to clipboard!\");\n            }\n          } else {\n            await Clipboard.copy(_runShortcut);\n            if (closeMainWindow) {\n              await showHUD(\"Paste result to active app\");\n            } else {\n              await showToast(Toast.Style.Success, \"Paste result to active app!\");\n            }\n          }\n        }}\n      />\n    </>\n  );\n}\n", "import { getSelectedText, Clipboard } from \"@raycast/api\";\nimport { isEmpty } from \"./utils\";\n\nexport const fetchItemInput = async () => {\n  return await fetchItemInputSelectedFirst();\n};\n\nexport const fetchItemInputSelectedFirst = async () => {\n  return getSelectedText()\n    .then(async (text) => (!isEmpty(text) ? text : await getClipboardText()))\n    .catch(async () => await getClipboardText())\n    .then((item) => (!isEmpty(item) ? item : \"\"))\n    .catch(() => \"\" as string);\n};\n\nexport const fetchItemInputClipboardFirst = async () => {\n  return getClipboardText()\n    .then(async (text) => (!isEmpty(text) ? text : await getSelectedText()))\n    .catch(async () => await getSelectedText())\n    .then((item) => (!isEmpty(item) ? item : \"\"))\n    .catch(() => \"\" as string);\n};\n\nconst getClipboardText = async () => {\n  const content = await Clipboard.readText();\n  return typeof content == \"undefined\" ? \"\" : content;\n};\n"],
  "mappings": "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A,IAAS,OAAA,eAAAF,EAAA,iBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,cAAc,CAAA,CAAA,ICHvB,IAAAC,GAAAC,EAAA,CAAAC,GAAAC,KAAA,KAAMC,GAAe,CACnB,MACA,MACA,MACA,MACA,KACA,MACA,IACF,EAEMC,GAAW,CACf,IACA,KACA,KACF,EAEMC,GAAe,CACnB,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,OACA,SACA,KACA,KACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,MACA,KACA,aACA,cACA,UACA,OACA,SACA,SACA,YACA,YACA,YACA,MACA,OACA,KACA,SACA,OACA,OACA,QACA,OACA,KACA,MACA,KACA,OACA,WACA,OACA,OACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,UACA,KACA,SACA,UACA,QACA,aACA,SACA,QACA,KACA,OACA,SACA,MACA,OACA,SACA,SACF,EAEAH,GAAO,QAAU,IAAI,IAAI,CACvB,GAAGC,GACH,GAAGC,GACH,GAAGC,EACL,CAAC,IC5FD,IAAAC,GAAAC,EAAA,CAAAC,GAAAC,KAAA,KAAMC,GAAW,CACf,OACA,YACA,SACA,cACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,SACA,WACA,aACA,cACA,KACA,KACA,MACA,eACA,eACA,YACA,SACA,SACA,MACA,OACA,KACA,aACA,aACA,OACA,YACA,UACA,UACA,UACA,SACA,OACA,aACA,MACA,UACA,KACA,KACA,KACA,MACA,SACA,OACA,UACA,MACA,SACA,QACA,MACA,gBACA,gBACA,MACA,MACA,IACA,KACA,UACA,WACA,MACA,MACF,EAEAD,GAAO,QAAUC,KC9DjB,IAAAC,GAAAC,EAAA,CAAAC,GAAAC,KAAA,CACA,IAAMC,GAAY,KACZC,GAAW,KAEXC,EAAO,4BACPC,GAAQ,IAAI,OAAO,yCAAyCD,CAAI,OAAOA,CAAI,MAAMA,CAAI,cAASA,CAAI,KAAM,GAAG,EAE3GE,GAAkBH,GAAYA,EAAS,IAAII,GA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",
  "names": ["Md5", "str", "raw", "x", "hc", "ho", "n", "offset", "j", "i", "k", "a", "b", "c", "d", "buf8", "buf32", "bufLen", "code", "input", "s", "state", "buf", "dataBitsLen", "matches", "lo", "hi", "exports", "md5_1", "Md5FileHasher", "_callback", "_async", "_partSize", "blob", "self", "e", "endbyte", "current_part", "exports", "ParallelHasher", "workerUri", "workerOptions", "self", "err", "blob", "promise", "resolve", "reject", "evt", "data", "_a", "_b", "exports", "md5_1", "exports", "md5_file_hasher_1", "parallel_hasher_1", "require_lower_case", "__commonJSMin", "exports", "module", "conjunctions", "articles", "prepositions", "require_specials", "__commonJSMin", "exports", "module", "intended", "require_lib", "__commonJSMin", "exports", "module", "lowerCase", "specials", "word", "regex", "convertToRegExp", "s", "parseMatch", "match", "firstCharacter", "str", "options", "m", "lead", "forced", "lower", "rest", "offset", "string", "isLastWord", "parsedMatch", "fullLower", "customSpecials", "replace", "pattern", "run_shortcut_now_exports", "__export", "CreateShortcut", "__toCommonJS", "import_react", "import_api", "import_api", "regexPunctuation", "isEmpty", "string", "calculateCharacter", "input", "iTotal", "sTotal", "eTotal", "iNum", "i", "c", "buildRegexp", "regSource", "regModifier", "e", "camelCaseToOtherCase", "str", "linkCharacter", "finalStr", "outString", "value", "index", "isUpper", "char", "import_ts_md5", "import_title", "Tags", "tags", "icons", "iconColors", "Cases", "cases", "Coders", "coders", "Transform", "transforms", "Shortcut", "info", "icons", "tactions", "handleLiveTemplate", "tactions", "i", "match", "runShortcut", "input", "output", "value", "searchValue", "buildRegexp", "isEmpty", "tactionAffix", "tactionCase", "tactionCoder", "tactionTransform", "e", "taction", "date", "_cc", "calculateCharacter", "statistics", "inputArray", "outputArray", "_output", "lineArray", "outputLineArray", "_outLine", "wordArray", "j", "title", "regexPunctuation", "_input", "camelCaseToOtherCase", "import_react", "import_api", "variables", "shortcutTips", "import_api", "import_jsx_runtime", "ActionOnTactions", "props", "tactions", "setTactions", "_tactions", "import_api", "import_jsx_runtime", "ActionOpenPreferences", "import_jsx_runtime", "tactionForms", "tactions", "setTactions", "taction", "index", "array", "React", "newValue", "_tactions", "updateTactionContent", "variables", "variable", "cases", "caseIndex", "coders", "coder", "transforms", "transform", "updateTactionContent", "content", "index", "taction", "setTactions", "contentIndex", "import_api", "import_api", "fetchItemInput", "fetchItemInputSelectedFirst", "text", "isEmpty", "getClipboardText", "item", "getClipboardText", "content", "import_jsx_runtime", "ActionRunShortcut", "props", "primaryAction", "closeMainWindow", "shortcut", "visitItem", "tactions", "_runShortcut", "runShortcut", "fetchItemInput", "handleLiveTemplate", "import_jsx_runtime", "CreateShortcut", "tactions", "setTactions", "primaryAction", "closeMainWindow", "RunShortcutActions", "tactionForms", "shortcutTips", "props", "shortcutInfo", "shortcut", "Shortcut", "ActionRunShortcut", "ActionOnTactions", "ActionOpenPreferences"]
}
