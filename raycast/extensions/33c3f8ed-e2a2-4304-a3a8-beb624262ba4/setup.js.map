{
  "version": 3,
  "sources": ["../src/setup.tsx", "../node_modules/nanoid/index.js", "../node_modules/nanoid/url-alphabet/index.js", "../src/components/forms/website-upsert.tsx", "../src/components/view-empty.tsx", "../src/components/actions/website-add.tsx", "../src/components/actions/website-delete.tsx", "../src/components/actions/website-edit.tsx"],
  "sourcesContent": ["import { ActionPanel, List, LocalStorage } from \"@raycast/api\";\nimport { nanoid } from \"nanoid\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { ViewEmpty } from \"./components\";\nimport { ActionWebsiteAdd, ActionWebsiteDelete } from \"./components/actions\";\nimport ActionWebsiteEdit from \"./components/actions/website-edit\";\nimport { Website } from \"./types\";\n\ntype State = {\n  isLoading: boolean;\n  websites: Website[];\n};\n\nexport default () => {\n  const [state, setState] = useState<State>({\n    isLoading: true,\n    websites: [],\n  });\n\n  useEffect(() => {\n    (async () => {\n      const storedWebsites = await LocalStorage.getItem<string>(\"websites\");\n\n      if (!storedWebsites) {\n        setState((previous) => ({ ...previous, isLoading: false }));\n        return;\n      }\n\n      try {\n        const websites: Website[] = JSON.parse(storedWebsites);\n        setState((previous) => ({ ...previous, websites, isLoading: false }));\n      } catch (e) {\n        setState((previous) => ({ ...previous, websites: [], isLoading: false }));\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    LocalStorage.setItem(\"websites\", JSON.stringify(state.websites));\n  }, [state.websites]);\n\n  const handleCreate = useCallback(\n    (url: string) => {\n      const newWebsites = [...state.websites, { id: nanoid(), url }];\n      setState((previous) => ({ ...previous, websites: newWebsites }));\n    },\n    [state.websites, setState]\n  );\n\n  const handleEdit = useCallback(\n    (id: string, url: string) => {\n      const newWebsites = [...state.websites].map((website) => ({\n        id: website.id,\n        url: id === website.id ? url : website.url,\n      }));\n      setState((previous) => ({ ...previous, websites: newWebsites }));\n    },\n    [state.websites, setState]\n  );\n\n  const handleDelete = useCallback(\n    (index: number) => {\n      const newWebsites = [...state.websites];\n      newWebsites.splice(index, 1);\n      setState((previous) => ({ ...previous, websites: newWebsites }));\n    },\n    [state.websites, setState]\n  );\n\n  return (\n    <List isLoading={state.isLoading}>\n      <ViewEmpty onCreate={handleCreate} />\n      {state.websites?.map((website, index) => (\n        <List.Item\n          key={website.id}\n          title={website.url}\n          icon={`https://www.google.com/s2/favicons?domain=${website.url}&sz=64`}\n          actions={\n            <ActionPanel>\n              <ActionPanel.Section>\n                <ActionWebsiteAdd onCreate={handleCreate} />\n                <ActionWebsiteEdit\n                  defaultUrl={website.url}\n                  onEdit={(newWebsite) => handleEdit(website.id, newWebsite)}\n                />\n                <ActionWebsiteDelete onDelete={() => handleDelete(index)} />\n              </ActionPanel.Section>\n            </ActionPanel>\n          }\n        />\n      ))}\n    </List>\n  );\n};\n", "import { randomFillSync } from 'crypto'\nimport { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet }\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    randomFillSync(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    randomFillSync(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nexport let random = bytes => {\n  fillPool((bytes -= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  fillPool((size -= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\n", "export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n", "import { Action, ActionPanel, Form, Icon, useNavigation } from \"@raycast/api\";\nimport { useCallback, useState } from \"react\";\n\ninterface FormWebsiteUpsertInterface {\n  defaultUrl?: string;\n  onCreate?: (url: string) => void;\n  onEdit?: (url: string) => void;\n}\n\nexport const FormWebsiteUpsert = ({ defaultUrl, onCreate, onEdit }: FormWebsiteUpsertInterface) => {\n  const [urlError, setUrlError] = useState<string | undefined>();\n  const { pop } = useNavigation();\n\n  function dropUrlErrorIfNeeded() {\n    if (urlError && urlError.length > 0) {\n      setUrlError(undefined);\n    }\n  }\n\n  const handleSubmit = useCallback(\n    (values: { url: string }) => {\n      if (\n        values.url.match(\n          /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/\n        )\n      ) {\n        if (onCreate) {\n          onCreate(values.url);\n          pop();\n        }\n        if (onEdit) {\n          onEdit(values.url);\n          pop();\n        }\n      } else {\n        setUrlError(\"Please enter valid URL\");\n      }\n    },\n    [onCreate, pop]\n  );\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          {onCreate && <Action.SubmitForm title=\"Add Website\" icon={Icon.PlusCircle} onSubmit={handleSubmit} />}\n          {onEdit && <Action.SubmitForm title=\"Edit Website\" icon={Icon.Pencil} onSubmit={handleSubmit} />}\n        </ActionPanel>\n      }\n    >\n      <Form.TextField\n        id=\"url\"\n        title=\"URL\"\n        defaultValue={defaultUrl}\n        error={urlError}\n        onChange={() => dropUrlErrorIfNeeded()}\n      />\n    </Form>\n  );\n};\n\nexport default FormWebsiteUpsert;\n", "import { ActionPanel, List } from \"@raycast/api\";\nimport CreateTodoAction from \"./actions/website-add\";\n\ninterface ViewEmptyInterface {\n  onCreate: (url: string) => void;\n}\n\nexport const ViewEmpty = ({ onCreate }: ViewEmptyInterface) => {\n  return (\n    <List.EmptyView\n      title=\"No websites found\"\n      description=\"You have not added any websites yet. Why not add some?\"\n      actions={\n        <ActionPanel>\n          <CreateTodoAction onCreate={onCreate} />\n        </ActionPanel>\n      }\n    />\n  );\n};\nexport default ViewEmpty;\n", "import { Action, Icon } from \"@raycast/api\";\nimport { FormWebsiteUpsert } from \"../forms\";\n\ninterface ActionWebsiteAddInterface {\n  onCreate(url: string): void;\n}\n\nexport const ActionWebsiteAdd = ({ onCreate }: ActionWebsiteAddInterface) => {\n  return (\n    <Action.Push\n      icon={Icon.PlusCircle}\n      title=\"Add Website\"\n      shortcut={{ modifiers: [\"cmd\"], key: \"n\" }}\n      target={<FormWebsiteUpsert defaultUrl=\"https://\" onCreate={onCreate} />}\n    />\n  );\n};\n\nexport default ActionWebsiteAdd;\n", "import { Action, Alert, confirmAlert, Icon } from \"@raycast/api\";\n\ninterface ActionWebsiteDeleteInterface {\n  onDelete(): void;\n}\n\nexport const ActionWebsiteDelete = ({ onDelete }: ActionWebsiteDeleteInterface) => {\n  return (\n    <Action\n      icon={Icon.Trash}\n      title=\"Delete Website\"\n      style={Action.Style.Destructive}\n      shortcut={{ modifiers: [\"ctrl\"], key: \"x\" }}\n      onAction={async () => {\n        const options: Alert.Options = {\n          title: \"Are you sure to delete the website?\",\n          primaryAction: {\n            title: \"Delete\",\n            onAction: onDelete,\n            style: Alert.ActionStyle.Destructive,\n          },\n        };\n        await confirmAlert(options);\n      }}\n    />\n  );\n};\n\nexport default ActionWebsiteDelete;\n", "import { Action, Icon } from \"@raycast/api\";\nimport { FormWebsiteUpsert } from \"../forms\";\n\ninterface ActionWebsiteEditInterface {\n  defaultUrl: string;\n  onEdit(url: string): void;\n}\n\nexport const ActionWebsiteEdit = ({ defaultUrl, onEdit }: ActionWebsiteEditInterface) => {\n  return (\n    <Action.Push\n      icon={Icon.Pencil}\n      title=\"Edit Website\"\n      shortcut={{ modifiers: [\"cmd\"], key: \"e\" }}\n      target={<FormWebsiteUpsert defaultUrl={defaultUrl} onEdit={onEdit} />}\n    />\n  );\n};\n\nexport default ActionWebsiteEdit;\n"],
  "mappings": "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",
  "names": ["setup_exports", "__export", "setup_default", "__toCommonJS", "import_api", "import_crypto", "urlAlphabet", "POOL_SIZE_MULTIPLIER", "pool", "poolOffset", "fillPool", "bytes", "nanoid", "size", "fillPool", "id", "i", "poolOffset", "urlAlphabet", "pool", "import_react", "import_api", "import_react", "import_jsx_runtime", "FormWebsiteUpsert", "defaultUrl", "onCreate", "onEdit", "urlError", "setUrlError", "pop", "dropUrlErrorIfNeeded", "handleSubmit", "values", "import_api", "import_api", "import_jsx_runtime", "ActionWebsiteAdd", "onCreate", "FormWebsiteUpsert", "website_add_default", "import_jsx_runtime", "ViewEmpty", "onCreate", "website_add_default", "import_api", "import_jsx_runtime", "ActionWebsiteDelete", "onDelete", "options", "import_api", "import_jsx_runtime", "ActionWebsiteEdit", "defaultUrl", "onEdit", "FormWebsiteUpsert", "website_edit_default", "import_jsx_runtime", "setup_default", "state", "setState", "storedWebsites", "previous", "websites", "handleCreate", "url", "newWebsites", "nanoid", "handleEdit", "id", "website", "handleDelete", "index", "ViewEmpty", "ActionWebsiteAdd", "website_edit_default", "newWebsite", "ActionWebsiteDelete"]
}
